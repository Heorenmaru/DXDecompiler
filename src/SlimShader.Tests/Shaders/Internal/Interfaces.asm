//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 g1;                         // Offset:    0 Size:    16
//   
//   struct cClass6
//   {
//       
//       float4 foo;                    // Offset:   16
//
//   } gAbstractInterface3;             // Offset:   16 Size:    16
//   
//   struct cClass7
//   {
//       
//       float4 foo;                    // Offset:   32
//
//   } gAbstractInterface4;             // Offset:   32 Size:    16
//
// }
//
// interfaces $ThisPointer
// {
//
//   interface iInterface1 gAbstractInterface1;// Offset:    0 Size:     1
//   interface iInterface2 gAbstractInterface2;// Offset:    1 Size:     1
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// $Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
//
// Available Class Types:
//
// Name                             ID CB Stride Texture Sampler
// ------------------------------ ---- --------- ------- -------
// cClass2                           0         2       0       0
// cClass1                           1         2       0       0
// cClass5                           2         0       0       0
// cClass4                           3         0       0       0
// cClass3                           4         0       0       0
//
// Interface slots, 2 total:
//
//             Slots
// +----------+---------+---------------------------------------
// | Type ID  |   0     |0    1    
// | Table ID |         |0    1    
// +----------+---------+---------------------------------------
// | Type ID  |   1     |2    3    4    
// | Table ID |         |2    3    4    
// +----------+---------+---------------------------------------
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_function_body fb0
dcl_function_body fb1
dcl_function_body fb2
dcl_function_body fb3
dcl_function_body fb4
dcl_function_body fb5
dcl_function_body fb6
dcl_function_body fb7
dcl_function_body fb8
dcl_function_body fb9
dcl_function_body fb10
dcl_function_body fb11
dcl_function_body fb12
dcl_function_body fb13
dcl_function_body fb14
dcl_function_table ft0 = {fb0, fb2, fb4, fb6, fb8, fb10}
dcl_function_table ft1 = {fb1, fb3, fb5, fb7, fb9, fb11}
dcl_function_table ft2 = {fb12}
dcl_function_table ft3 = {fb13}
dcl_function_table ft4 = {fb14}
dcl_interface fp0[1][6] = {ft0, ft1}
dcl_interface fp1[1][1] = {ft2, ft3, ft4}
dcl_input_ps linear v0.xyzw
dcl_output o0.xyzw
dcl_temps 3
fcall fp0[0][0]
fcall fp0[0][1]
add r0.xyzw, r0.xyzw, r1.xyzw
fcall fp0[0][2]
add r0.xyzw, r0.xyzw, r1.xyzw
fcall fp0[0][3]
add r0.xyzw, r0.xyzw, r1.xyzw
fcall fp0[0][4]
add r0.xyzw, r0.xyzw, r1.xyzw
fcall fp0[0][5]
add r0.xyzw, r0.xyzw, r1.xyzw
fcall fp1[0][0]
add r0.xyzw, r0.xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[1].xyzw
add o0.xyzw, r0.xyzw, cb0[2].xyzw
ret 
label fb0
mov r1.xy, this[0].yxyy
add r1.xyzw, v0.xyzw, cb[r1.y + 0][r1.x + 1].xyzw
add r0.xyzw, r1.xyzw, cb0[0].xyzw
ret 
label fb1
mov r1.xy, this[0].yxyy
mov r0.xyzw, cb[r1.y + 0][r1.x + 1].xyzw
ret 
label fb2
mov r2.xy, this[0].yxyy
add r2.xyzw, v0.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
add r1.xyzw, r2.xyzw, cb0[0].xyzw
ret 
label fb3
mov r2.xy, this[0].yxyy
mov r1.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
ret 
label fb4
mov r2.xy, this[0].yxyy
add r2.xyzw, v0.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
add r1.xyzw, r2.xyzw, cb0[0].xyzw
ret 
label fb5
mov r2.xy, this[0].yxyy
mov r1.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
ret 
label fb6
mov r2.xy, this[0].yxyy
add r2.xyzw, v0.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
add r1.xyzw, r2.xyzw, cb0[0].xyzw
ret 
label fb7
mov r2.xy, this[0].yxyy
mov r1.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
ret 
label fb8
mov r2.xy, this[0].yxyy
add r2.xyzw, v0.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
add r1.xyzw, r2.xyzw, cb0[0].xyzw
ret 
label fb9
mov r2.xy, this[0].yxyy
mov r1.xyzw, cb[r2.y + 0][r2.x + 1].xyzw
ret 
label fb10
add r1.xyzw, v0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ret 
label fb11
add r1.xyzw, v0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000)
ret 
label fb12
add r1.xyzw, v0.xyzw, cb0[0].xyzw
ret 
label fb13
add r1.xyzw, v0.xyzw, cb0[0].xyzw
ret 
label fb14
add r1.xyzw, v0.xyzw, cb0[0].xyzw
ret 
// Approximately 61 instruction slots used
