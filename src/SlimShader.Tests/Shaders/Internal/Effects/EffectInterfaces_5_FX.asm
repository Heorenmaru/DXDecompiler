//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer $Globals
{
    float4  g1;                         // Offset:    0, size:   16
    cClass1 gAbstractInterface6;        // Offset:   16, size:   32
    cClass2 gAbstractInterface7;        // Offset:   48, size:   32
    cClass2 gAbstractInterface8[3];     // Offset:   80, size:   96
}

//
// 5 local object(s)
//
ByteAddressBuffer Buffer0;
ByteAddressBuffer Buffer1;
RWByteAddressBuffer BufferOut;
PixelShader PS = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Buffer Definitions: 
        //
        // cbuffer $Globals
        // {
        //
        //   float4 g1;                         // Offset:    0 Size:    16
        //   
        //   struct cClass1
        //   {
        //       
        //       float4 foo;                    // Offset:   16
        //       float4 bar;                    // Offset:   32
        //
        //   } gAbstractInterface6;             // Offset:   16 Size:    32
        //   
        //   struct cClass2
        //   {
        //       
        //       float4 foo;                    // Offset:   48
        //       float4 bar;                    // Offset:   64
        //
        //   } gAbstractInterface7;             // Offset:   48 Size:    32
        //   
        //   struct cClass2
        //   {
        //       
        //       float4 foo;                    // Offset:   80
        //       float4 bar;                    // Offset:   96
        //
        //   } gAbstractInterface8[3];          // Offset:   80 Size:    96
        //
        // }
        //
        // interfaces $ThisPointer
        // {
        //
        //   interface iInterface1 gAbstractInterface1;// Offset:    0 Size:     1
        //   interface iInterface1 gAbstractInterface2;// Offset:  N/A Size:   N/A [unused]
        //   interface iInterface2 gAbstractInterface4;// Offset:  N/A Size:   N/A [unused]
        //   interface iInterface2 gAbstractInterface5[4];// Offset:  N/A Size:   N/A [unused]
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // $Globals                          cbuffer      NA          NA            cb0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // COLOR                    0   xyzw        0     NONE   float   xyzw
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
        //
        //
        // Available Class Types:
        //
        // Name                             ID CB Stride Texture Sampler
        // ------------------------------ ---- --------- ------- -------
        // cClass2                           0         2       0       0
        // cClass1                           1         2       0       0
        //
        // Available Class Instances:
        //
        // Name                        Type CB CB Offset Texture Sampler
        // --------------------------- ---- -- --------- ------- -------
        // gAbstractInterface6            1  0         1       -       -
        // gAbstractInterface7            0  0         3       -       -
        // gAbstractInterface8[3]         0  0         5       -       -
        //
        // Interface slots, 1 total:
        //
        //             Slots
        // +----------+---------+---------------------------------------
        // | Type ID  |   0     |0    1    
        // | Table ID |         |0    1    
        // +----------+---------+---------------------------------------
        ps_5_0
        dcl_globalFlags refactoringAllowed
        dcl_constantbuffer CB0[11], immediateIndexed
        dcl_function_body fb0
        dcl_function_body fb1
        dcl_function_table ft0 = {fb0}
        dcl_function_table ft1 = {fb1}
        dcl_interface fp0[1][1] = {ft0, ft1}
        dcl_input_ps linear v0.xyzw
        dcl_output o0.xyzw
        dcl_temps 2
        fcall fp0[0][0]
        add r1.xyzw, v0.xyzw, cb0[4].xyzw
        add r1.xyzw, r1.xyzw, cb0[0].xyzw
        add o0.xyzw, r0.xyzw, r1.xyzw
        ret 
        label fb0
        mov r1.xy, this[0].yxyy
        add r1.xyzw, v0.xyzw, cb[r1.y + 0][r1.x + 1].xyzw
        add r0.xyzw, r1.xyzw, cb0[0].xyzw
        ret 
        label fb1
        mov r1.xy, this[0].yxyy
        mov r0.xyzw, cb[r1.y + 0][r1.x + 1].xyzw
        ret 
        // Approximately 12 instruction slots used
            
    };
ComputeShader CS5 = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Buffer Definitions: 
        //
        // cbuffer $Globals
        // {
        //
        //   float4 g1;                         // Offset:    0 Size:    16
        //   
        //   struct cClass1
        //   {
        //       
        //       float4 foo;                    // Offset:   16
        //       float4 bar;                    // Offset:   32
        //
        //   } gAbstractInterface6;             // Offset:   16 Size:    32
        //   
        //   struct cClass2
        //   {
        //       
        //       float4 foo;                    // Offset:   48
        //       float4 bar;                    // Offset:   64
        //
        //   } gAbstractInterface7;             // Offset:   48 Size:    32
        //   
        //   struct cClass2
        //   {
        //       
        //       float4 foo;                    // Offset:   80
        //       float4 bar;                    // Offset:   96
        //
        //   } gAbstractInterface8[3];          // Offset:   80 Size:    96
        //
        // }
        //
        // interfaces $ThisPointer
        // {
        //
        //   interface iInterface1 gAbstractInterface1;// Offset:    0 Size:     1
        //   interface iInterface1 gAbstractInterface2;// Offset:  N/A Size:   N/A [unused]
        //   interface iInterface2 gAbstractInterface4;// Offset:  N/A Size:   N/A [unused]
        //   interface iInterface2 gAbstractInterface5[4];// Offset:  N/A Size:   N/A [unused]
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // Buffer0                           texture    byte         r/o             t0      1 
        // Buffer1                           texture    byte         r/o             t1      1 
        // BufferOut                             UAV    byte         r/w             u0      1 
        // $Globals                          cbuffer      NA          NA            cb0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // no Input
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // no Output
        //
        // Available Class Types:
        //
        // Name                             ID CB Stride Texture Sampler
        // ------------------------------ ---- --------- ------- -------
        // cClass2                           0         2       0       0
        // cClass1                           1         2       0       0
        //
        // Available Class Instances:
        //
        // Name                        Type CB CB Offset Texture Sampler
        // --------------------------- ---- -- --------- ------- -------
        // gAbstractInterface6            1  0         1       -       -
        // gAbstractInterface7            0  0         3       -       -
        // gAbstractInterface8[3]         0  0         5       -       -
        //
        // Interface slots, 1 total:
        //
        //             Slots
        // +----------+---------+---------------------------------------
        // | Type ID  |   0     |0    1    
        // | Table ID |         |0    1    
        // +----------+---------+---------------------------------------
        cs_5_0
        dcl_globalFlags refactoringAllowed
        dcl_constantbuffer CB0[11], immediateIndexed
        dcl_resource_raw t0
        dcl_resource_raw t1
        dcl_uav_raw u0
        dcl_function_body fb0
        dcl_function_body fb1
        dcl_function_table ft0 = {fb0}
        dcl_function_table ft1 = {fb1}
        dcl_interface fp0[1][1] = {ft0, ft1}
        dcl_input vThreadID.x
        dcl_temps 3
        dcl_thread_group 1, 1, 1
        ishl r0.x, vThreadID.x, l(3)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.yz, r0.x, t0.xxyx
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xy, r0.x, t1.xyxx
        fcall fp0[0][0]
        add r0.w, r0.w, r1.y
        add r0.w, r0.w, cb0[2].x
        iadd r1.x, r0.y, r1.x
        add r1.y, r0.w, r0.z
        store_raw u0.xy, r0.x, r1.xyxx
        ret 
        label fb0
        utof r1.z, vThreadID.x
        mov r1.w, this[0].y
        mov r2.x, this[0].x
        add r1.z, r1.z, cb[r2.x + 0][r1.w + 1].x
        add r0.w, r1.z, cb0[0].x
        ret 
        label fb1
        mov r1.zw, this[0].yyyx
        mov r0.w, cb[r1.w + 0][r1.z + 1].x
        ret 
        // Approximately 19 instruction slots used
            
    };

//
// 4 local interface(s)
//
iInterface1 gAbstractInterface1;
iInterface1 gAbstractInterface2;
iInterface2 gAbstractInterface4;
iInterface2 gAbstractInterface5[4];

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 tech1
    {
        pass p0
        {
            PixelShader = PS;
            ComputeShader = CS5;
        }

    }

}

