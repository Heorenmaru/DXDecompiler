//
// Library:  flags 0, 4 functions:
//   0  TestFunction
//   1  TestFunction2
//   2  TestFunction3
//   3  TestFunction4
//
// Created by:  Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 1):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction                                                o0    1   xyz  out float3
// input                                      v0    1   xyz                   in float3
//
//
// Level9 shader bytecode:
//
    lib_4_0_vs_2_0
    dcl_texcoord v0
    add oT0.xyz, v0, v0

// approximately 1 instruction slot used
lib_4_0
dcl_input v0.xyz
dcl_output o0.xyz
add o0.xyz, v0.xyzx, v0.xyzx
ret 
// Approximately 2 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 2):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction2        SV_TARGET                              o0    1   xyz  out float3
// input                                      v0    1   xyz                   in float3
// foo                                        v1    1   x                     in uint1
//
//
// Level9 shader bytecode:
//
    lib_4_0_vs_2_0
    dcl_texcoord v0
    add oT0.xyz, v0, v0

// approximately 1 instruction slot used
lib_4_0
dcl_input v0.xyz
dcl_output o0.xyz
add o0.xyz, v0.xyzx, v0.xyzx
ret 
// Approximately 2 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 2):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction3                                               o0    4   xyzw out float4x4
// input                                      v0    1   x                     in uint
// foo                  COLOR                 v1    3   xyzw                  in int4x3
//
//
// Level9 shader bytecode:
//
    lib_4_0_vs_2_0
    dcl_texcoord v0
    add r0, v0.x, v0.x
    mov oT0, r0.w
    mov oT1, r0.w
    mov oT2, r0.w
    mov oT3, r0

// approximately 5 instruction slots used
lib_4_0
dcl_input v0.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 1
utof r0.x, v0.x
add r0.xyzw, r0.xxxx, r0.xxxx
mov o0.xyzw, r0.wwww
mov o1.xyzw, r0.wwww
mov o2.xyzw, r0.wwww
mov o3.xyzw, r0.xyzw
ret 
// Approximately 7 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 TestGlobal;                 // Offset:    0 Size:    16
//      = 0x40a00000 0x40a00000 0x40a00000 0x40a00000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// $Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Function parameter signature (return: yes, parameters: 1):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction4                                               o0    1   xyzw out float4
// input                                      v0    1   x                     in uint
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Level9 shader bytecode:
//
    lib_4_0_vs_2_0
    def c1, 2, 0, 0, 0
    dcl_texcoord v0
    mov r0.x, c1.x
    mad oT0, v0.x, r0.x, c0

// approximately 2 instruction slots used
lib_4_0
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input v0.x
dcl_output o0.xyzw
dcl_temps 1
utof r0.x, v0.x
mad o0.xyzw, r0.xxxx, l(2.000000, 2.000000, 2.000000, 2.000000), cb0[0].xyzw
ret 
// Approximately 3 instruction slots used
