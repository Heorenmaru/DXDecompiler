//
// Library:  flags 0, 6 functions:
//   0  TestFunction
//   1  TestFunction2
//   2  TestFunction3
//   3  TestFunction4
//   4  TestFunction5
//   5  TestFunction6
//
// Created by:  Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 6):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction         SV_TARGET                              o0    1   xyz  out float3
// input                                      v0    1   xyz                   in float3
// in2                  COLOR                 v1    1   x                     in float1
// val3                                       v2    3   xy     o1    3   xy   inout float2x3
// val4                                                        o4    1   x    out uint
// val5                                       v5    2   xyz                   in float3x2
// val6                                       v7    1   xyz                   in int3
//
//
// Level9 shader bytecode:
//
    lib_4_0_ps_2_x
    def c0, 5, 0, 0, 0
    dcl t0.xyz
    dcl t2.xy
    dcl t3.xy
    dcl t4.xy
    add r0.xyz, t0, t0
    mov oT0.xyz, r0
    mov oT1.xy, t2
    mov oT2.xy, t3
    mov oT3.xy, t4
    mov oT4.x, c0.x

// approximately 6 instruction slots used
lib_4_0
dcl_input v0.xyz
dcl_input v2.xy
dcl_input v3.xy
dcl_input v4.xy
dcl_output o0.xyz
dcl_output o1.xy
dcl_output o2.xy
dcl_output o3.xy
dcl_output o4.x
add o0.xyz, v0.xyzx, v0.xyzx
mov o1.xy, v2.xyxx
mov o2.xy, v3.xyxx
mov o3.xy, v4.xyxx
mov o4.x, l(5)
ret 
// Approximately 6 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 12):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction2                                               o0    1   xyz  out float3
// val1                                       v0    4   xyz                   in float3x4
// val2                                       v4    4   xyz                   in float3x4
// val3                                       v8    4   xyz                   in float3x4
// val4                                       v12   4   xyz                   in float3x4
// val5                                       v16   3   xyzw                  in row_major float3x4
// val6                                       v19   3   xyzw                  in row_major float3x4
// val7                                       v22   3   xy                    in float2x3
// val8                                       v25   3   xy                    in float2x3
// val9                                       v28   3   xy                    in float2x3
// val10                                      v31   3   xy                    in float2x3
// val11                                      v34   2   xyz                   in row_major float2x3
// val12                                      v36   2   xyz                   in row_major float2x3
//
//
// Level9 shader bytecode:
//
    lib_4_0_ps_2_x
    def c0, 5, 0, 0, 0
    mov oT0.xyz, c0.x

// approximately 1 instruction slot used
lib_4_0
dcl_output o0.xyz
mov o0.xyz, l(5.000000,5.000000,5.000000,0)
ret 
// Approximately 2 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 3):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction3        SV_TARGET                              o0    1   xyz  out float3
// input                                      v0    1   xyz                   in float3
// testInterpolation                          v1    1   xyz                   in float3
// foo                                        v2    1   x                     in uint1
//
//
// Level9 shader bytecode:
//
    lib_4_0_ps_2_x
    dcl t0.xyz
    dcl_centroid t1.xyz
    mov r0.xyz, t0
    mul r0.xyz, r0, t1
    add r0.xyz, r0, r0
    mov oT0.xyz, r0

// approximately 4 instruction slots used
lib_4_0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_output o0.xyz
dcl_temps 1
mul r0.xyz, v0.xyzx, v1.xyzx
add o0.xyz, r0.xyzx, r0.xyzx
ret 
// Approximately 3 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: no, parameters: 3):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction4                                                              void
// input                                      v0    1   x                     in float
// in2                                        v1    1   x                     in float
// result                                                      o0    1   xyz  out float3
//
//
// Level9 shader bytecode:
//
    lib_4_0_ps_2_x
    dcl t0.x
    add r0.xyz, t0.x, t0.x
    mov oT0.xyz, r0

// approximately 2 instruction slots used
lib_4_0
dcl_input v0.x
dcl_output o0.xyz
add o0.xyz, v0.xxxx, v0.xxxx
ret 
// Approximately 2 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Function parameter signature (return: yes, parameters: 2):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction5                                               o0    4   xyzw out float4x4
// input                                      v0    1   x                     in float
// in2                                        v1    1   x                     in float
//
//
// Level9 shader bytecode:
//
    lib_4_0_ps_2_x
    dcl t0.x
    add r0, t0.x, t0.x
    mov oT0, r0.w
    mov oT1, r0.w
    mov oT2, r0.w
    mov oT3, r0

// approximately 5 instruction slots used
lib_4_0
dcl_input v0.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 1
add r0.xyzw, v0.xxxx, v0.xxxx
mov o0.xyzw, r0.wwww
mov o1.xyzw, r0.wwww
mov o2.xyzw, r0.wwww
mov o3.xyzw, r0.xyzw
ret 
// Approximately 6 instruction slots used
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 TestGlobal;                 // Offset:    0 Size:    16
//      = 0x40a00000 0x40a00000 0x40a00000 0x40a00000 
//   int4 TestGlobal2;                  // Offset:   16 Size:    16
//      = 0x00000006 0x00000006 0x00000006 0x00000006 
//
// }
//
// cbuffer Foo
// {
//
//   float3 TestBuffer1;                // Offset:    0 Size:    12
//      = 0x40e00000 0x40e00000 0x40e00000 
//   int3 TestBuffer2;                  // Offset:   16 Size:    12
//      = 0x00000008 0x00000008 0x00000008 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// $Globals                          cbuffer      NA          NA            cb0      1 
// Foo                               cbuffer      NA          NA            cb1      1 
//
//
//
// Function parameter signature (return: yes, parameters: 1):
//
// Name                 SemanticName         In 1st,Num,Mask Out 1st,Num,Mask Type                           
// -------------------- -------------------- --------------- ---------------- ------------------------------ 
// TestFunction6                                               o0    1   xyzw out float4
// input                                      v0    1   x                     in uint
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             0         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             1         1  ( INT, INT, INT, INT)
// c2         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c3         cb1             1         1  ( INT, INT, INT, FLT)
//
//
// Level9 shader bytecode:
//
    lib_4_0_ps_2_x
    def c4, 2, 0, 0, 0
    dcl t0.x
    mov r0.w, c4.x
    mad r0, t0.x, r0.w, c0
    add r0, r0, c1
    add r0, r0, c2.xyzx
    add r0, r0, c3.xyzx
    mov oT0, r0

// approximately 6 instruction slots used
lib_4_0
dcl_constantbuffer CB0[2], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_input v0.x
dcl_output o0.xyzw
dcl_temps 2
utof r0.x, v0.x
mad r0.xyzw, r0.xxxx, l(2.000000, 2.000000, 2.000000, 2.000000), cb0[0].xyzw
itof r1.xyzw, cb0[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb1[0].xyzx
itof r1.xyzw, cb1[1].xyzx
add o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 8 instruction slots used
