//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbCS
// {
//
//   uint g_tex_width;                  // Offset:    0 Size:     4 [unused]
//   uint g_num_block_x;                // Offset:    4 Size:     4
//   uint g_format;                     // Offset:    8 Size:     4 [unused]
//   uint g_mode_id;                    // Offset:   12 Size:     4
//   uint g_start_block_id;             // Offset:   16 Size:     4
//   uint g_num_total_blocks;           // Offset:   20 Size:     4 [unused]
//
// }
//
// Resource bind info for g_InBuff
// {
//
//   uint4 $Element;                    // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_OutBuff
// {
//
//   uint4 $Element;                    // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_Input                           texture  float4          2d             t0      1 
// g_InBuff                          texture  struct         r/o             t1      1 
// g_OutBuff                             UAV  struct         r/w             u0      1 
// cbCS                              cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -649211347377382870840004092887040.000000, 15, 0, 0},
                              { 10184774488364746447430036226048.000000, 15, 0, 0},
                              { 0.000000, 15, 0, 0},
                              { 0.000000, 15, 0, 1},
                              { -33606656.000000, 15, 0, 1},
                              { -33555248.000000, 15, 0, 1},
                              { 0.000000, 15, 0, 1},
                              { 0.000000, 15, 0, 2},
                              { -158528860577705552937570271232.000000, 15, 0, 2},
                              { -158533394049529107796975419392.000000, 15, 0, 2},
                              { -170146051238774108132589051056192749568.000000, 15, 0, 2},
                              { -0.000000, 15, 0, 2},
                              { -0.000000, 15, 0, 3},
                              { -107024656.000000, 15, 0, 3},
                              { -1238673776977656146024202240.000000, 15, 0, 3},
                              { 11409024651668810661554787713024.000000, 15, 0, 3},
                              { -131291.125000, 15, 0, 4},
                              { 0.000000, 2, 0, 4},
                              { -100768128.000000, 8, 0, 4},
                              { 0.000000, 2, 0, 4},
                              { -9903801295088772943083208704.000000, 2, 0, 5},
                              { 2606965549330689467107316712079360.000000, 8, 0, 5},
                              { -33590016.000000, 8, 0, 5},
                              { 0.000000, 15, 0, 5},
                              { 0.000000, 2, 0, 6},
                              { -5649748860036787859731005628131311616.000000, 8, 0, 6},
                              { 0.000000, 2, 0, 6},
                              { 151823044794904947458048.000000, 2, 0, 6},
                              { -286745.500000, 8, 0, 6},
                              { -41538879947814649463396129476444160.000000, 8, 0, 7},
                              { 0.000000, 2, 0, 7},
                              { 11452183303429052923091798196224.000000, 2, 0, 7},
                              { -1238657838990776460971606016.000000, 15, 0, 7},
                              { 0.000000, 15, 0, 8},
                              { -1237951254905777090306506752.000000, 6, 0, 8},
                              { 784.533325, 8, 0, 8},
                              { 0.000000, 2, 0, 8},
                              { 672329.125000, 8, 0, 9},
                              { 74.080582, 15, 0, 9},
                              { 0.000000, 15, 0, 9},
                              { 0.000000, 2, 0, 9},
                              { -170144631470101852515659374748602728448.000000, 8, 0, 10},
                              { 8841727049728.000000, 2, 0, 10},
                              { -107053440.000000, 2, 0, 10},
                              { 0.000000, 2, 0, 10},
                              { 272202749625043509051392.000000, 15, 0, 10},
                              { 0.000000, 15, 0, 11},
                              { 14339452960768.000000, 6, 0, 11},
                              { -158507893270521611712821460992.000000, 6, 0, 11},
                              { 0.000000, 2, 0, 11},
                              { -0.000000, 6, 0, 12},
                              { -0.000000, 8, 0, 12},
                              { -40945461174657351680.000000, 15, 0, 12},
                              { -0.000000, 15, 0, 12},
                              { -158487265973724437102528036864.000000, 2, 0, 13},
                              { -0.000000, 2, 0, 13},
                              { -170143252266248804202070546335515279360.000000, 15, 0, 13},
                              { -2.188278, 15, 0, 13},
                              { -106961280.000000, 15, 0, 14},
                              { -0.000000, 15, 0, 14},
                              { 0.000000, 15, 0, 14},
                              { -36838425354228843168808304640.000000, 2, 0, 14},
                              { 0xfff0000a, 2, 0, 15},
                              { 11411580320851475987630116569088.000000, 15, 0, 15},
                              { 0, 3, 15, 0},
                              { 4, 3, 8, 0},
                              { 9, 15, 8, 0},
                              { 13, 15, 3, 0},
                              { 17, 8, 15, 0},
                              { 21, 3, 15, 1},
                              { 26, 15, 3, 1},
                              { 30, 15, 8, 1},
                              { 34, 8, 15, 1},
                              { 38, 8, 15, 1},
                              { 43, 6, 15, 1},
                              { 47, 6, 15, 1},
                              { 51, 6, 15, 1},
                              { 55, 5, 15, 1},
                              { 60, 3, 15, 2},
                              { 64, 3, 8, 2},
                              { 0, 3, 15, 2},
                              { 9, 3, 8, 2},
                              { 18, 8, 15, 2},
                              { 27, 15, 3, 2},
                              { 37, 3, 15, 2},
                              { 46, 3, 8, 2},
                              { 55, 6, 15, 2},
                              { 64, 10, 8, 3},
                              { 0, 5, 3, 3},
                              { 0, 8, 15, 3},
                              { 0, 8, 6, 3},
                              { 0, 6, 10, 3},
                              { 0, 8, 15, 3},
                              { 0, 5, 15, 3},
                              { 0, 15, 10, 3},
                              { 0, 15, 8, 3},
                              { 0, 8, 15, 3},
                              { 21, 15, 3, 4},
                              { 43, 3, 15, 4},
                              { 64, 5, 10, 4},
                              { 0, 6, 10, 4},
                              { 0, 10, 8, 4},
                              { 0, 8, 9, 4},
                              { 0, 15, 10, 4},
                              { 0, 15, 6, 4},
                              { 0, 3, 15, 4},
                              { 0, 15, 8, 5},
                              { 0, 5, 15, 5},
                              { 0, 15, 3, 5},
                              { 0, 15, 6, 5},
                              { 0, 15, 6, 5},
                              { 0, 15, 8, 5},
                              { 0, 3, 15, 5},
                              { 0, 15, 3, 5},
                              { 0, 5, 15, 5},
                              { 0, 5, 15, 6},
                              { 0, 5, 15, 6},
                              { 0, 8, 15, 6},
                              { 0, 5, 15, 6},
                              { 0, 10, 15, 6},
                              { 0, 5, 15, 6},
                              { 0, 10, 15, 6},
                              { 0, 8, 15, 6},
                              { 0, 13, 15, 6},
                              { 0, 15, 3, 7},
                              { 0, 12, 15, 7},
                              { 0, 3, 15, 7},
                              { 0, 3, 8, 7},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 1},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 2},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3},
                              { 0, 0, 0, 3} }
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 16
dcl_uav_structured u0, 16
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_temps 17
dcl_indexableTemp x0[12], 4
dcl_tgsm_structured g0, 68, 64
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadGroupID.x, cb0[1].x
ult r1.xyzw, vThreadIDInGroupFlattened.xxxx, l(16, 32, 8, 4)
if_nz r1.x
  udiv r0.y, null, r0.x, cb0[0].y
  imad r0.z, -r0.y, cb0[0].y, r0.x
  ishl r0.y, r0.y, l(2)
  bfi r2.x, l(30), l(2), r0.z, vThreadIDInGroupFlattened.x
  ushr r0.z, vThreadIDInGroupFlattened.x, l(2)
  iadd r2.y, r0.z, r0.y
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.yzw, r2.xyzw, t0.wxyz
  mul r0.yzw, r0.yyzw, l(0.000000, 255.000000, 255.000000, 255.000000)
  ftou r0.yzw, r0.yyzw
  umin r0.yzw, r0.yyzw, l(0, 255, 255, 255)
  store_structured g0.xyz, vThreadIDInGroupFlattened.x, l(0), r0.yzwy
endif 
sync_g_t
store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(-1)
movc r0.y, cb0[0].w, l(64), l(16)
ult r0.y, vThreadIDInGroupFlattened.x, r0.y
if_nz r0.y
  iadd r0.y, vThreadIDInGroupFlattened.x, l(64)
  mov x0[0].x, l(-1)
  mov x0[1].x, l(-1)
  mov x0[2].x, l(-1)
  mov x0[0].y, l(0)
  mov x0[1].y, l(0)
  mov x0[2].y, l(0)
  mov x0[4].x, l(-1)
  mov x0[5].x, l(-1)
  mov x0[6].x, l(-1)
  mov x0[4].y, l(0)
  mov x0[5].y, l(0)
  mov x0[6].y, l(0)
  mov x0[8].x, l(-1)
  mov x0[9].x, l(-1)
  mov x0[10].x, l(-1)
  mov x0[8].y, l(0)
  mov x0[9].y, l(0)
  mov x0[10].y, l(0)
  iadd r0.z, r0.y, l(-64)
  mov r0.w, l(0)
  loop 
    uge r2.x, r0.w, l(16)
    breakc_nz r2.x
    ld_structured r2.xyz, r0.w, l(0), g0.xyzx
    iadd r3.xy, r0.wwww, l(15, 1, 0, 0)
    ushr r2.w, icb[r0.z + 0].x, r3.x
    and r2.w, r2.w, l(2)
    ieq r2.w, r2.w, l(2)
    if_nz r2.w
      mov r4.x, x0[8].x
      mov r4.y, x0[9].x
      mov r4.z, x0[10].x
      umin r3.xzw, r2.xxyz, r4.xxyz
      mov x0[8].x, r3.x
      mov x0[9].x, r3.z
      mov x0[10].x, r3.w
      mov r4.x, x0[8].y
      mov r4.y, x0[9].y
      mov r4.z, x0[10].y
      umax r3.xzw, r2.xxyz, r4.xxyz
      mov x0[8].y, r3.x
      mov x0[9].y, r3.z
      mov x0[10].y, r3.w
    else 
      ushr r2.w, icb[r0.z + 0].x, r0.w
      and r2.w, r2.w, l(1)
      ieq r2.w, r2.w, l(1)
      if_nz r2.w
        mov r4.x, x0[4].x
        mov r4.y, x0[5].x
        mov r4.z, x0[6].x
        umin r3.xzw, r2.xxyz, r4.xxyz
        mov x0[4].x, r3.x
        mov x0[5].x, r3.z
        mov x0[6].x, r3.w
        mov r4.x, x0[4].y
        mov r4.y, x0[5].y
        mov r4.z, x0[6].y
        umax r3.xzw, r2.xxyz, r4.xxyz
        mov x0[4].y, r3.x
        mov x0[5].y, r3.z
        mov x0[6].y, r3.w
      else 
        mov r4.x, x0[0].x
        mov r4.y, x0[1].x
        mov r4.z, x0[2].x
        umin r3.xzw, r2.xxyz, r4.xxyz
        mov x0[0].x, r3.x
        mov x0[1].x, r3.z
        mov x0[2].x, r3.w
        mov r4.x, x0[0].y
        mov r4.y, x0[1].y
        mov r4.z, x0[2].y
        umax r2.xyz, r2.xyzx, r4.xyzx
        mov x0[0].y, r2.x
        mov x0[1].y, r2.y
        mov x0[2].y, r2.z
      endif 
    endif 
    mov r0.w, r3.y
  endloop 
  ieq r0.w, cb0[0].w, l(2)
  if_z cb0[0].w
    mov r2.x, x0[0].x
    mov r2.y, x0[1].x
    mov r2.z, x0[2].x
    mov r3.x, x0[0].y
    mov r3.y, x0[1].y
    mov r3.z, x0[2].y
    and r4.xyz, r2.xyzx, l(15, 15, 15, 0)
    iadd r2.w, r4.z, r4.y
    iadd r2.w, r2.w, r4.x
    udiv r2.w, null, r2.w, l(3)
    and r2.xyzw, r2.xyzw, l(240, 240, 240, 8)
    iadd r2.xzw, r2.zzxy, r2.wwww
    and r4.xyz, r3.xyzx, l(15, 15, 15, 0)
    iadd r3.w, r4.z, r4.y
    iadd r3.w, r3.w, r4.x
    udiv r3.w, null, r3.w, l(3)
    and r3.xyzw, r3.xyzw, l(240, 240, 240, 8)
    iadd r3.xyz, r3.yxzy, r3.wwww
    mov r2.y, r3.z
    mov r3.w, r2.w
    mov r4.xy, r3.wxww
    mov r3.x, r2.z
    mov r5.x, x0[4].x
    mov r5.y, x0[5].x
    mov r5.z, x0[6].x
    mov r6.x, x0[4].y
    mov r6.y, x0[5].y
    mov r6.z, x0[6].y
    and r7.xyz, r5.xyzx, l(15, 15, 15, 0)
    iadd r4.z, r7.z, r7.y
    iadd r4.z, r4.z, r7.x
    and r5.xyz, r5.xyzx, l(240, 240, 240, 0)
    udiv r4.z, null, r4.z, l(3)
    and r4.z, r4.z, l(8)
    iadd r5.xzw, r5.zzxy, r4.zzzz
    and r7.xyz, r6.xyzx, l(15, 15, 15, 0)
    iadd r4.z, r7.z, r7.y
    iadd r4.z, r4.z, r7.x
    and r6.xyz, r6.xyzx, l(240, 240, 240, 0)
    udiv r4.z, null, r4.z, l(3)
    and r4.z, r4.z, l(8)
    iadd r6.xyz, r6.yxzy, r4.zzzz
    mov r5.y, r6.z
    mov r6.w, r5.w
    mov r4.zw, r6.wwwx
    mov r6.x, r5.z
    mov r7.x, x0[8].x
    mov r7.y, x0[9].x
    mov r7.z, x0[10].x
    mov r8.x, x0[8].y
    mov r8.y, x0[9].y
    mov r8.z, x0[10].y
    and r9.xyz, r7.xyzx, l(15, 15, 15, 0)
    iadd r7.w, r9.z, r9.y
    iadd r7.w, r7.w, r9.x
    udiv r7.w, null, r7.w, l(3)
    and r7.xyzw, r7.xyzw, l(240, 240, 240, 8)
    iadd r7.xzw, r7.zzxy, r7.wwww
    and r9.xyz, r8.xyzx, l(15, 15, 15, 0)
    iadd r8.w, r9.z, r9.y
    iadd r8.w, r8.w, r9.x
    udiv r8.w, null, r8.w, l(3)
    and r8.xyzw, r8.xyzw, l(240, 240, 240, 8)
    iadd r8.xyz, r8.yxzy, r8.wwww
    mov r7.y, r8.z
    mov r8.w, r7.w
    mov r9.xy, r8.wxww
    mov r8.x, r7.z
  else 
    mov r10.x, x0[0].x
    mov r10.y, x0[1].x
    mov r10.z, x0[2].x
    mov r11.x, x0[0].y
    mov r11.y, x0[1].y
    mov r11.z, x0[2].y
    iadd r10.xyz, r10.xyzx, l(4, 4, 4, 0)
    umin r10.xyz, r10.xyzx, l(255, 255, 255, 0)
    and r2.xzw, r10.zzxy, l(248, 0, 248, 248)
    iadd r10.xyz, r11.xyzx, l(4, 4, 4, 0)
    umin r10.xyz, r10.xyzx, l(255, 255, 255, 0)
    and r3.xyz, r10.yxzy, l(248, 248, 248, 0)
    mov r2.y, r3.z
    mov r3.w, r2.w
    mov r4.xy, r3.wxww
    mov r3.x, r2.z
    mov r10.x, x0[4].x
    mov r10.y, x0[5].x
    mov r10.z, x0[6].x
    mov r11.x, x0[4].y
    mov r11.y, x0[5].y
    mov r11.z, x0[6].y
    iadd r10.xyz, r10.xyzx, l(4, 4, 4, 0)
    umin r10.xyz, r10.xyzx, l(255, 255, 255, 0)
    and r5.xzw, r10.zzxy, l(248, 0, 248, 248)
    iadd r10.xyz, r11.xyzx, l(4, 4, 4, 0)
    umin r10.xyz, r10.xyzx, l(255, 255, 255, 0)
    and r6.xyz, r10.yxzy, l(248, 248, 248, 0)
    mov r5.y, r6.z
    mov r6.w, r5.w
    mov r4.zw, r6.wwwx
    mov r6.x, r5.z
    mov r10.x, x0[8].x
    mov r10.y, x0[9].x
    mov r10.z, x0[10].x
    mov r11.x, x0[8].y
    mov r11.y, x0[9].y
    mov r11.z, x0[10].y
    iadd r10.xyz, r10.xyzx, l(4, 4, 4, 0)
    umin r10.xyz, r10.xyzx, l(255, 255, 255, 0)
    and r7.xzw, r10.zzxy, l(248, 0, 248, 248)
    iadd r10.xyz, r11.xyzx, l(4, 4, 4, 0)
    umin r10.xyz, r10.xyzx, l(255, 255, 255, 0)
    and r8.xyz, r10.yxzy, l(248, 248, 248, 0)
    mov r7.y, r8.z
    mov r8.w, r7.w
    mov r9.xy, r8.wxww
    mov r8.x, r7.z
  endif 
  ineg r10.x, r3.x
  ineg r10.y, r4.x
  ineg r10.z, r2.x
  mov r3.z, r4.y
  mov r3.w, r2.y
  iadd r11.xyz, r3.yzwy, r10.xyzx
  ineg r12.x, r6.x
  ineg r12.y, r4.z
  ineg r12.z, r5.x
  mov r6.z, r4.w
  mov r6.w, r5.y
  iadd r13.xyz, r6.yzwy, r12.xyzx
  ineg r14.x, r8.x
  ineg r14.y, r9.x
  ineg r14.z, r7.x
  mov r8.z, r9.y
  mov r8.w, r7.y
  iadd r15.xyz, r8.yzwy, r14.xyzx
  imul null, r2.zw, r11.xxxy, r11.xxxy
  iadd r2.z, r2.w, r2.z
  imad r2.z, r11.z, r11.z, r2.z
  imul null, r3.zw, r13.xxxy, r13.xxxy
  iadd r2.w, r3.w, r3.z
  imad r2.w, r13.z, r13.z, r2.w
  imul null, r3.zw, r15.xxxy, r15.xxxy
  iadd r3.z, r3.w, r3.z
  imad r3.z, r15.z, r15.z, r3.z
  ld_structured r16.xyz, l(0), l(0), g0.xyzx
  iadd r10.xyz, r10.xyzx, r16.xyzx
  imul null, r5.zw, r10.xxxy, r11.xxxy
  iadd r3.w, r5.w, r5.z
  imad r3.w, r11.z, r10.z, r3.w
  ilt r5.z, l(0), r2.z
  ilt r5.w, l(0), r3.w
  and r5.z, r5.w, r5.z
  itof r3.w, r3.w
  mul r3.w, r3.w, l(63.499989)
  ftou r3.w, r3.w
  ishl r5.w, r2.z, l(5)
  ult r3.w, r5.w, r3.w
  and r3.w, r3.w, r5.z
  ineg r10.xyz, r11.xyzx
  movc r10.xyz, r3.wwww, r10.xyzx, r11.xyzx
  movc r3.xy, r3.wwww, r3.yxyy, r3.xyxx
  mov x0[0].x, r3.x
  movc r4.xy, r3.wwww, r4.yxyy, r4.xyxx
  mov x0[1].x, r4.x
  movc r2.xy, r3.wwww, r2.yxyy, r2.xyxx
  mov x0[2].x, r2.x
  mov x0[0].y, r3.y
  mov x0[1].y, r4.y
  mov x0[2].y, r2.y
  mov r2.y, icb[r0.y + 0].y
  ld_structured r11.xyz, r2.y, l(0), g0.xyzx
  iadd r11.xyz, r12.xyzx, r11.xyzx
  imul null, r3.yw, r11.xxxy, r13.xxxy
  iadd r2.y, r3.w, r3.y
  imad r2.y, r13.z, r11.z, r2.y
  ilt r3.yw, l(0, 0, 0, 0), r2.wwwy
  and r3.y, r3.w, r3.y
  itof r2.y, r2.y
  mul r2.y, r2.y, l(63.499989)
  ftou r2.y, r2.y
  ishl r3.w, r2.w, l(5)
  ult r2.y, r3.w, r2.y
  and r2.y, r2.y, r3.y
  ineg r11.xyz, r13.xyzx
  movc r11.xyz, r2.yyyy, r11.xyzx, r13.xyzx
  movc r3.yw, r2.yyyy, r6.yyyx, r6.xxxy
  mov x0[4].x, r3.y
  movc r4.yz, r2.yyyy, r4.wwzw, r4.zzwz
  mov x0[5].x, r4.y
  movc r5.xy, r2.yyyy, r5.yxyy, r5.xyxx
  mov x0[6].x, r5.x
  mov x0[4].y, r3.w
  mov x0[5].y, r4.z
  mov x0[6].y, r5.y
  mov r2.y, icb[r0.y + 0].z
  ld_structured r5.yzw, r2.y, l(0), g0.xxyz
  iadd r5.yzw, r14.xxyz, r5.yyzw
  imul null, r4.zw, r5.yyyz, r15.xxxy
  iadd r2.y, r4.w, r4.z
  imad r2.y, r15.z, r5.w, r2.y
  ilt r3.w, l(0), r3.z
  ilt r4.z, l(0), r2.y
  and r3.w, r3.w, r4.z
  itof r2.y, r2.y
  mul r2.y, r2.y, l(63.499989)
  ftou r2.y, r2.y
  ishl r4.z, r3.z, l(5)
  ult r2.y, r4.z, r2.y
  and r2.y, r2.y, r3.w
  ineg r5.yzw, r15.xxyz
  movc r5.yzw, r2.yyyy, r5.yyzw, r15.xxyz
  movc r4.zw, r2.yyyy, r8.yyyx, r8.xxxy
  mov x0[8].x, r4.z
  movc r6.xy, r2.yyyy, r9.yxyy, r9.xyxx
  mov x0[9].x, r6.x
  movc r6.zw, r2.yyyy, r7.yyyx, r7.xxxy
  mov x0[10].x, r6.z
  mov x0[8].y, r4.w
  mov x0[9].y, r6.y
  mov x0[10].y, r6.w
  ineg r7.x, r4.z
  ineg r7.yz, r6.xxzx
  itof r3.w, r3.z
  bfi r4.zw, l(0, 0, 1, 1), l(0, 0, 6, 4), r0.wwww, l(0, 0, 0, 0)
  iadd r4.zw, r4.zzzw, l(0, 0, 64, 16)
  iadd r0.w, r4.z, l(11)
  udiv null, r0.w, r0.w, l(68)
  ineg r6.x, r3.y
  ineg r6.y, r4.y
  ineg r6.z, r5.x
  ineg r8.x, r3.x
  ineg r8.y, r4.x
  ineg r8.z, r2.x
  ige r2.xy, l(0, 0, 0, 0), r2.zwzz
  itof r3.xy, r2.zwzz
  mov r4.xy, l(0,0,0,0)
  loop 
    uge r5.x, r4.y, l(16)
    breakc_nz r5.x
    iadd r9.xy, r4.yyyy, l(15, 1, 0, 0)
    ushr r5.x, icb[r0.z + 0].x, r9.x
    and r5.x, r5.x, l(2)
    ieq r6.w, r5.x, l(2)
    if_nz r6.w
      ld_structured r9.xzw, r4.y, l(0), g0.xxyz
      iadd r9.xzw, r7.xxyz, r9.xxzw
      imul null, r9.xz, r5.yyzy, r9.xxzx
      iadd r6.w, r9.z, r9.x
      imad r6.w, r5.w, r9.w, r6.w
      ige r7.w, l(0), r6.w
      or r7.w, r2.y, r7.w
      ilt r8.w, r6.w, r3.z
      itof r6.w, r6.w
      mul r6.w, r6.w, l(63.499989)
      div r6.w, r6.w, r3.w
      ftou r6.w, r6.w
      iadd r6.w, r4.z, r6.w
      movc r6.w, r8.w, icb[r6.w + 0].w, r0.w
      movc r6.w, r7.w, l(0), r6.w
    else 
      ushr r7.w, icb[r0.z + 0].x, r4.y
      and r7.w, r7.w, l(1)
      ieq r7.w, r7.w, l(1)
      if_nz r7.w
        ld_structured r9.xzw, r4.y, l(0), g0.xxyz
        iadd r9.xzw, r6.xxyz, r9.xxzw
        imul null, r9.xz, r9.xxzx, r11.xxyx
        iadd r7.w, r9.z, r9.x
        imad r7.w, r11.z, r9.w, r7.w
        ige r8.w, l(0), r7.w
        or r8.w, r2.y, r8.w
        ilt r9.x, r7.w, r2.w
        itof r7.w, r7.w
        mul r7.w, r7.w, l(63.499989)
        div r7.w, r7.w, r3.y
        ftou r7.w, r7.w
        iadd r7.w, r4.z, r7.w
        movc r7.w, r9.x, icb[r7.w + 0].w, r0.w
        movc r6.w, r8.w, l(0), r7.w
      else 
        ld_structured r9.xzw, r4.y, l(0), g0.xxyz
        iadd r9.xzw, r8.xxyz, r9.xxzw
        imul null, r9.xz, r9.xxzx, r10.xxyx
        iadd r7.w, r9.z, r9.x
        imad r7.w, r10.z, r9.w, r7.w
        ige r8.w, l(0), r7.w
        or r8.w, r2.x, r8.w
        ilt r9.x, r7.w, r2.z
        itof r7.w, r7.w
        mul r7.w, r7.w, l(63.499989)
        div r7.w, r7.w, r3.x
        ftou r7.w, r7.w
        iadd r7.w, r4.z, r7.w
        movc r7.w, r9.x, icb[r7.w + 0].w, r0.w
        movc r6.w, r8.w, l(0), r7.w
      endif 
    endif 
    ushr r7.w, icb[r0.z + 0].x, r4.y
    iadd r6.w, r4.w, r6.w
    iadd r8.w, l(64), -icb[r6.w + 64].x
    ishl r5.x, r5.x, l(2)
    bfi r5.x, l(1), l(2), r7.w, r5.x
    mov r12.x, x0[r5.x + 0].x
    mov r12.y, x0[r5.x + 1].x
    mov r12.z, x0[r5.x + 2].x
    mov r13.x, x0[r5.x + 0].y
    mov r13.y, x0[r5.x + 1].y
    mov r13.z, x0[r5.x + 2].y
    imul null, r9.xzw, r13.xxyz, icb[r6.w + 64].xxxx
    imad r9.xzw, r8.wwww, r12.xxyz, r9.xxzw
    iadd r9.xzw, r9.xxzw, l(32, 0, 32, 32)
    ushr r9.xzw, r9.xxzw, l(6, 0, 6, 6)
    ld_structured r12.xyz, r4.y, l(0), g0.xyzx
    iadd r9.xzw, r9.xxzw, -r12.xxyz
    imul null, r9.xz, r9.xxzx, r9.xxzx
    iadd r5.x, r9.z, r9.x
    imad r5.x, r9.w, r9.w, r5.x
    iadd r4.x, r4.x, r5.x
    mov r4.y, r9.y
  endloop 
  store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r4.x
  store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.y
endif 
sync_g_t
if_nz r1.y
  ld_structured r0.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  iadd r0.z, vThreadIDInGroupFlattened.x, l(32)
  ld_structured r0.w, r0.z, l(16), g0.xxxx
  ld_structured r0.z, r0.z, l(24), g0.xxxx
  ult r0.y, r0.w, r0.y
  if_nz r0.y
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r0.w
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.z
  endif 
endif 
if_nz r1.x
  ld_structured r0.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  iadd r0.z, vThreadIDInGroupFlattened.x, l(16)
  ld_structured r0.w, r0.z, l(16), g0.xxxx
  ld_structured r0.z, r0.z, l(24), g0.xxxx
  ult r0.y, r0.w, r0.y
  if_nz r0.y
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r0.w
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.z
  endif 
endif 
if_nz r1.z
  ld_structured r0.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  iadd r0.z, vThreadIDInGroupFlattened.x, l(8)
  ld_structured r0.w, r0.z, l(16), g0.xxxx
  ld_structured r0.z, r0.z, l(24), g0.xxxx
  ult r0.y, r0.w, r0.y
  if_nz r0.y
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r0.w
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.z
  endif 
endif 
if_nz r1.w
  ld_structured r0.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  iadd r0.z, vThreadIDInGroupFlattened.x, l(4)
  ld_structured r0.w, r0.z, l(16), g0.xxxx
  ld_structured r0.z, r0.z, l(24), g0.xxxx
  ult r0.y, r0.w, r0.y
  if_nz r0.y
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r0.w
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.z
  endif 
endif 
ult r0.yz, vThreadIDInGroupFlattened.xxxx, l(0, 2, 1, 0)
if_nz r0.y
  ld_structured r0.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  iadd r0.w, vThreadIDInGroupFlattened.x, l(2)
  ld_structured r1.x, r0.w, l(16), g0.xxxx
  ld_structured r0.w, r0.w, l(24), g0.xxxx
  ult r0.y, r1.x, r0.y
  if_nz r0.y
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r1.x
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.w
  endif 
endif 
if_nz r0.z
  ld_structured r0.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  ld_structured r0.z, l(1), l(16), g0.xxxx
  ld_structured r0.w, l(1), l(24), g0.xxxx
  ult r0.y, r0.z, r0.y
  if_nz r0.y
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), r0.z
    store_structured g0.x, vThreadIDInGroupFlattened.x, l(24), r0.w
  endif 
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.y, r0.x, l(0), t1.xxxx
  ld_structured r1.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
  ult r0.y, r1.x, r0.y
  if_nz r0.y
    ld_structured r1.z, vThreadIDInGroupFlattened.x, l(24), g0.xxxx
    mov r1.y, cb0[0].w
    mov r1.w, l(0)
  else 
    ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyzw, r0.x, l(0), t1.xyzw
  endif 
  store_structured u0.xyzw, r0.x, l(0), r1.xyzw
endif 
ret 
// Approximately 508 instruction slots used
