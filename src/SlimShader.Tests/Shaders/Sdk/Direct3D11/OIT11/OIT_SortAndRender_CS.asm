//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CB
// {
//
//   uint g_nFrameWidth;                // Offset:    0 Size:     4
//   uint g_nFrameHeight;               // Offset:    4 Size:     4 [unused]
//   uint g_nPassSize;                  // Offset:    8 Size:     4 [unused]
//   uint g_nReserved;                  // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// fragmentCount                     texture    uint          2d             t0      1 
// deepBufferDepth                       UAV   float         buf             u0      1 
// deepBufferColorUINT                   UAV    uint         buf             u1      1 
// frameBuffer                           UAV  float4          2d             u2      1 
// prefixSum                             UAV    uint         buf             u3      1 
// CB                                cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_resource_texture2d (uint,uint,uint,uint) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_uav_typed_buffer (uint,uint,uint,uint) u1
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_typed_buffer (uint,uint,uint,uint) u3
dcl_input vThreadGroupID.xy
dcl_input vThreadID.xy
dcl_temps 4
dcl_indexableTemp x0[32], 4
dcl_tgsm_structured g0, 4, 32
dcl_thread_group 1, 1, 1
imad r0.x, vThreadGroupID.y, cb0[0].x, vThreadGroupID.x
mov r1.xy, vThreadID.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(uint,uint,uint,uint) r0.y, r1.xyzw, t0.yxzw
utof r0.z, r0.y
log r0.z, r0.z
round_pi r0.z, r0.z
ftoi r0.z, r0.z
ishl r0.z, l(1), r0.z
iadd r0.x, r0.x, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.w, r0.xxxx, u3.yzwx
mov r1.x, l(0)
loop 
  uge r1.y, r1.x, r0.y
  breakc_nz r1.y
  store_structured g0.x, r1.x, l(0), r1.x
  iadd r1.y, r0.w, r1.x
  ld_uav_typed_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, u0.yxzw
  mov x0[r1.x + 0].x, r1.y
  iadd r1.x, r1.x, l(1)
endloop 
mov r0.w, r0.y
loop 
  uge r1.x, r0.w, r0.z
  breakc_nz r1.x
  store_structured g0.x, r0.w, l(0), r0.w
  mov x0[r0.w + 0].x, l(1.100000)
  iadd r0.w, r0.w, l(1)
endloop 
mov r0.w, l(2)
loop 
  ult r1.x, r0.z, r0.w
  breakc_nz r1.x
  ishr r1.x, r0.w, l(1)
  mov r1.y, r1.x
  loop 
    ige r1.z, l(0), r1.y
    breakc_nz r1.z
    mov r1.z, l(0)
    loop 
      uge r1.w, r1.z, r0.z
      breakc_nz r1.w
      ld_structured r1.w, r1.z, l(0), g0.xxxx
      xor r2.x, r1.y, r1.z
      ilt r2.y, r1.z, r2.x
      if_nz r2.y
        mov r2.y, x0[r1.w + 0].x
        ld_structured r2.z, r2.x, l(0), g0.xxxx
        mov r2.w, x0[r2.z + 0].x
        and r3.x, r0.w, r1.z
        ieq r3.y, r3.x, l(0)
        lt r3.z, r2.w, r2.y
        and r3.y, r3.z, r3.y
        if_nz r3.y
          store_structured g0.x, r1.z, l(0), r2.z
          store_structured g0.x, r2.x, l(0), r1.w
        endif 
        ine r1.w, r3.x, l(0)
        lt r2.y, r2.y, r2.w
        and r1.w, r1.w, r2.y
        if_nz r1.w
          ld_structured r1.w, r1.z, l(0), g0.xxxx
          ld_structured r2.y, r2.x, l(0), g0.xxxx
          store_structured g0.x, r1.z, l(0), r2.y
          store_structured g0.x, r2.x, l(0), r1.w
        endif 
      endif 
      iadd r1.z, r1.z, l(1)
    endloop 
    ishr r1.y, r1.y, l(1)
  endloop 
  ishl r0.w, r0.w, l(1)
endloop 
iadd r0.y, r0.y, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, u3.xyzw
mov r1.xyz, l(0,0,0,0)
mov r0.z, r0.y
loop 
  ilt r0.w, r0.z, l(0)
  breakc_nz r0.w
  ld_structured r0.w, r0.z, l(0), g0.xxxx
  iadd r0.w, r0.w, r0.x
  ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.w, r0.wwww, u1.yzwx
  and r2.x, r0.w, l(255)
  utof r2.x, r2.x
  mul r2.x, r2.x, l(0.003922)
  ubfe r3.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r0.wwww
  utof r3.xy, r3.xyxx
  mul r2.yz, r3.xxyx, l(0.000000, 0.003922, 0.003922, 0.000000)
  ushr r0.w, r0.w, l(24)
  utof r0.w, r0.w
  mul r0.w, r0.w, l(0.003922)
  add r2.xyz, -r1.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
  iadd r0.z, r0.z, l(-1)
endloop 
mov r1.w, l(1.000000)
store_uav_typed u2.xyzw, vThreadGroupID.xyyy, r1.xyzw
ret 
// Approximately 99 instruction slots used
