//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   row_major float4x4 g_mWorldViewProj;// Offset:    0 Size:    64
//   row_major float4x4 g_mInvView;     // Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_input v[1][0].xyz
dcl_input v[1][1].xyzw
dcl_temps 3
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_maxout 4
mov o0.xy, l(0,0,0,0)
mov o1.xyzw, v[0][1].xyzw
mul r0.xyz, cb0[5].xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r1.xyz, cb0[4].xyzx, l(-10.000000, -10.000000, -10.000000, 0.000000), r0.xyzx
mad r0.xyz, cb0[4].xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r0.xyzx
add r0.xyz, r0.xyzx, v[0][0].xyzx
add r1.xyz, r1.xyzx, v[0][0].xyzx
mul r2.xyzw, r1.yyyy, cb0[1].xyzw
mad r2.xyzw, r1.xxxx, cb0[0].xyzw, r2.xyzw
mad r1.xyzw, r1.zzzz, cb0[2].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[3].xyzw
mov o2.xyzw, r1.xyzw
emit_stream m0
mov o0.xy, l(1.000000,0,0,0)
mov o1.xyzw, v[0][1].xyzw
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov o2.xyzw, r0.xyzw
emit_stream m0
mov o0.xy, l(0,1.000000,0,0)
mov o1.xyzw, v[0][1].xyzw
mul r0.xyz, cb0[5].xyzx, l(-10.000000, -10.000000, -10.000000, 0.000000)
mad r1.xyz, cb0[4].xyzx, l(-10.000000, -10.000000, -10.000000, 0.000000), r0.xyzx
mad r0.xyz, cb0[4].xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r0.xyzx
add r0.xyz, r0.xyzx, v[0][0].xyzx
add r1.xyz, r1.xyzx, v[0][0].xyzx
mul r2.xyzw, r1.yyyy, cb0[1].xyzw
mad r2.xyzw, r1.xxxx, cb0[0].xyzw, r2.xyzw
mad r1.xyzw, r1.zzzz, cb0[2].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[3].xyzw
mov o2.xyzw, r1.xyzw
emit_stream m0
mov o0.xy, l(1.000000,1.000000,0,0)
mov o1.xyzw, v[0][1].xyzw
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov o2.xyzw, r0.xyzw
emit_stream m0
cut_stream m0
ret 
// Approximately 44 instruction slots used
