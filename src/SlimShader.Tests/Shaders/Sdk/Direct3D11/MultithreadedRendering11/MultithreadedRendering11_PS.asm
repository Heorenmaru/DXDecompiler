//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4 g_vObjectColor;             // Offset:    0 Size:    16
//
// }
//
// cbuffer cbPerLight
// {
//
//   struct LightDataStruct
//   {
//       
//       float4x4 m_mLightViewProj;     // Offset:    0
//       float4 m_vLightPos;            // Offset:   64
//       float4 m_vLightDir;            // Offset:   80
//       float4 m_vLightColor;          // Offset:   96
//       float4 m_vFalloffs;            // Offset:  112
//
//   } g_LightData[4];                  // Offset:    0 Size:   512
//
// }
//
// cbuffer cbPerScene
// {
//
//   float4 g_vMirrorPlane;             // Offset:    0 Size:    16
//   float4 g_vAmbientColor;            // Offset:   16 Size:    16
//   float4 g_vTintColor;               // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_samPointClamp                   sampler      NA          NA             s0      1 
// g_samLinearWrap                   sampler      NA          NA             s1      1 
// g_txDiffuse                       texture  float4          2d             t0      1 
// g_txNormal                        texture  float4          2d             t1      1 
// g_txShadow[0]                     texture  float4          2d             t2      1 
// cbPerObject                       cbuffer      NA          NA            cb0      1 
// cbPerLight                        cbuffer      NA          NA            cb1      1 
// cbPerScene                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// NORMAL                   0   xyz         0     NONE   float   xyz 
// TANGENT                  0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[32], dynamicIndexed
dcl_constantbuffer CB2[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 6
dp3 r0.x, cb2[0].xyzx, v3.xyzx
add r0.x, r0.x, cb2[0].w
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s1
dp3 r1.x, v0.xyzx, v0.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v0.xyzx
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v1.xyzx
mul r3.xyz, r1.yzxy, r2.zxyz
mad r3.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v2.xyxx, t1.xyzw, s1
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r3.xyz, r3.xyzx, r4.yyyy
mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
dp4 r2.x, v3.xyzw, cb1[0].xyzw
dp4 r2.y, v3.xyzw, cb1[1].xyzw
dp4 r2.z, v3.xyzw, cb1[2].xyzw
dp4 r1.w, v3.xyzw, cb1[3].xyzw
div r2.xyz, r2.xyzx, r1.wwww
mul r3.x, r2.x, l(0.500000)
mad r4.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
add r1.w, r2.z, l(-0.000500)
add r4.z, -r4.y, l(1.000000)
mul r2.xz, r4.xxzx, l(2048.000000, 0.000000, 2048.000000, 0.000000)
frc r5.xy, r2.xzxx
add r5.zw, -r5.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r5.xyzw, r5.wwyy, r5.zxzx
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xzxx, t2.xyzw, s0
mad r3.z, -r2.y, l(0.500000), l(-0.500000)
add r2.xyzw, r3.xzxz, l(0.500488, 1.000000, 0.500000, 1.000488)
sample_indexable(texture2d)(float,float,float,float) r4.y, r2.xyxx, t2.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r4.z, r2.zwzz, t2.yzxw, s0
add r2.xy, r3.xzxx, l(0.500488, 1.000488, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r4.w, r2.xyxx, t2.yzwx, s0
ge r2.xyzw, r4.xyzw, r1.wwww
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
dp4 r1.w, r5.xyzw, r2.xyzw
mov r2.xyzw, cb2[1].xyzw
mov r3.x, l(0)
loop 
  ige r3.y, r3.x, l(4)
  breakc_nz r3.y
  ishl r3.y, r3.x, l(3)
  add r4.xyz, v3.xyzx, -cb1[r3.y + 4].xyzx
  dp3 r3.z, r4.xyzx, r4.xyzx
  sqrt r3.z, r3.z
  add r3.w, -r3.z, cb1[r3.y + 7].x
  div r4.xyz, r4.xyzx, r3.zzzz
  dp3 r3.z, r4.xyzx, cb1[r3.y + 5].xyzx
  add r3.z, r3.z, -cb1[r3.y + 7].z
  div_sat r3.zw, r3.zzzw, cb1[r3.y + 7].wwwy
  dp3 r4.x, r4.xyzx, r1.xyzx
  mov_sat r4.x, -r4.x
  mul r4.xyzw, r4.xxxx, cb1[r3.y + 6].xyzw
  mul r4.xyzw, r3.wwww, r4.xyzw
  mul r4.xyzw, r3.zzzz, r4.xyzw
  ilt r3.y, r3.x, l(1)
  dp3 r3.z, r4.xyzx, r4.xyzx
  ne r3.z, r3.z, l(0.000000)
  and r3.y, r3.z, r3.y
  if_nz r3.y
    mul r4.xyzw, r1.wwww, r4.xyzw
  endif 
  add r2.xyzw, r2.xyzw, r4.xyzw
  iadd r3.x, r3.x, l(1)
endloop 
mul r0.xyzw, r0.xyzw, cb2[2].xyzw
mul r0.xyzw, r0.xyzw, cb0[0].xyzw
mul o0.xyzw, r2.xyzw, r0.xyzw
ret 
// Approximately 77 instruction slots used
