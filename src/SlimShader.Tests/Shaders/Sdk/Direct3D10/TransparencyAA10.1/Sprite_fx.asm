//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 2 local buffer(s)
//
cbuffer cbChangeOnResize
{
    float   g_fViewportHeight;          // Offset:    0, size:    4
    float   g_fViewportWidth;           // Offset:    4, size:    4
    float   g_fStartPosX;               // Offset:    8, size:    4
    float   g_fStartPosY;               // Offset:   12, size:    4
    float   g_fWidth;                   // Offset:   16, size:    4
    float   g_fHeight;                  // Offset:   20, size:    4
    float   g_fTextureWidth;            // Offset:   24, size:    4
    float   g_fTextureHeight;           // Offset:   28, size:    4
    float   g_fDepthRangeMin;           // Offset:   32, size:    4
    float   g_fDepthRangeMax;           // Offset:   36, size:    4
    int     g_nSampleIndex;             // Offset:   40, size:    4
}

cbuffer cbBorder
{
    float4  g_v4BorderColor;            // Offset:    0, size:   16
}

//
// 10 local object(s)
//
Texture2D g_SpriteTexture;
Texture2DMS g_SpriteTextureMS;
Texture2DMS g_SpriteDepthTextureMS;
SamplerState g_SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_SamplerPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
RasterizerState DisableCulling
{
    CullMode = uint(NONE /* 1 */);
};
BlendState NoBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
DepthStencilState DisableDepthTestWrite
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
BlendState SrcAlphaBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(INV_SRC_ALPHA /* 6 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
RasterizerState EnableMultisampling
{
    MultisampleEnable = bool(TRUE /* 1 */);
};

//
// 6 technique(s)
//
technique10 RenderSprite
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4
            //   float g_fViewportWidth;            // Offset:    4 Size:     4
            //   float g_fStartPosX;                // Offset:    8 Size:     4
            //   float g_fStartPosY;                // Offset:   12 Size:     4
            //   float g_fWidth;                    // Offset:   16 Size:     4
            //   float g_fHeight;                   // Offset:   20 Size:     4
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_temps 1
            mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
            mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
            div r0.xy, r0.xyxx, r0.zwzz
            mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov o0.z, v0.z
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 8 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplerPoint                    sampler      NA          NA             s0      1 
            // g_SpriteTexture                   texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
    }

}

technique10 RenderSpriteMS
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4
            //   float g_fViewportWidth;            // Offset:    4 Size:     4
            //   float g_fStartPosX;                // Offset:    8 Size:     4
            //   float g_fStartPosY;                // Offset:   12 Size:     4
            //   float g_fWidth;                    // Offset:   16 Size:     4
            //   float g_fHeight;                   // Offset:   20 Size:     4
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_temps 1
            mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
            mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
            div r0.xy, r0.xyxx, r0.zwzz
            mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov o0.z, v0.z
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 8 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4 [unused]
            //   float g_fViewportWidth;            // Offset:    4 Size:     4 [unused]
            //   float g_fStartPosX;                // Offset:    8 Size:     4 [unused]
            //   float g_fStartPosY;                // Offset:   12 Size:     4 [unused]
            //   float g_fWidth;                    // Offset:   16 Size:     4 [unused]
            //   float g_fHeight;                   // Offset:   20 Size:     4 [unused]
            //   float g_fTextureWidth;             // Offset:   24 Size:     4
            //   float g_fTextureHeight;            // Offset:   28 Size:     4
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SpriteTextureMS                 texture  float4       2dMS4             t0      1 
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_resource_texture2dms(4) (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xy, v1.xyxx, cb0[1].zwzz
            ftoi r0.xy, r0.xyxx
            switch cb0[2].z
              case l(0)
              mov r0.z, l(0)
              ldms r1.xyzw, r0.xyzz, t0.xyzw, l(0)
              break 
              case l(1)
              mov r0.w, l(0)
              ldms r1.xyzw, r0.xyww, t0.xyzw, l(1)
              break 
              case l(2)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(2)
              break 
              case l(3)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(3)
              break 
              case l(4)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(4)
              break 
              case l(5)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(5)
              break 
              case l(6)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(6)
              break 
              case l(7)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(7)
              break 
              default 
              mov r1.xyzw, l(0,0,0,0)
              break 
            endswitch 
            mov o0.xyzw, r1.xyzw
            ret 
            // Approximately 41 instruction slots used
                    
        };
    }

}

technique10 RenderSpriteAsDepth
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4
            //   float g_fViewportWidth;            // Offset:    4 Size:     4
            //   float g_fStartPosX;                // Offset:    8 Size:     4
            //   float g_fStartPosY;                // Offset:   12 Size:     4
            //   float g_fWidth;                    // Offset:   16 Size:     4
            //   float g_fHeight;                   // Offset:   20 Size:     4
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_temps 1
            mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
            mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
            div r0.xy, r0.xyxx, r0.zwzz
            mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov o0.z, v0.z
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 8 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4 [unused]
            //   float g_fViewportWidth;            // Offset:    4 Size:     4 [unused]
            //   float g_fStartPosX;                // Offset:    8 Size:     4 [unused]
            //   float g_fStartPosY;                // Offset:   12 Size:     4 [unused]
            //   float g_fWidth;                    // Offset:   16 Size:     4 [unused]
            //   float g_fHeight;                   // Offset:   20 Size:     4 [unused]
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplerPoint                    sampler      NA          NA             s0      1 
            // g_SpriteTexture                   texture  float4          2d             t0      1 
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, -r0.x, l(1.000000)
            mov o0.w, r0.w
            max r0.x, r0.x, cb0[2].x
            min r0.x, r0.x, cb0[2].y
            add r0.x, r0.x, -cb0[2].x
            add r0.y, -cb0[2].x, cb0[2].y
            div o0.xyz, r0.xxxx, r0.yyyy
            ret 
            // Approximately 9 instruction slots used
                    
        };
    }

}

technique10 RenderSpriteAsDepthMS
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4
            //   float g_fViewportWidth;            // Offset:    4 Size:     4
            //   float g_fStartPosX;                // Offset:    8 Size:     4
            //   float g_fStartPosY;                // Offset:   12 Size:     4
            //   float g_fWidth;                    // Offset:   16 Size:     4
            //   float g_fHeight;                   // Offset:   20 Size:     4
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_temps 1
            mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
            mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
            div r0.xy, r0.xyxx, r0.zwzz
            mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov o0.z, v0.z
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 8 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4 [unused]
            //   float g_fViewportWidth;            // Offset:    4 Size:     4 [unused]
            //   float g_fStartPosX;                // Offset:    8 Size:     4 [unused]
            //   float g_fStartPosY;                // Offset:   12 Size:     4 [unused]
            //   float g_fWidth;                    // Offset:   16 Size:     4 [unused]
            //   float g_fHeight;                   // Offset:   20 Size:     4 [unused]
            //   float g_fTextureWidth;             // Offset:   24 Size:     4
            //   float g_fTextureHeight;            // Offset:   28 Size:     4
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4
            //   int g_nSampleIndex;                // Offset:   40 Size:     4
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SpriteDepthTextureMS            texture   float       2dMS8             t0      1 
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_resource_texture2dms(8) (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xy, v1.xyxx, cb0[1].zwzz
            ftoi r0.xy, r0.xyxx
            switch cb0[2].z
              case l(0)
              mov r0.z, l(0)
              ldms r1.xyzw, r0.xyzz, t0.xyzw, l(0)
              break 
              case l(1)
              mov r0.w, l(0)
              ldms r1.xyzw, r0.xyww, t0.xyzw, l(1)
              break 
              case l(2)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(2)
              break 
              case l(3)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(3)
              break 
              case l(4)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(4)
              break 
              case l(5)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(5)
              break 
              case l(6)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(6)
              break 
              case l(7)
              mov r0.zw, l(0,0,0,0)
              ldms r1.xyzw, r0.xyzw, t0.xyzw, l(7)
              break 
              default 
              mov r1.x, l(0)
              break 
            endswitch 
            add r0.x, -r1.x, l(1.000000)
            max r0.x, r0.x, cb0[2].x
            min r0.x, r0.x, cb0[2].y
            add r0.y, -cb0[2].x, cb0[2].y
            add r0.x, r0.x, -cb0[2].x
            div o0.xyzw, r0.xxxx, r0.yyyy
            ret 
            // Approximately 46 instruction slots used
                    
        };
    }

}

technique10 RenderAlphaSprite
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = SrcAlphaBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4
            //   float g_fViewportWidth;            // Offset:    4 Size:     4
            //   float g_fStartPosX;                // Offset:    8 Size:     4
            //   float g_fStartPosY;                // Offset:   12 Size:     4
            //   float g_fWidth;                    // Offset:   16 Size:     4
            //   float g_fHeight;                   // Offset:   20 Size:     4
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_temps 1
            mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
            mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
            div r0.xy, r0.xyxx, r0.zwzz
            mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov o0.z, v0.z
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 8 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplerPoint                    sampler      NA          NA             s0      1 
            // g_SpriteTexture                   texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
    }

}

technique10 RenderSpriteBorder
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbChangeOnResize
            // {
            //
            //   float g_fViewportHeight;           // Offset:    0 Size:     4
            //   float g_fViewportWidth;            // Offset:    4 Size:     4
            //   float g_fStartPosX;                // Offset:    8 Size:     4
            //   float g_fStartPosY;                // Offset:   12 Size:     4
            //   float g_fWidth;                    // Offset:   16 Size:     4
            //   float g_fHeight;                   // Offset:   20 Size:     4
            //   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
            //   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
            //   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
            //   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
            //   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_input v0.xyz
            dcl_output_siv o0.xyzw, position
            dcl_temps 1
            mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
            mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
            div r0.xy, r0.xyxx, r0.zwzz
            mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov o0.z, v0.z
            mov o0.w, l(1.000000)
            ret 
            // Approximately 7 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbBorder
            // {
            //
            //   float4 g_v4BorderColor;            // Offset:    0 Size:    16
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbBorder                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[1], immediateIndexed
            dcl_output o0.xyzw
            mov o0.xyzw, cb0[0].xyzw
            ret 
            // Approximately 2 instruction slots used
                    
        };
    }

}

