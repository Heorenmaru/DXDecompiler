//
// FX Version: fx_4_1
// Child effect (requires effect pool): false
//
// 1 local buffer(s)
//
cbuffer cbAll
{
    float4  g_v4MaterialAmbientColor;   // Offset:    0, size:   16
    float4  g_v4MaterialDiffuseColor;   // Offset:   16, size:   16
    float3  g_v3LightDir;               // Offset:   32, size:   12
    float4  g_v4LightDiffuse;           // Offset:   48, size:   16
    float   g_fTime;                    // Offset:   64, size:    4
    float4x4 g_m4x4World;               // Offset:   80, size:   64
    float4x4 g_m4x4WorldViewProjection; // Offset:  144, size:   64
    float   g_fAlphaRef;                // Offset:  208, size:    4
}

//
// 7 local object(s)
//
Texture2D g_AlphaTexture;
SamplerState g_AlphaTextureSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
DepthStencilState EnableDepthTestWrite
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
};
RasterizerState DisableCulling
{
    CullMode = uint(NONE /* 1 */);
};
RasterizerState EnableMultisampling
{
    MultisampleEnable = bool(TRUE /* 1 */);
};
BlendState NoBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
BlendState AlphaToCoverage
{
    AlphaToCoverageEnable = bool(TRUE /* 1 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};

//
// 3 technique(s)
//
technique10 RenderAlphaTest
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbAll
            // {
            //
            //   float4 g_v4MaterialAmbientColor;   // Offset:    0 Size:    16
            //   float4 g_v4MaterialDiffuseColor;   // Offset:   16 Size:    16
            //   float3 g_v3LightDir;               // Offset:   32 Size:    12
            //   float4 g_v4LightDiffuse;           // Offset:   48 Size:    16
            //   float g_fTime;                     // Offset:   64 Size:     4 [unused]
            //   float4x4 g_m4x4World;              // Offset:   80 Size:    64
            //   float4x4 g_m4x4WorldViewProjection;// Offset:  144 Size:    64
            //   float g_fAlphaRef;                 // Offset:  208 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbAll                             cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[13], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[9].xyzw
            dp4 o0.y, r0.xyzw, cb0[10].xyzw
            dp4 o0.z, r0.xyzw, cb0[11].xyzw
            dp4 o0.w, r0.xyzw, cb0[12].xyzw
            dp3 r0.x, v1.xyzx, cb0[5].xyzx
            dp3 r0.y, v1.xyzx, cb0[6].xyzx
            dp3 r0.z, v1.xyzx, cb0[7].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.x, r0.xyzx, cb0[2].xyzx
            max r0.x, r0.x, l(0.000000)
            mul r0.yzw, cb0[1].xxyz, cb0[3].xxyz
            mad o1.xyz, r0.yzwy, r0.xxxx, cb0[0].xyzx
            mov o1.w, l(1.000000)
            mov o2.xy, v2.xyxx
            ret 
            // Approximately 19 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbAll
            // {
            //
            //   float4 g_v4MaterialAmbientColor;   // Offset:    0 Size:    16 [unused]
            //   float4 g_v4MaterialDiffuseColor;   // Offset:   16 Size:    16 [unused]
            //   float3 g_v3LightDir;               // Offset:   32 Size:    12 [unused]
            //   float4 g_v4LightDiffuse;           // Offset:   48 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   64 Size:     4 [unused]
            //   float4x4 g_m4x4World;              // Offset:   80 Size:    64 [unused]
            //   float4x4 g_m4x4WorldViewProjection;// Offset:  144 Size:    64 [unused]
            //   float g_fAlphaRef;                 // Offset:  208 Size:     4
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_AlphaTextureSampler             sampler      NA          NA             s0      1 
            // g_AlphaTexture                    texture  float4          2d             t0      1 
            // cbAll                             cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[14], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xyzw
            dcl_input_ps linear v2.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample r0.xyzw, v2.xyxx, t0.xyzw, s0
            lt r1.x, r0.w, cb0[13].x
            discard_nz r1.x
            mul o0.xyzw, r0.xyzw, v1.xyzw
            ret 
            // Approximately 5 instruction slots used
                    
        };
    }

}

technique10 RenderAlphaToCoverage
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        RasterizerState = EnableMultisampling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = AlphaToCoverage;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbAll
            // {
            //
            //   float4 g_v4MaterialAmbientColor;   // Offset:    0 Size:    16
            //   float4 g_v4MaterialDiffuseColor;   // Offset:   16 Size:    16
            //   float3 g_v3LightDir;               // Offset:   32 Size:    12
            //   float4 g_v4LightDiffuse;           // Offset:   48 Size:    16
            //   float g_fTime;                     // Offset:   64 Size:     4 [unused]
            //   float4x4 g_m4x4World;              // Offset:   80 Size:    64
            //   float4x4 g_m4x4WorldViewProjection;// Offset:  144 Size:    64
            //   float g_fAlphaRef;                 // Offset:  208 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbAll                             cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[13], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[9].xyzw
            dp4 o0.y, r0.xyzw, cb0[10].xyzw
            dp4 o0.z, r0.xyzw, cb0[11].xyzw
            dp4 o0.w, r0.xyzw, cb0[12].xyzw
            dp3 r0.x, v1.xyzx, cb0[5].xyzx
            dp3 r0.y, v1.xyzx, cb0[6].xyzx
            dp3 r0.z, v1.xyzx, cb0[7].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.x, r0.xyzx, cb0[2].xyzx
            max r0.x, r0.x, l(0.000000)
            mul r0.yzw, cb0[1].xxyz, cb0[3].xxyz
            mad o1.xyz, r0.yzwy, r0.xxxx, cb0[0].xyzx
            mov o1.w, l(1.000000)
            mov o2.xy, v2.xyxx
            ret 
            // Approximately 19 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_AlphaTextureSampler             sampler      NA          NA             s0      1 
            // g_AlphaTexture                    texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xyzw
            dcl_input_ps linear v2.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v2.xyxx, t0.xyzw, s0
            mul o0.xyzw, r0.xyzw, v1.xyzw
            ret 
            // Approximately 3 instruction slots used
                    
        };
    }

}

technique10 RenderTransparencyAA
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        RasterizerState = DisableCulling;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbAll
            // {
            //
            //   float4 g_v4MaterialAmbientColor;   // Offset:    0 Size:    16
            //   float4 g_v4MaterialDiffuseColor;   // Offset:   16 Size:    16
            //   float3 g_v3LightDir;               // Offset:   32 Size:    12
            //   float4 g_v4LightDiffuse;           // Offset:   48 Size:    16
            //   float g_fTime;                     // Offset:   64 Size:     4 [unused]
            //   float4x4 g_m4x4World;              // Offset:   80 Size:    64
            //   float4x4 g_m4x4WorldViewProjection;// Offset:  144 Size:    64
            //   float g_fAlphaRef;                 // Offset:  208 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbAll                             cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            vs_4_1
            dcl_globalFlags refactoringAllowed
            dcl_constantbuffer CB0[13], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[9].xyzw
            dp4 o0.y, r0.xyzw, cb0[10].xyzw
            dp4 o0.z, r0.xyzw, cb0[11].xyzw
            dp4 o0.w, r0.xyzw, cb0[12].xyzw
            dp3 r0.x, v1.xyzx, cb0[5].xyzx
            dp3 r0.y, v1.xyzx, cb0[6].xyzx
            dp3 r0.z, v1.xyzx, cb0[7].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.x, r0.xyzx, cb0[2].xyzx
            max r0.x, r0.x, l(0.000000)
            mul r0.yzw, cb0[1].xxyz, cb0[3].xxyz
            mad o1.xyz, r0.yzwy, r0.xxxx, cb0[0].xyzx
            mov o1.w, l(1.000000)
            mov o2.xy, v2.xyxx
            ret 
            // Approximately 19 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbAll
            // {
            //
            //   float4 g_v4MaterialAmbientColor;   // Offset:    0 Size:    16 [unused]
            //   float4 g_v4MaterialDiffuseColor;   // Offset:   16 Size:    16 [unused]
            //   float3 g_v3LightDir;               // Offset:   32 Size:    12 [unused]
            //   float4 g_v4LightDiffuse;           // Offset:   48 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   64 Size:     4 [unused]
            //   float4x4 g_m4x4World;              // Offset:   80 Size:    64 [unused]
            //   float4x4 g_m4x4WorldViewProjection;// Offset:  144 Size:    64 [unused]
            //   float g_fAlphaRef;                 // Offset:  208 Size:     4
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_AlphaTextureSampler             sampler      NA          NA             s0      1 
            // g_AlphaTexture                    texture  float4          2d             t0      1 
            // cbAll                             cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
            //
            ps_4_1
            dcl_globalFlags refactoringAllowed
            dcl_constantbuffer CB0[14], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xyzw
            dcl_input_ps linear v2.xy
            dcl_output o0.xyzw
            dcl_output oMask
            dcl_temps 6
            mov r0.x, l(1)
            deriv_rty r1.xyzw, v2.xyxy
            mul r2.xyzw, r1.zwzw, l(-0.375000, -0.375000, -0.125000, -0.125000)
            mul r1.xyzw, r1.xyzw, l(0.125000, 0.125000, 0.375000, 0.375000)
            deriv_rtx r3.xyzw, v2.xyxy
            mad r2.xyzw, r3.zwzw, l(-0.125000, -0.125000, 0.375000, 0.375000), r2.xyzw
            mad r1.xyzw, r3.xyzw, l(-0.375000, -0.375000, 0.125000, 0.125000), r1.xyzw
            add r1.xyzw, r1.xyzw, v2.xyxy
            add r2.xyzw, r2.xyzw, v2.xyxy
            sample r3.xyzw, r2.xyxx, t0.xyzw, s0
            sample r2.xyzw, r2.zwzz, t0.xyzw, s0
            mov r0.y, r3.w
            add r0.z, r3.w, -cb0[13].x
            mul r3.xyz, r3.wwww, r3.xyzx
            ge r0.z, r0.z, l(0.000000)
            and r0.xy, r0.xyxx, r0.zzzz
            add r4.y, r2.w, r0.y
            add r0.w, r2.w, -cb0[13].x
            ge r0.w, r0.w, l(0.000000)
            movc r4.x, r0.z, l(3), l(2)
            and r3.xyz, r3.xyzx, r0.zzzz
            movc r0.xy, r0.wwww, r4.xyxx, r0.xyxx
            sample r4.xyzw, r1.xyxx, t0.xyzw, s0
            sample r1.xyzw, r1.zwzz, t0.xyzw, s0
            add r5.y, r0.y, r4.w
            iadd r5.x, r0.x, l(4)
            add r0.z, r4.w, -cb0[13].x
            ge r0.z, r0.z, l(0.000000)
            movc r0.xy, r0.zzzz, r5.xyxx, r0.xyxx
            iadd r5.x, r0.x, l(8)
            add r5.y, r1.w, r0.y
            add r3.w, r1.w, -cb0[13].x
            ge r3.w, r3.w, l(0.000000)
            movc r0.xy, r3.wwww, r5.xyxx, r0.xyxx
            mad r2.xyz, r2.xyzx, r2.wwww, r3.xyzx
            movc r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
            mad r3.xyz, r4.xyzx, r4.wwww, r2.xyzx
            movc r2.xyz, r0.zzzz, r3.xyzx, r2.xyzx
            mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
            movc r1.xyz, r3.wwww, r1.xyzx, r2.xyzx
            div r1.xyz, r1.xyzx, r0.yyyy
            mov r1.w, r0.y
            mov oMask, r0.x
            mul o0.xyzw, r1.xyzw, v1.xyzw
            ret 
            // Approximately 45 instruction slots used
                    
        };
    }

}

