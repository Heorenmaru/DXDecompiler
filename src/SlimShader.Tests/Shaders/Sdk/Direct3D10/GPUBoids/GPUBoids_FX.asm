//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 4 local buffer(s)
//
cbuffer cb0
{
    float4x4 g_mWorldViewProj;          // Offset:    0, size:   64
    float4x4 g_mWorld;                  // Offset:   64, size:   64
    float4x4 g_mInvView;                // Offset:  128, size:   64
    float   g_fGlobalTime;              // Offset:  192, size:    4
    float   g_fElapsedTime;             // Offset:  196, size:    4
}

cbuffer cbRare
{
    uint    g_iTexSize;                 // Offset:    0, size:    4
    uint    g_iMaxMip;                  // Offset:    4, size:    4
    float3  g_vFleePos = { 100, 0, 0 }; // Offset:   16, size:   12
    float   g_fBoidScale = 1;           // Offset:   28, size:    4
}

cbuffer cb1
{
    float   g_fParticleRad = 0.5;       // Offset:    0, size:    4
    float   g_fParticleMass = 1;        // Offset:    4, size:    4
    float   g_fG = 6.67300035e-011;     // Offset:    8, size:    4
    float   g_fMaxForce = 60;           // Offset:   12, size:    4
    float   g_fMaxSpeed = 25;           // Offset:   16, size:    4
    float   g_fAvoidStrength = 5;       // Offset:   20, size:    4
    float   g_fSeekStrength = 3;        // Offset:   24, size:    4
    float   g_fFleeStrength = 900000;   // Offset:   28, size:    4
    float   g_fSeparationStrength = 1;  // Offset:   32, size:    4
    float   g_fCohesionStrength = 0.5;  // Offset:   36, size:    4
    float   g_fAlignmentStrength = 0.5; // Offset:   40, size:    4
    float3  g_vSeekPos = { 0 };         // Offset:   48, size:   12
    float3  g_vLightPos = { -0.707000017, 0.707000017, 0 };// Offset:   64, size:   12
}

cbuffer cbImmutable
{
    float3  g_positions[4] = { -1, 1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0 };// Offset:    0, size:   60
    float2  g_texcoords[4] = { 0, 0, 1, 0, 0, 1, 1, 1 };// Offset:   64, size:   56
}

//
// 11 local object(s)
//
Texture2D g_txDiffuse;
Texture2DArray g_txParticleData;
Texture2D g_txForce;
SamplerState g_samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_samPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
BlendState ParticleBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
BlendState AdditiveBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(ONE /* 2 */);
    DestBlend[0] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
BlendState AdvanceBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
    BlendEnable[1] = bool(FALSE /* 0 */);
    SrcBlend[0] = uint(ONE /* 2 */);
    DestBlend[0] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
    RenderTargetWriteMask[1] = byte(0x0f);
};
BlendState NoBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
};
DepthStencilState DisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState EnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
};

//
// 6 technique(s)
//
technique10 RenderParticles
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbRare
            // {
            //
            //   uint g_iTexSize;                   // Offset:    0 Size:     4
            //   uint g_iMaxMip;                    // Offset:    4 Size:     4 [unused]
            //   float3 g_vFleePos;                 // Offset:   16 Size:    12 [unused]
            //      = 0x42c80000 0x00000000 0x00000000 
            //   float g_fBoidScale;                // Offset:   28 Size:     4 [unused]
            //      = 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // cbRare                            cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // COLOR                    0   xyzw        0     NONE   float       
            // SV_VERTEXID              0   x           1   VERTID    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[1], immediateIndexed
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_input_sgv v1.x, vertex_id
            dcl_output o0.xyz
            dcl_output o1.xyzw
            dcl_temps 2
            mov r0.zw, l(0,0,0,0)
            udiv r1.x, r0.x, v1.x, cb0[0].x
            mov r0.y, r1.x
            ld r0.xyzw, r0.xyzw, t0.xyzw
            mov o0.xyz, r0.xyzx
            mov o1.xyzw, l(1.000000,0.500000,0.200000,1.000000)
            ret 
            // Approximately 7 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64 [unused]
            //   float4x4 g_mInvView;               // Offset:  128 Size:    64
            //   float g_fGlobalTime;               // Offset:  192 Size:     4 [unused]
            //   float g_fElapsedTime;              // Offset:  196 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cb1
            // {
            //
            //   float g_fParticleRad;              // Offset:    0 Size:     4
            //      = 0x3f000000 
            //   float g_fParticleMass;             // Offset:    4 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fG;                        // Offset:    8 Size:     4 [unused]
            //      = 0x2e92bda7 
            //   float g_fMaxForce;                 // Offset:   12 Size:     4 [unused]
            //      = 0x42700000 
            //   float g_fMaxSpeed;                 // Offset:   16 Size:     4 [unused]
            //      = 0x41c80000 
            //   float g_fAvoidStrength;            // Offset:   20 Size:     4 [unused]
            //      = 0x40a00000 
            //   float g_fSeekStrength;             // Offset:   24 Size:     4 [unused]
            //      = 0x40400000 
            //   float g_fFleeStrength;             // Offset:   28 Size:     4 [unused]
            //      = 0x495bba00 
            //   float g_fSeparationStrength;       // Offset:   32 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fCohesionStrength;         // Offset:   36 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fAlignmentStrength;        // Offset:   40 Size:     4 [unused]
            //      = 0x3f000000 
            //   float3 g_vSeekPos;                 // Offset:   48 Size:    12 [unused]
            //      = 0x00000000 0x00000000 0x00000000 
            //   float3 g_vLightPos;                // Offset:   64 Size:    12 [unused]
            //      = 0xbf34fdf4 0x3f34fdf4 0x00000000 
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float3 g_positions[4];             // Offset:    0 Size:    60
            //      = 0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 
            //   float2 g_texcoords[4];             // Offset:   64 Size:    56
            //      = 0x00000000 0x00000000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x00000000 0x00000000 
            //        0x00000000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            // cb1                               cbuffer      NA          NA            cb1      1 
            // cbImmutable                       cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // TEXCOORD                 0   xy          0     NONE   float   xy  
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            // SV_POSITION              0   xyzw        2      POS   float   xyzw
            //
            gs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_constantbuffer CB2[8], dynamicIndexed
            dcl_input v[1][0].xyz
            dcl_input v[1][1].xyzw
            dcl_temps 3
            dcl_inputprimitive point 
            dcl_outputtopology trianglestrip 
            dcl_output o0.xy
            dcl_output o1.xyzw
            dcl_output_siv o2.xyzw, position
            dcl_maxout 4
            mov r0.w, l(1.000000)
            mov r1.x, l(0)
            loop 
              ige r1.y, r1.x, l(4)
              breakc_nz r1.y
              mul r1.yzw, cb1[0].xxxx, cb2[r1.x + 0].xxyz
              dp3 r2.x, r1.yzwy, cb0[8].xyzx
              dp3 r2.y, r1.yzwy, cb0[9].xyzx
              dp3 r2.z, r1.yzwy, cb0[10].xyzx
              add r0.xyz, r2.xyzx, v[0][0].xyzx
              dp4 r1.y, r0.xyzw, cb0[0].xyzw
              dp4 r1.z, r0.xyzw, cb0[1].xyzw
              dp4 r1.w, r0.xyzw, cb0[2].xyzw
              dp4 r0.x, r0.xyzw, cb0[3].xyzw
              mov o0.xy, cb2[r1.x + 4].xyxx
              mov o1.xyzw, v[0][1].xyzw
              mov o2.x, r1.y
              mov o2.y, r1.z
              mov o2.z, r1.w
              mov o2.w, r0.x
              emit 
              iadd r1.x, r1.x, l(1)
            endloop 
            cut 
            ret 
            // Approximately 25 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // TEXCOORD                 0   xy          0     NONE   float   xy  
            // COLOR                    0   xyzw        1     NONE   float   xyzw
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xy
            dcl_input_ps linear v1.xyzw
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v0.xyxx, t0.xyzw, s0
            mul o0.xyzw, r0.xyzw, v1.xyzw
            ret 
            // Approximately 3 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = ParticleBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 AccumulateForcesGS
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbRare
            // {
            //
            //   uint g_iTexSize;                   // Offset:    0 Size:     4
            //   uint g_iMaxMip;                    // Offset:    4 Size:     4 [unused]
            //   float3 g_vFleePos;                 // Offset:   16 Size:    12 [unused]
            //      = 0x42c80000 0x00000000 0x00000000 
            //   float g_fBoidScale;                // Offset:   28 Size:     4 [unused]
            //      = 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // cbRare                            cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // COLOR                    0   xyzw        0     NONE   float       
            // SV_VERTEXID              0   x           1   VERTID    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[1], immediateIndexed
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_input_sgv v1.x, vertex_id
            dcl_output o0.xyz
            dcl_temps 2
            mov r0.zw, l(0,0,0,0)
            udiv r1.x, r0.x, v1.x, cb0[0].x
            mov r0.y, r1.x
            ld r0.xyzw, r0.xyzw, t0.xyzw
            mov o0.xyz, r0.xyzx
            ret 
            // Approximately 6 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbImmutable
            // {
            //
            //   float3 g_positions[4];             // Offset:    0 Size:    60
            //      = 0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 
            //   float2 g_texcoords[4];             // Offset:   64 Size:    56
            //      = 0x00000000 0x00000000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x00000000 0x00000000 
            //        0x00000000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbImmutable                       cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_POSITION              0   xyzw        2      POS   float   xyzw
            //
            gs_4_0
            dcl_constantbuffer CB0[8], dynamicIndexed
            dcl_input v[1][0].xyz
            dcl_temps 1
            dcl_inputprimitive point 
            dcl_outputtopology trianglestrip 
            dcl_output o0.xyz
            dcl_output o1.xy
            dcl_output_siv o2.xyzw, position
            dcl_maxout 4
            mov r0.x, l(0)
            loop 
              ige r0.y, r0.x, l(4)
              breakc_nz r0.y
              mov o0.xyz, v[0][0].xyzx
              mov o1.xy, cb0[r0.x + 4].xyxx
              mov o2.xyz, cb0[r0.x + 0].xyzx
              mov o2.w, l(1.000000)
              emit 
              iadd r0.x, r0.x, l(1)
            endloop 
            cut 
            ret 
            // Approximately 13 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb1
            // {
            //
            //   float g_fParticleRad;              // Offset:    0 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fParticleMass;             // Offset:    4 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fG;                        // Offset:    8 Size:     4 [unused]
            //      = 0x2e92bda7 
            //   float g_fMaxForce;                 // Offset:   12 Size:     4
            //      = 0x42700000 
            //   float g_fMaxSpeed;                 // Offset:   16 Size:     4 [unused]
            //      = 0x41c80000 
            //   float g_fAvoidStrength;            // Offset:   20 Size:     4
            //      = 0x40a00000 
            //   float g_fSeekStrength;             // Offset:   24 Size:     4 [unused]
            //      = 0x40400000 
            //   float g_fFleeStrength;             // Offset:   28 Size:     4 [unused]
            //      = 0x495bba00 
            //   float g_fSeparationStrength;       // Offset:   32 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fCohesionStrength;         // Offset:   36 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fAlignmentStrength;        // Offset:   40 Size:     4 [unused]
            //      = 0x3f000000 
            //   float3 g_vSeekPos;                 // Offset:   48 Size:    12 [unused]
            //      = 0x00000000 0x00000000 0x00000000 
            //   float3 g_vLightPos;                // Offset:   64 Size:    12 [unused]
            //      = 0xbf34fdf4 0x3f34fdf4 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // cb1                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mov r0.xy, v1.xyxx
            mov r0.z, l(1.000000)
            sample_l r0.xyzw, r0.xyzx, t0.xyzw, s0, l(0.000000)
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mov r1.xy, v1.xyxx
            mov r1.z, l(0)
            sample_l r1.xyzw, r1.xyzx, t0.xyzw, s0, l(0.000000)
            add r2.xyz, -r1.xyzx, v0.xyzx
            dp3 r0.w, r2.xyzx, r0.xyzx
            mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
            add r1.xyz, r1.xyzx, -v0.xyzx
            add r0.xyz, r0.xyzx, -v0.xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            sqrt r0.w, r0.w
            div r0.w, r0.w, cb0[1].y
            mul r0.w, r0.w, r0.w
            div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
            dp3 r1.w, r0.xyzx, r0.xyzx
            rsq r2.x, r1.w
            sqrt r1.w, r1.w
            div r1.w, r1.w, cb0[1].y
            div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
            mul r0.xyz, r0.xyzx, r2.xxxx
            mul r0.xyz, r0.xyzx, cb0[0].wwww
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            sqrt r2.x, r0.w
            div r1.xyz, r1.xyzx, r2.xxxx
            mul r1.xyz, r1.xyzx, cb0[0].wwww
            div r1.xyz, r1.xyzx, r0.wwww
            lt r0.w, l(0.000000), r0.w
            mad r0.xyz, r0.xyzx, r1.wwww, r1.xyzx
            and o0.xyz, r0.xyzx, r0.wwww
            mov o0.w, l(1.000000)
            ret 
            // Approximately 37 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = AdditiveBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 AccumulateForces
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbRare
            // {
            //
            //   uint g_iTexSize;                   // Offset:    0 Size:     4
            //   uint g_iMaxMip;                    // Offset:    4 Size:     4 [unused]
            //   float3 g_vFleePos;                 // Offset:   16 Size:    12 [unused]
            //      = 0x42c80000 0x00000000 0x00000000 
            //   float g_fBoidScale;                // Offset:   28 Size:     4 [unused]
            //      = 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // cbRare                            cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_VERTEXID              0   x           2   VERTID    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_POSITION              0   xyzw        2      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[1], immediateIndexed
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_input_sgv v2.x, vertex_id
            dcl_output o0.xyz
            dcl_output o1.xy
            dcl_output_siv o2.xyzw, position
            dcl_temps 2
            udiv r0.x, null, v2.x, l(6)
            udiv r0.x, r1.x, r0.x, cb0[0].x
            mov r1.y, r0.x
            mov r1.zw, l(0,0,0,0)
            ld r0.xyzw, r1.xyzw, t0.xyzw
            mov o0.xyz, r0.xyzx
            mov o1.xy, v1.xyxx
            mov o2.xyz, v0.xyzx
            mov o2.w, l(1.000000)
            ret 
            // Approximately 10 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb1
            // {
            //
            //   float g_fParticleRad;              // Offset:    0 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fParticleMass;             // Offset:    4 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fG;                        // Offset:    8 Size:     4 [unused]
            //      = 0x2e92bda7 
            //   float g_fMaxForce;                 // Offset:   12 Size:     4
            //      = 0x42700000 
            //   float g_fMaxSpeed;                 // Offset:   16 Size:     4 [unused]
            //      = 0x41c80000 
            //   float g_fAvoidStrength;            // Offset:   20 Size:     4
            //      = 0x40a00000 
            //   float g_fSeekStrength;             // Offset:   24 Size:     4 [unused]
            //      = 0x40400000 
            //   float g_fFleeStrength;             // Offset:   28 Size:     4 [unused]
            //      = 0x495bba00 
            //   float g_fSeparationStrength;       // Offset:   32 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fCohesionStrength;         // Offset:   36 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fAlignmentStrength;        // Offset:   40 Size:     4 [unused]
            //      = 0x3f000000 
            //   float3 g_vSeekPos;                 // Offset:   48 Size:    12 [unused]
            //      = 0x00000000 0x00000000 0x00000000 
            //   float3 g_vLightPos;                // Offset:   64 Size:    12 [unused]
            //      = 0xbf34fdf4 0x3f34fdf4 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // cb1                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mov r0.xy, v1.xyxx
            mov r0.z, l(1.000000)
            sample_l r0.xyzw, r0.xyzx, t0.xyzw, s0, l(0.000000)
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mov r1.xy, v1.xyxx
            mov r1.z, l(0)
            sample_l r1.xyzw, r1.xyzx, t0.xyzw, s0, l(0.000000)
            add r2.xyz, -r1.xyzx, v0.xyzx
            dp3 r0.w, r2.xyzx, r0.xyzx
            mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
            add r1.xyz, r1.xyzx, -v0.xyzx
            add r0.xyz, r0.xyzx, -v0.xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            sqrt r0.w, r0.w
            div r0.w, r0.w, cb0[1].y
            mul r0.w, r0.w, r0.w
            div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
            dp3 r1.w, r0.xyzx, r0.xyzx
            rsq r2.x, r1.w
            sqrt r1.w, r1.w
            div r1.w, r1.w, cb0[1].y
            div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
            mul r0.xyz, r0.xyzx, r2.xxxx
            mul r0.xyz, r0.xyzx, cb0[0].wwww
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            sqrt r2.x, r0.w
            div r1.xyz, r1.xyzx, r2.xxxx
            mul r1.xyz, r1.xyzx, cb0[0].wwww
            div r1.xyz, r1.xyzx, r0.wwww
            lt r0.w, l(0.000000), r0.w
            mad r0.xyz, r0.xyzx, r1.wwww, r1.xyzx
            and o0.xyz, r0.xyzx, r0.wwww
            mov o0.w, l(1.000000)
            ret 
            // Approximately 37 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = AdditiveBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 AdvanceParticles
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // COLOR                    0   xyzw        0     NONE   float       
            // SV_VERTEXID              0   x           1   VERTID    uint       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            //
            vs_4_0
            dcl_output o0.xyz
            mov o0.xyz, l(0,0,0,0)
            ret 
            // Approximately 2 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbImmutable
            // {
            //
            //   float3 g_positions[4];             // Offset:    0 Size:    60
            //      = 0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 
            //   float2 g_texcoords[4];             // Offset:   64 Size:    56
            //      = 0x00000000 0x00000000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x00000000 0x00000000 
            //        0x00000000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbImmutable                       cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // TEXCOORD                 0   xy          0     NONE   float   xy  
            // RENDERTARGET             0   x           1     NONE    uint   x   
            // SV_RENDERTARGETARRAYINDEX     0    y          1  RTINDEX    uint    y  
            // SV_POSITION              0   xyzw        2      POS   float   xyzw
            //
            gs_4_0
            dcl_constantbuffer CB0[8], dynamicIndexed
            dcl_input v[1][0].xyz
            dcl_temps 1
            dcl_inputprimitive point 
            dcl_outputtopology trianglestrip 
            dcl_output o0.xy
            dcl_output o1.x
            dcl_output_siv o1.y, rendertarget_array_index
            dcl_output_siv o2.xyzw, position
            dcl_maxout 12
            mov r0.x, l(0)
            loop 
              ige r0.y, r0.x, l(4)
              breakc_nz r0.y
              mov o0.xy, cb0[r0.x + 4].xyxx
              mov o1.x, l(0)
              mov o2.xyz, cb0[r0.x + 0].xyzx
              mov o2.w, l(1.000000)
              mov o1.y, l(0)
              emit 
              iadd r0.x, r0.x, l(1)
            endloop 
            cut 
            mov r0.x, l(0)
            loop 
              ige r0.y, r0.x, l(4)
              breakc_nz r0.y
              mov o0.xy, cb0[r0.x + 4].xyxx
              mov o1.x, l(1)
              mov o2.xyz, cb0[r0.x + 0].xyzx
              mov o2.w, l(1.000000)
              mov o1.y, l(1)
              emit 
              iadd r0.x, r0.x, l(1)
            endloop 
            cut 
            mov r0.x, l(0)
            loop 
              ige r0.y, r0.x, l(4)
              breakc_nz r0.y
              mov o0.xy, cb0[r0.x + 4].xyxx
              mov o1.x, l(2)
              mov o2.xyz, cb0[r0.x + 0].xyzx
              mov o2.w, l(1.000000)
              mov o1.y, l(2)
              emit 
              iadd r0.x, r0.x, l(1)
            endloop 
            cut 
            ret 
            // Approximately 40 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64 [unused]
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64 [unused]
            //   float4x4 g_mInvView;               // Offset:  128 Size:    64 [unused]
            //   float g_fGlobalTime;               // Offset:  192 Size:     4 [unused]
            //   float g_fElapsedTime;              // Offset:  196 Size:     4
            //
            // }
            //
            // cbuffer cbRare
            // {
            //
            //   uint g_iTexSize;                   // Offset:    0 Size:     4 [unused]
            //   uint g_iMaxMip;                    // Offset:    4 Size:     4
            //   float3 g_vFleePos;                 // Offset:   16 Size:    12
            //      = 0x42c80000 0x00000000 0x00000000 
            //   float g_fBoidScale;                // Offset:   28 Size:     4 [unused]
            //      = 0x3f800000 
            //
            // }
            //
            // cbuffer cb1
            // {
            //
            //   float g_fParticleRad;              // Offset:    0 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fParticleMass;             // Offset:    4 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fG;                        // Offset:    8 Size:     4 [unused]
            //      = 0x2e92bda7 
            //   float g_fMaxForce;                 // Offset:   12 Size:     4
            //      = 0x42700000 
            //   float g_fMaxSpeed;                 // Offset:   16 Size:     4
            //      = 0x41c80000 
            //   float g_fAvoidStrength;            // Offset:   20 Size:     4 [unused]
            //      = 0x40a00000 
            //   float g_fSeekStrength;             // Offset:   24 Size:     4
            //      = 0x40400000 
            //   float g_fFleeStrength;             // Offset:   28 Size:     4
            //      = 0x495bba00 
            //   float g_fSeparationStrength;       // Offset:   32 Size:     4
            //      = 0x3f800000 
            //   float g_fCohesionStrength;         // Offset:   36 Size:     4
            //      = 0x3f000000 
            //   float g_fAlignmentStrength;        // Offset:   40 Size:     4
            //      = 0x3f000000 
            //   float3 g_vSeekPos;                 // Offset:   48 Size:    12
            //      = 0x00000000 0x00000000 0x00000000 
            //   float3 g_vLightPos;                // Offset:   64 Size:    12 [unused]
            //      = 0xbf34fdf4 0x3f34fdf4 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // g_txForce                         texture  float4          2d             t1      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            // cbRare                            cbuffer      NA          NA            cb1      1 
            // cb1                               cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // TEXCOORD                 0   xy          0     NONE   float   xy  
            // RENDERTARGET             0   x           1     NONE    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[13], immediateIndexed
            dcl_constantbuffer CB1[2], immediateIndexed
            dcl_constantbuffer CB2[4], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xy
            dcl_input_ps constant v1.x
            dcl_output o0.xyzw
            dcl_temps 7
            mov r0.xy, v0.xyxx
            mov r0.z, l(0)
            utof r0.w, cb1[0].y
            sample_l r1.xyzw, r0.xyzx, t0.xyzw, s0, r0.w
            sample_l r2.xyzw, r0.xyzx, t0.xyzw, s0, l(0.000000)
            add r0.xyz, r1.xyzx, -r2.xyzx
            dp3 r1.x, r0.xyzx, r0.xyzx
            rsq r1.x, r1.x
            mul r0.xyz, r0.xyzx, r1.xxxx
            mul r0.xyz, r0.xyzx, cb2[0].wwww
            sample_l r1.xyzw, v0.xyxx, t1.xyzw, s0, l(0.000000)
            add r3.xyz, -r2.xyzx, cb2[3].xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            rsq r1.w, r1.w
            mul r3.xyz, r1.wwww, r3.xyzx
            mov r4.xy, v0.xyxx
            mov r4.z, l(1.000000)
            sample_l r5.xyzw, r4.xyzx, t0.xyzw, s0, l(0.000000)
            sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, r0.w
            mul r6.xyz, r5.wwww, r5.xyzx
            mad r3.xyz, r3.xyzx, cb2[1].xxxx, -r6.xyzx
            mul r3.xyz, r3.xyzx, cb2[1].zzzz
            mad r1.xyz, cb2[2].xxxx, r1.xyzx, r3.xyzx
            add r3.xyz, r2.xyzx, -cb1[1].xyzx
            mad r2.xyz, r6.xyzx, cb0[12].yyyy, r2.xyzx
            dp3 r0.w, r3.xyzx, r3.xyzx
            sqrt r1.w, r0.w
            div r3.xyz, r3.xyzx, r1.wwww
            mad r3.xyz, r3.xyzx, cb2[1].xxxx, -r6.xyzx
            div r3.xyz, r3.xyzx, r0.wwww
            mad r1.xyz, cb2[1].wwww, r3.xyzx, r1.xyzx
            mad r0.xyz, cb2[2].yyyy, r0.xyzx, r1.xyzx
            mad r1.xyz, r4.xyzx, r4.wwww, -r6.xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r1.xyz, r1.xyzx, cb2[0].wwww
            mad r0.xyz, cb2[2].zzzz, r1.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r1.x, r0.w
            mul r1.xyz, r0.xyzx, r1.xxxx
            mul r1.xyz, r1.xyzx, cb2[0].wwww
            mul r1.w, cb2[0].w, cb2[0].w
            lt r0.w, r1.w, r0.w
            movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
            mad r0.xyz, r0.xyzx, cb0[12].yyyy, r6.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r1.x, r0.w
            mul r1.xyz, r0.xyzx, r1.xxxx
            mul r1.xyz, r1.xyzx, cb2[1].xxxx
            mul r1.w, cb2[1].x, cb2[1].x
            lt r0.w, r1.w, r0.w
            movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r1.x, r0.w
            sqrt r0.w, r0.w
            lt r0.w, l(0.001000), r0.w
            mul r0.xyz, r0.xyzx, r1.xxxx
            movc r0.xyz, r0.wwww, r0.xyzx, r5.xyzx
            mov r1.xy, v0.xyxx
            mov r1.z, l(2.000000)
            sample_l r1.xyzw, r1.xyzx, t0.xyzw, s0, l(0.000000)
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul r1.xyz, r1.wwww, r1.xyzx
            mul r3.xyz, r0.zxyz, r1.xyzx
            mad r1.xyz, r1.zxyz, r0.xyzx, -r3.xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul r1.xyz, r1.wwww, r1.xyzx
            mul r3.xyz, r0.zxyz, r1.xyzx
            mad r1.xyz, r0.yzxy, r1.yzxy, -r3.xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul r1.xyz, r1.wwww, r1.xyzx
            mov r0.w, cb2[1].x
            mov r2.w, l(0)
            ult r3.xy, l(1, 0, 0, 0), v1.xxxx
            movc r0.xyzw, r3.yyyy, r0.xyzw, r2.xyzw
            mov r1.w, l(0)
            movc o0.xyzw, r3.xxxx, r1.xyzw, r0.xyzw
            ret 
            // Approximately 82 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 RenderBoids
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64 [unused]
            //   float4x4 g_mInvView;               // Offset:  128 Size:    64 [unused]
            //   float g_fGlobalTime;               // Offset:  192 Size:     4 [unused]
            //   float g_fElapsedTime;              // Offset:  196 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbRare
            // {
            //
            //   uint g_iTexSize;                   // Offset:    0 Size:     4
            //   uint g_iMaxMip;                    // Offset:    4 Size:     4 [unused]
            //   float3 g_vFleePos;                 // Offset:   16 Size:    12 [unused]
            //      = 0x42c80000 0x00000000 0x00000000 
            //   float g_fBoidScale;                // Offset:   28 Size:     4
            //      = 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_txParticleData                  texture  float4     2darray             t0      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            // cbRare                            cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float       
            // SV_INSTANCEID            0   x           3   INSTID    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // NORMAL                   0   xyz         0     NONE   float   xyz 
            // SV_POSITION              0   xyzw        1      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[4], immediateIndexed
            dcl_constantbuffer CB1[2], immediateIndexed
            dcl_resource_texture2darray (float,float,float,float) t0
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input_sgv v3.x, instance_id
            dcl_output o0.xyz
            dcl_output_siv o1.xyzw, position
            dcl_temps 5
            mov r0.z, l(2)
            udiv r1.x, r2.x, v3.x, cb1[0].x
            mov r2.y, r1.x
            mov r2.zw, l(0,0,1,0)
            mov r0.xyw, r2.xyxw
            ld r1.xyzw, r0.xyzw, t0.xyzw
            ld r2.xyzw, r2.xyzw, t0.xyzw
            ld r0.xyzw, r0.xyww, t0.xyzw
            mul r3.xyz, r1.zxyz, r2.yzxy
            mad r3.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
            mul r1.xyz, r1.xyzx, cb1[1].wwww
            mul r2.xyz, r2.xyzx, cb1[1].wwww
            dp3 r0.w, r3.xyzx, r3.xyzx
            rsq r0.w, r0.w
            mul r3.xyz, r0.wwww, r3.xyzx
            mul r3.xyz, r3.xyzx, cb1[1].wwww
            mul r4.xyz, r1.xyzx, v1.yyyy
            mul r1.xyz, r1.xyzx, v0.yyyy
            mad r1.xyz, v0.xxxx, r3.xyzx, r1.xyzx
            mad r3.xyz, v1.xxxx, r3.xyzx, r4.xyzx
            mad o0.xyz, v1.zzzz, r2.xyzx, r3.xyzx
            mad r1.xyz, v0.zzzz, r2.xyzx, r1.xyzx
            add r0.xyz, r0.xyzx, r1.xyzx
            mov r0.w, l(1.000000)
            dp4 o1.x, r0.xyzw, cb0[0].xyzw
            dp4 o1.y, r0.xyzw, cb0[1].xyzw
            dp4 o1.z, r0.xyzw, cb0[2].xyzw
            dp4 o1.w, r0.xyzw, cb0[3].xyzw
            ret 
            // Approximately 29 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb1
            // {
            //
            //   float g_fParticleRad;              // Offset:    0 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fParticleMass;             // Offset:    4 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fG;                        // Offset:    8 Size:     4 [unused]
            //      = 0x2e92bda7 
            //   float g_fMaxForce;                 // Offset:   12 Size:     4 [unused]
            //      = 0x42700000 
            //   float g_fMaxSpeed;                 // Offset:   16 Size:     4 [unused]
            //      = 0x41c80000 
            //   float g_fAvoidStrength;            // Offset:   20 Size:     4 [unused]
            //      = 0x40a00000 
            //   float g_fSeekStrength;             // Offset:   24 Size:     4 [unused]
            //      = 0x40400000 
            //   float g_fFleeStrength;             // Offset:   28 Size:     4 [unused]
            //      = 0x495bba00 
            //   float g_fSeparationStrength;       // Offset:   32 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fCohesionStrength;         // Offset:   36 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fAlignmentStrength;        // Offset:   40 Size:     4 [unused]
            //      = 0x3f000000 
            //   float3 g_vSeekPos;                 // Offset:   48 Size:    12 [unused]
            //      = 0x00000000 0x00000000 0x00000000 
            //   float3 g_vLightPos;                // Offset:   64 Size:    12
            //      = 0xbf34fdf4 0x3f34fdf4 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb1                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // NORMAL                   0   xyz         0     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[5], immediateIndexed
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 1
            dp3 r0.x, v0.xyzx, v0.xyzx
            rsq r0.x, r0.x
            mul r0.xyz, r0.xxxx, v0.xyzx
            dp3_sat r0.x, r0.xyzx, cb0[4].xyzx
            max r0.x, r0.x, l(0.300000)
            mul o0.xyzw, r0.xxxx, l(1.000000, 0.000000, 0.000000, 1.000000)
            ret 
            // Approximately 7 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 RenderMesh
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64
            //   float4x4 g_mInvView;               // Offset:  128 Size:    64 [unused]
            //   float g_fGlobalTime;               // Offset:  192 Size:     4 [unused]
            //   float g_fElapsedTime;              // Offset:  196 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // NORMAL                   0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_POSITION              0   xyzw        2      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[7], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xy
            dcl_output_siv o2.xyzw, position
            dcl_temps 1
            dp3 o0.x, v1.xyzx, cb0[4].xyzx
            dp3 o0.y, v1.xyzx, cb0[5].xyzx
            dp3 o0.z, v1.xyzx, cb0[6].xyzx
            mov o1.xy, v2.xyxx
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o2.x, r0.xyzw, cb0[0].xyzw
            dp4 o2.y, r0.xyzw, cb0[1].xyzw
            dp4 o2.z, r0.xyzw, cb0[2].xyzw
            dp4 o2.w, r0.xyzw, cb0[3].xyzw
            ret 
            // Approximately 11 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb1
            // {
            //
            //   float g_fParticleRad;              // Offset:    0 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fParticleMass;             // Offset:    4 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fG;                        // Offset:    8 Size:     4 [unused]
            //      = 0x2e92bda7 
            //   float g_fMaxForce;                 // Offset:   12 Size:     4 [unused]
            //      = 0x42700000 
            //   float g_fMaxSpeed;                 // Offset:   16 Size:     4 [unused]
            //      = 0x41c80000 
            //   float g_fAvoidStrength;            // Offset:   20 Size:     4 [unused]
            //      = 0x40a00000 
            //   float g_fSeekStrength;             // Offset:   24 Size:     4 [unused]
            //      = 0x40400000 
            //   float g_fFleeStrength;             // Offset:   28 Size:     4 [unused]
            //      = 0x495bba00 
            //   float g_fSeparationStrength;       // Offset:   32 Size:     4 [unused]
            //      = 0x3f800000 
            //   float g_fCohesionStrength;         // Offset:   36 Size:     4 [unused]
            //      = 0x3f000000 
            //   float g_fAlignmentStrength;        // Offset:   40 Size:     4 [unused]
            //      = 0x3f000000 
            //   float3 g_vSeekPos;                 // Offset:   48 Size:    12 [unused]
            //      = 0x00000000 0x00000000 0x00000000 
            //   float3 g_vLightPos;                // Offset:   64 Size:    12
            //      = 0xbf34fdf4 0x3f34fdf4 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // cb1                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // NORMAL                   0   xyz         0     NONE   float   xyz 
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[5], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            dp3 r0.x, v0.xyzx, v0.xyzx
            rsq r0.x, r0.x
            mul r0.xyz, r0.xxxx, v0.xyzx
            dp3_sat r0.x, r0.xyzx, cb0[4].xyzx
            sample r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul o0.xyzw, r0.xxxx, r1.xyzw
            ret 
            // Approximately 7 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

