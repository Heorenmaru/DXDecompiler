//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 4 local buffer(s)
//
cbuffer cbMultiPerFrameFrame
{
    float4x4 mWorldViewProj : WORLDVIEWPROJECTION;// Offset:    0, size:   64
    float4x4 mWorldView : WORLDVIEW;    // Offset:   64, size:   64
    float4x4 mWorld : WORLD;            // Offset:  128, size:   64
    float4x4 mView : VIEW;              // Offset:  192, size:   64
    float4x4 mProj : PROJECTION;        // Offset:  256, size:   64
    float3  vEye;                       // Offset:  320, size:   12
}

cbuffer cbPerMaterial
{
    float4  vMaterialDiff;              // Offset:    0, size:   16
    float4  vMaterialSpec;              // Offset:   16, size:   16
}

cbuffer cbPerCubeRender
{
    float4x4 g_mViewCM[6];              // Offset:    0, size:  384
}

cbuffer cbConstants
{
    float   fReflectivity = 1;          // Offset:    0, size:    4
    float3  skyDir = { 0, 1, 0 };       // Offset:    4, size:   12
    float   R0Constant = 0.183673471;   // Offset:   16, size:    4
    float   R0Inv = 0.816326559;        // Offset:   20, size:    4
    float4  vFrontColor = { 0.300000012, 0.100000001, 0.600000024, 1 };// Offset:   32, size:   16
    float4  vBackColor = { 0, 0.300000012, 0.300000012, 1 };// Offset:   48, size:   16
    float4  vHighlight1 = { 0.899999976, 0.800000012, 0.899999976, 1 };// Offset:   64, size:   16
    float4  vHighlight2 = { 1, 1, 0.600000024, 1 };// Offset:   80, size:   16
    float   lightMul = 3;               // Offset:   96, size:    4
    float4  vOne = { 1 };               // Offset:  112, size:   16
}

//
// 10 local object(s)
//
Texture2D g_txDiffuse;
Texture2D g_txFalloff;
TextureCube g_txEnvMap;
Texture2D g_txVisual;
SamplerState g_samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState g_samPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_samCube
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
RasterizerState RasNoCull
{
    CullMode = uint(NONE /* 1 */);
};
BlendState NoBlend
{
    BlendEnable[0] = bool(FALSE /* 0 */);
};
BlendState GlassBlendState
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(INV_SRC_ALPHA /* 6 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};

//
// 7 technique(s)
//
technique10 RenderCubeMap
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64 [unused]
            //   float4x4 mWorldView;               // Offset:   64 Size:    64 [unused]
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float       
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[12], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dp4 o0.x, v0.xyzw, cb0[8].xyzw
            dp4 o0.y, v0.xyzw, cb0[9].xyzw
            dp4 o0.z, v0.xyzw, cb0[10].xyzw
            dp4 o0.w, v0.xyzw, cb0[11].xyzw
            mov o1.xy, v2.xyxx
            ret 
            // Approximately 6 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64 [unused]
            //   float4x4 mWorldView;               // Offset:   64 Size:    64 [unused]
            //   float4x4 mWorld;                   // Offset:  128 Size:    64 [unused]
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            // cbuffer cbPerCubeRender
            // {
            //
            //   float4x4 g_mViewCM[6];             // Offset:    0 Size:   384
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            // cbPerCubeRender                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_RenderTargetArrayIndex     0   x           2  RTINDEX    uint   x   
            //
            gs_4_0
            dcl_constantbuffer CB0[20], immediateIndexed
            dcl_constantbuffer CB1[24], dynamicIndexed
            dcl_input_siv v[3][0].xyzw, position
            dcl_input v[3][1].xy
            dcl_temps 3
            dcl_inputprimitive triangle 
            dcl_outputtopology trianglestrip 
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output_siv o2.x, rendertarget_array_index
            dcl_maxout 18
            mov r0.x, l(0)
            loop 
              ige r0.y, r0.x, l(6)
              breakc_nz r0.y
              ishl r0.y, r0.x, l(2)
              mov r0.z, l(0)
              loop 
                ige r0.w, r0.z, l(3)
                breakc_nz r0.w
                dp4 r1.x, v[r0.z + 0][0].xyzw, cb1[r0.y + 0].xyzw
                dp4 r1.y, v[r0.z + 0][0].xyzw, cb1[r0.y + 1].xyzw
                dp4 r1.z, v[r0.z + 0][0].xyzw, cb1[r0.y + 2].xyzw
                dp4 r1.w, v[r0.z + 0][0].xyzw, cb1[r0.y + 3].xyzw
                dp4 r0.w, r1.xyzw, cb0[16].xyzw
                dp4 r2.x, r1.xyzw, cb0[17].xyzw
                dp4 r2.y, r1.xyzw, cb0[18].xyzw
                dp4 r1.x, r1.xyzw, cb0[19].xyzw
                mov o0.x, r0.w
                mov o0.y, r2.x
                mov o0.z, r2.y
                mov o0.w, r1.x
                mov o1.xy, v[r0.z + 0][1].xyxx
                mov o2.x, r0.x
                emit 
                iadd r0.z, r0.z, l(1)
              endloop 
              cut 
              iadd r0.x, r0.x, l(1)
            endloop 
            ret 
            // Approximately 30 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_RenderTargetArrayIndex     0   x           2  RTINDEX    uint       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlend;
    }

}

technique10 RenderCubeMap_Inst
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64 [unused]
            //   float4x4 mWorldView;               // Offset:   64 Size:    64 [unused]
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            // cbuffer cbPerCubeRender
            // {
            //
            //   float4x4 g_mViewCM[6];             // Offset:    0 Size:   384
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            // cbPerCubeRender                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float       
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            // SV_InstanceID            0   x           3   INSTID    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // RTARRAYINDEX             0   x           2     NONE    uint   x   
            //
            vs_4_0
            dcl_constantbuffer CB0[20], immediateIndexed
            dcl_constantbuffer CB1[24], dynamicIndexed
            dcl_input v0.xyzw
            dcl_input v2.xy
            dcl_input_sgv v3.x, instance_id
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.x
            dcl_temps 3
            dp4 r0.x, v0.xyzw, cb0[8].xyzw
            dp4 r0.y, v0.xyzw, cb0[9].xyzw
            dp4 r0.z, v0.xyzw, cb0[10].xyzw
            dp4 r0.w, v0.xyzw, cb0[11].xyzw
            ishl r1.x, v3.x, l(2)
            dp4 r2.x, r0.xyzw, cb1[r1.x + 0].xyzw
            dp4 r2.y, r0.xyzw, cb1[r1.x + 1].xyzw
            dp4 r2.z, r0.xyzw, cb1[r1.x + 2].xyzw
            dp4 r2.w, r0.xyzw, cb1[r1.x + 3].xyzw
            dp4 o0.x, r2.xyzw, cb0[16].xyzw
            dp4 o0.y, r2.xyzw, cb0[17].xyzw
            dp4 o0.z, r2.xyzw, cb0[18].xyzw
            dp4 o0.w, r2.xyzw, cb0[19].xyzw
            mov o1.xy, v2.xyxx
            mov o2.x, v3.x
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // RTARRAYINDEX             0   x           2     NONE    uint   x   
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_RenderTargetArrayIndex     0   x           2  RTINDEX    uint   x   
            //
            gs_4_0
            dcl_input_siv v[3][0].xyzw, position
            dcl_input v[3][1].xy
            dcl_input v[3][2].x
            dcl_temps 1
            dcl_inputprimitive triangle 
            dcl_outputtopology trianglestrip 
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output_siv o2.x, rendertarget_array_index
            dcl_maxout 3
            mov r0.x, l(0)
            loop 
              ige r0.y, r0.x, l(3)
              breakc_nz r0.y
              mov o0.xyzw, v[r0.x + 0][0].xyzw
              mov o1.xy, v[r0.x + 0][1].xyxx
              mov o2.x, v[r0.x + 0][2].x
              emit 
              iadd r0.x, r0.x, l(1)
            endloop 
            ret 
            // Approximately 11 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // SV_RenderTargetArrayIndex     0   x           2  RTINDEX    uint       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlend;
    }

}

technique10 RenderScene
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64
            //   float4x4 mWorldView;               // Offset:   64 Size:    64 [unused]
            //   float4x4 mWorld;                   // Offset:  128 Size:    64 [unused]
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float       
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[4], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dp4 o0.x, v0.xyzw, cb0[0].xyzw
            dp4 o0.y, v0.xyzw, cb0[1].xyzw
            dp4 o0.z, v0.xyzw, cb0[2].xyzw
            dp4 o0.w, v0.xyzw, cb0[3].xyzw
            mov o1.xy, v2.xyxx
            ret 
            // Approximately 6 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlend;
    }

}

technique10 RenderEnvMappedScene
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64
            //   float4x4 mWorldView;               // Offset:   64 Size:    64
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[12], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_output o3.xyzw
            dcl_output o4.xyz
            dcl_output o5.xyz
            dcl_output o6.xyz
            dcl_output o7.xyz
            dcl_output o8.xyz
            dcl_output o9.xyz
            dcl_output o10.xyz
            dp4 o0.x, v0.xyzw, cb0[0].xyzw
            dp4 o0.y, v0.xyzw, cb0[1].xyzw
            dp4 o0.z, v0.xyzw, cb0[2].xyzw
            dp4 o0.w, v0.xyzw, cb0[3].xyzw
            mov o1.xy, l(0,0,0,0)
            dp4 o2.x, v0.xyzw, cb0[8].xyzw
            dp4 o2.y, v0.xyzw, cb0[9].xyzw
            dp4 o2.z, v0.xyzw, cb0[10].xyzw
            dp4 o2.w, v0.xyzw, cb0[11].xyzw
            dp4 o3.x, v0.xyzw, cb0[4].xyzw
            dp4 o3.y, v0.xyzw, cb0[5].xyzw
            dp4 o3.z, v0.xyzw, cb0[6].xyzw
            dp4 o3.w, v0.xyzw, cb0[7].xyzw
            mov o4.xyz, v1.xyzx
            mov o5.xyz, l(0,0,0,0)
            mov o6.xyz, l(0,0,0,0)
            mov o7.xyz, l(0,0,0,0)
            mov o8.xyz, l(0,0,0,0)
            mov o9.xyz, l(0,0,0,0)
            mov o10.xyz, l(0,0,0,0)
            ret 
            // Approximately 21 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float       
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float       
            // SIXNORMS                 1   xyz         6     NONE   float       
            // SIXNORMS                 2   xyz         7     NONE   float       
            // SIXNORMS                 3   xyz         8     NONE   float       
            // SIXNORMS                 4   xyz         9     NONE   float       
            // SIXNORMS                 5   xyz        10     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            gs_4_0
            dcl_input_siv v[3][0].xyzw, position
            dcl_input v[3][1].xy
            dcl_input v[3][2].xyzw
            dcl_input v[3][3].xyzw
            dcl_input v[3][4].xyz
            dcl_input v[3][5].xyz
            dcl_input v[3][6].xyz
            dcl_input v[3][7].xyz
            dcl_input v[3][8].xyz
            dcl_input v[3][9].xyz
            dcl_input v[3][10].xyz
            dcl_temps 3
            dcl_inputprimitive triangle 
            dcl_outputtopology trianglestrip 
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_output o3.xyzw
            dcl_output o4.xyz
            dcl_output o5.xyz
            dcl_output o6.xyz
            dcl_output o7.xyz
            dcl_output o8.xyz
            dcl_output o9.xyz
            dcl_output o10.xyz
            dcl_maxout 3
            mov o0.xyzw, v[0][0].xyzw
            mov o1.xy, l(0,0,0,0)
            mov o2.xyzw, v[0][2].xyzw
            mov o3.xyzw, v[0][3].xyzw
            mov o4.xyz, v[0][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            add r0.xyz, v[1][4].xyzx, v[0][4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            add r1.xyz, v[0][4].xyzx, v[2][4].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            add r2.xyz, v[2][4].xyzx, v[1][4].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o10.xyz, r2.xyzx
            emit 
            mov o0.xyzw, v[1][0].xyzw
            mov o1.xy, l(1.000000,0,0,0)
            mov o2.xyzw, v[1][2].xyzw
            mov o3.xyzw, v[1][3].xyzw
            mov o4.xyz, v[1][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            mov o10.xyz, r2.xyzx
            emit 
            mov o0.xyzw, v[2][0].xyzw
            mov o1.xy, l(0,1.000000,0,0)
            mov o2.xyzw, v[2][2].xyzw
            mov o3.xyzw, v[2][3].xyzw
            mov o4.xyz, v[2][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            mov o10.xyz, r2.xyzx
            emit 
            cut 
            ret 
            // Approximately 50 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64 [unused]
            //   float4x4 mWorldView;               // Offset:   64 Size:    64
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12
            //
            // }
            //
            // cbuffer cbConstants
            // {
            //
            //   float fReflectivity;               // Offset:    0 Size:     4
            //      = 0x3f800000 
            //   float3 skyDir;                     // Offset:    4 Size:    12
            //      = 0x00000000 0x3f800000 0x00000000 
            //   float R0Constant;                  // Offset:   16 Size:     4
            //      = 0x3e3c14e6 
            //   float R0Inv;                       // Offset:   20 Size:     4
            //      = 0x3f50fac7 
            //   float4 vFrontColor;                // Offset:   32 Size:    16
            //      = 0x3e99999a 0x3dcccccd 0x3f19999a 0x3f800000 
            //   float4 vBackColor;                 // Offset:   48 Size:    16
            //      = 0x00000000 0x3e99999a 0x3e99999a 0x3f800000 
            //   float4 vHighlight1;                // Offset:   64 Size:    16
            //      = 0x3f666666 0x3f4ccccd 0x3f666666 0x3f800000 
            //   float4 vHighlight2;                // Offset:   80 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f19999a 0x3f800000 
            //   float lightMul;                    // Offset:   96 Size:     4
            //      = 0x40400000 
            //   float4 vOne;                       // Offset:  112 Size:    16 [unused]
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samCube                         sampler      NA          NA             s1      1 
            // g_txFalloff                       texture  float4          2d             t0      1 
            // g_txEnvMap                        texture  float4        cube             t1      1 
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            // cbConstants                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyz 
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float       
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[21], immediateIndexed
            dcl_constantbuffer CB1[7], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texturecube (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyzw
            dcl_input_ps linear v5.xyz
            dcl_input_ps linear v6.xyz
            dcl_input_ps linear v7.xyz
            dcl_input_ps linear v8.xyz
            dcl_input_ps linear v9.xyz
            dcl_input_ps linear v10.xyz
            dcl_output o0.xyzw
            dcl_temps 5
            mul r0.xy, v1.xyxx, v1.xyxx
            add r0.zw, r0.xxxy, r0.xxxy
            add r0.z, r0.w, r0.z
            mul r0.w, v1.x, l(4.000000)
            mad r0.z, r0.w, v1.y, r0.z
            mul r0.w, r0.w, v1.y
            mad r0.z, -v1.x, l(3.000000), r0.z
            mad r0.z, -v1.y, l(3.000000), r0.z
            add r0.z, r0.z, l(1.000000)
            mad r1.xy, r0.xyxx, l(-4.000000, -4.000000, 0.000000, 0.000000), -r0.wwww
            mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -v1.xyxx
            mad r1.xy, v1.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000), r1.xyxx
            mul r1.xzw, r1.xxxx, v6.xxyz
            mad r1.xzw, r0.zzzz, v5.xxyz, r1.xxzw
            mad r1.xzw, r0.xxxx, v7.xxyz, r1.xxzw
            mad r1.xyz, r1.yyyy, v8.xyzx, r1.xzwx
            mad r0.xyz, r0.yyyy, v9.xyzx, r1.xyzx
            mad r0.xyz, r0.wwww, v10.xyzx, r0.xyzx
            dp3 r1.x, r0.xyzx, cb0[4].xyzx
            dp3 r1.y, r0.xyzx, cb0[5].xyzx
            dp3 r1.z, r0.xyzx, cb0[6].xyzx
            dp3 r0.w, r1.xyzx, cb1[0].yzwy
            add r0.w, r0.w, r0.w
            mad r1.xyw, r0.wwww, r1.xyxz, -cb1[0].yzyw
            dp3 r0.w, r1.xywx, r1.xywx
            rsq r0.w, r0.w
            mul r1.xyw, r0.wwww, r1.xyxw
            dp4 r0.w, v3.xyzw, v3.xyzw
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, v3.xyzx
            dp3 r0.w, r1.xywx, -r2.xyzx
            max r0.w, r0.w, l(0.000000)
            log r0.w, r0.w
            mul r1.xy, r0.wwww, l(32.000000, 64.000000, 0.000000, 0.000000)
            exp r1.xy, r1.xyxx
            mul r2.xyzw, r1.yyyy, cb1[5].xyzw
            mul r3.xyzw, r1.xxxx, cb1[4].xyzw
            mul r3.xyzw, r3.xyzw, l(1.250000, 1.250000, 1.250000, 1.250000)
            mul r2.xyzw, r2.xyzw, l(1.600000, 1.600000, 1.600000, 1.600000)
            dp3 r4.x, r0.xyzx, cb0[8].xyzx
            dp3 r4.y, r0.xyzx, cb0[9].xyzx
            dp3 r4.z, r0.xyzx, cb0[10].xyzx
            add r0.xyz, v2.xyzx, -cb0[20].xyzx
            dp3 r0.w, r0.xyzx, r4.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xyz, -r0.wwww, r4.xyzx, r0.xyzx
            dp3 r0.w, r4.xyzx, cb1[0].yzwy
            sample r4.xyzw, r0.xyzx, t1.xyzw, s1
            mul r4.xyzw, r4.xyzw, cb1[6].xxxx
            add r0.x, r1.z, l(1.000000)
            add_sat r1.x, -r1.z, l(-0.010000)
            mul r0.y, r0.x, r0.x
            mul r0.y, r0.y, r0.y
            mul r0.x, r0.y, r0.x
            mad r0.x, cb1[1].y, r0.x, cb1[1].x
            mad r2.xyzw, r0.xxxx, r4.xyzw, r2.xyzw
            mov r1.y, l(0)
            sample r4.xyzw, r1.xyxx, t0.xyzw, s0
            mad r0.x, -r1.x, r4.x, l(1.000000)
            mul r0.y, r1.x, r4.x
            mul r1.xyzw, r0.xxxx, cb1[3].xyzw
            mad r1.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
            mad r0.xyzw, r0.wwww, r1.xyzw, r3.xyzw
            mad o0.xyzw, cb1[0].xxxx, r2.xyzw, r0.xyzw
            ret 
            // Approximately 65 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlend;
    }

}

technique10 RenderEnvMappedScene_NoTexture
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64
            //   float4x4 mWorldView;               // Offset:   64 Size:    64
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[12], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_output o3.xyzw
            dcl_output o4.xyz
            dcl_output o5.xyz
            dcl_output o6.xyz
            dcl_output o7.xyz
            dcl_output o8.xyz
            dcl_output o9.xyz
            dcl_output o10.xyz
            dp4 o0.x, v0.xyzw, cb0[0].xyzw
            dp4 o0.y, v0.xyzw, cb0[1].xyzw
            dp4 o0.z, v0.xyzw, cb0[2].xyzw
            dp4 o0.w, v0.xyzw, cb0[3].xyzw
            mov o1.xy, l(0,0,0,0)
            dp4 o2.x, v0.xyzw, cb0[8].xyzw
            dp4 o2.y, v0.xyzw, cb0[9].xyzw
            dp4 o2.z, v0.xyzw, cb0[10].xyzw
            dp4 o2.w, v0.xyzw, cb0[11].xyzw
            dp4 o3.x, v0.xyzw, cb0[4].xyzw
            dp4 o3.y, v0.xyzw, cb0[5].xyzw
            dp4 o3.z, v0.xyzw, cb0[6].xyzw
            dp4 o3.w, v0.xyzw, cb0[7].xyzw
            mov o4.xyz, v1.xyzx
            mov o5.xyz, l(0,0,0,0)
            mov o6.xyz, l(0,0,0,0)
            mov o7.xyz, l(0,0,0,0)
            mov o8.xyz, l(0,0,0,0)
            mov o9.xyz, l(0,0,0,0)
            mov o10.xyz, l(0,0,0,0)
            ret 
            // Approximately 21 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float       
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float       
            // SIXNORMS                 1   xyz         6     NONE   float       
            // SIXNORMS                 2   xyz         7     NONE   float       
            // SIXNORMS                 3   xyz         8     NONE   float       
            // SIXNORMS                 4   xyz         9     NONE   float       
            // SIXNORMS                 5   xyz        10     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            gs_4_0
            dcl_input_siv v[3][0].xyzw, position
            dcl_input v[3][1].xy
            dcl_input v[3][2].xyzw
            dcl_input v[3][3].xyzw
            dcl_input v[3][4].xyz
            dcl_input v[3][5].xyz
            dcl_input v[3][6].xyz
            dcl_input v[3][7].xyz
            dcl_input v[3][8].xyz
            dcl_input v[3][9].xyz
            dcl_input v[3][10].xyz
            dcl_temps 3
            dcl_inputprimitive triangle 
            dcl_outputtopology trianglestrip 
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_output o3.xyzw
            dcl_output o4.xyz
            dcl_output o5.xyz
            dcl_output o6.xyz
            dcl_output o7.xyz
            dcl_output o8.xyz
            dcl_output o9.xyz
            dcl_output o10.xyz
            dcl_maxout 3
            mov o0.xyzw, v[0][0].xyzw
            mov o1.xy, l(0,0,0,0)
            mov o2.xyzw, v[0][2].xyzw
            mov o3.xyzw, v[0][3].xyzw
            mov o4.xyz, v[0][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            add r0.xyz, v[1][4].xyzx, v[0][4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            add r1.xyz, v[0][4].xyzx, v[2][4].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            add r2.xyz, v[2][4].xyzx, v[1][4].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o10.xyz, r2.xyzx
            emit 
            mov o0.xyzw, v[1][0].xyzw
            mov o1.xy, l(1.000000,0,0,0)
            mov o2.xyzw, v[1][2].xyzw
            mov o3.xyzw, v[1][3].xyzw
            mov o4.xyz, v[1][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            mov o10.xyz, r2.xyzx
            emit 
            mov o0.xyzw, v[2][0].xyzw
            mov o1.xy, l(0,1.000000,0,0)
            mov o2.xyzw, v[2][2].xyzw
            mov o3.xyzw, v[2][3].xyzw
            mov o4.xyz, v[2][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            mov o10.xyz, r2.xyzx
            emit 
            cut 
            ret 
            // Approximately 50 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64 [unused]
            //   float4x4 mWorldView;               // Offset:   64 Size:    64 [unused]
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12
            //
            // }
            //
            // cbuffer cbPerMaterial
            // {
            //
            //   float4 vMaterialDiff;              // Offset:    0 Size:    16
            //   float4 vMaterialSpec;              // Offset:   16 Size:    16
            //
            // }
            //
            // cbuffer cbConstants
            // {
            //
            //   float fReflectivity;               // Offset:    0 Size:     4 [unused]
            //      = 0x3f800000 
            //   float3 skyDir;                     // Offset:    4 Size:    12
            //      = 0x00000000 0x3f800000 0x00000000 
            //   float R0Constant;                  // Offset:   16 Size:     4 [unused]
            //      = 0x3e3c14e6 
            //   float R0Inv;                       // Offset:   20 Size:     4 [unused]
            //      = 0x3f50fac7 
            //   float4 vFrontColor;                // Offset:   32 Size:    16 [unused]
            //      = 0x3e99999a 0x3dcccccd 0x3f19999a 0x3f800000 
            //   float4 vBackColor;                 // Offset:   48 Size:    16 [unused]
            //      = 0x00000000 0x3e99999a 0x3e99999a 0x3f800000 
            //   float4 vHighlight1;                // Offset:   64 Size:    16 [unused]
            //      = 0x3f666666 0x3f4ccccd 0x3f666666 0x3f800000 
            //   float4 vHighlight2;                // Offset:   80 Size:    16 [unused]
            //      = 0x3f800000 0x3f800000 0x3f19999a 0x3f800000 
            //   float lightMul;                    // Offset:   96 Size:     4 [unused]
            //      = 0x40400000 
            //   float4 vOne;                       // Offset:  112 Size:    16 [unused]
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samCube                         sampler      NA          NA             s0      1 
            // g_txEnvMap                        texture  float4        cube             t0      1 
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            // cbPerMaterial                     cbuffer      NA          NA            cb1      1 
            // cbConstants                       cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyz 
            // TEXCOORD                 2   xyzw        3     NONE   float       
            // TEXCOORD                 3   xyz         4     NONE   float       
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[21], immediateIndexed
            dcl_constantbuffer CB1[2], immediateIndexed
            dcl_constantbuffer CB2[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v5.xyz
            dcl_input_ps linear v6.xyz
            dcl_input_ps linear v7.xyz
            dcl_input_ps linear v8.xyz
            dcl_input_ps linear v9.xyz
            dcl_input_ps linear v10.xyz
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xy, v1.xyxx, v1.xyxx
            add r0.zw, r0.xxxy, r0.xxxy
            add r0.z, r0.w, r0.z
            mul r0.w, v1.x, l(4.000000)
            mad r0.z, r0.w, v1.y, r0.z
            mul r0.w, r0.w, v1.y
            mad r0.z, -v1.x, l(3.000000), r0.z
            mad r0.z, -v1.y, l(3.000000), r0.z
            add r0.z, r0.z, l(1.000000)
            mad r1.xy, r0.xyxx, l(-4.000000, -4.000000, 0.000000, 0.000000), -r0.wwww
            mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -v1.xyxx
            mad r1.xy, v1.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000), r1.xyxx
            mul r1.xzw, r1.xxxx, v6.xxyz
            mad r1.xzw, r0.zzzz, v5.xxyz, r1.xxzw
            mad r1.xzw, r0.xxxx, v7.xxyz, r1.xxzw
            mad r1.xyz, r1.yyyy, v8.xyzx, r1.xzwx
            mad r0.xyz, r0.yyyy, v9.xyzx, r1.xyzx
            mad r0.xyz, r0.wwww, v10.xyzx, r0.xyzx
            dp3 r1.x, r0.xyzx, cb0[8].xyzx
            dp3 r1.y, r0.xyzx, cb0[9].xyzx
            dp3 r1.z, r0.xyzx, cb0[10].xyzx
            add r0.xyz, v2.xyzx, -cb0[20].xyzx
            dp3 r0.w, r0.xyzx, r1.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xyz, -r0.wwww, r1.xyzx, r0.xyzx
            dp3_sat r0.w, cb2[0].yzwy, r1.xyzx
            add r0.w, r0.w, l(0.200000)
            mul r1.xyz, r0.wwww, cb1[0].xyzx
            sample r0.xyzw, r0.xyzx, t0.xyzw, s0
            mul r0.xyz, r0.xyzx, cb1[1].xyzx
            mul r0.xyz, r0.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
            mad o0.xyz, r1.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r0.xyzx
            mov o0.w, cb1[0].w
            ret 
            // Approximately 34 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlend;
    }

}

technique10 RenderEnvMappedGlass
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64
            //   float4x4 mWorldView;               // Offset:   64 Size:    64
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[12], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_output o3.xyzw
            dcl_output o4.xyz
            dcl_output o5.xyz
            dcl_output o6.xyz
            dcl_output o7.xyz
            dcl_output o8.xyz
            dcl_output o9.xyz
            dcl_output o10.xyz
            dp4 o0.x, v0.xyzw, cb0[0].xyzw
            dp4 o0.y, v0.xyzw, cb0[1].xyzw
            dp4 o0.z, v0.xyzw, cb0[2].xyzw
            dp4 o0.w, v0.xyzw, cb0[3].xyzw
            mov o1.xy, l(0,0,0,0)
            dp4 o2.x, v0.xyzw, cb0[8].xyzw
            dp4 o2.y, v0.xyzw, cb0[9].xyzw
            dp4 o2.z, v0.xyzw, cb0[10].xyzw
            dp4 o2.w, v0.xyzw, cb0[11].xyzw
            dp4 o3.x, v0.xyzw, cb0[4].xyzw
            dp4 o3.y, v0.xyzw, cb0[5].xyzw
            dp4 o3.z, v0.xyzw, cb0[6].xyzw
            dp4 o3.w, v0.xyzw, cb0[7].xyzw
            mov o4.xyz, v1.xyzx
            mov o5.xyz, l(0,0,0,0)
            mov o6.xyz, l(0,0,0,0)
            mov o7.xyz, l(0,0,0,0)
            mov o8.xyz, l(0,0,0,0)
            mov o9.xyz, l(0,0,0,0)
            mov o10.xyz, l(0,0,0,0)
            ret 
            // Approximately 21 instruction slots used
                    
        };
        GeometryShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float       
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float       
            // SIXNORMS                 1   xyz         6     NONE   float       
            // SIXNORMS                 2   xyz         7     NONE   float       
            // SIXNORMS                 3   xyz         8     NONE   float       
            // SIXNORMS                 4   xyz         9     NONE   float       
            // SIXNORMS                 5   xyz        10     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyzw
            // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
            // TEXCOORD                 3   xyz         4     NONE   float   xyz 
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            gs_4_0
            dcl_input_siv v[3][0].xyzw, position
            dcl_input v[3][1].xy
            dcl_input v[3][2].xyzw
            dcl_input v[3][3].xyzw
            dcl_input v[3][4].xyz
            dcl_input v[3][5].xyz
            dcl_input v[3][6].xyz
            dcl_input v[3][7].xyz
            dcl_input v[3][8].xyz
            dcl_input v[3][9].xyz
            dcl_input v[3][10].xyz
            dcl_temps 3
            dcl_inputprimitive triangle 
            dcl_outputtopology trianglestrip 
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_output o3.xyzw
            dcl_output o4.xyz
            dcl_output o5.xyz
            dcl_output o6.xyz
            dcl_output o7.xyz
            dcl_output o8.xyz
            dcl_output o9.xyz
            dcl_output o10.xyz
            dcl_maxout 3
            mov o0.xyzw, v[0][0].xyzw
            mov o1.xy, l(0,0,0,0)
            mov o2.xyzw, v[0][2].xyzw
            mov o3.xyzw, v[0][3].xyzw
            mov o4.xyz, v[0][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            add r0.xyz, v[1][4].xyzx, v[0][4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            add r1.xyz, v[0][4].xyzx, v[2][4].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            add r2.xyz, v[2][4].xyzx, v[1][4].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o10.xyz, r2.xyzx
            emit 
            mov o0.xyzw, v[1][0].xyzw
            mov o1.xy, l(1.000000,0,0,0)
            mov o2.xyzw, v[1][2].xyzw
            mov o3.xyzw, v[1][3].xyzw
            mov o4.xyz, v[1][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            mov o10.xyz, r2.xyzx
            emit 
            mov o0.xyzw, v[2][0].xyzw
            mov o1.xy, l(0,1.000000,0,0)
            mov o2.xyzw, v[2][2].xyzw
            mov o3.xyzw, v[2][3].xyzw
            mov o4.xyz, v[2][4].xyzx
            mov o5.xyz, v[0][4].xyzx
            mov o6.xyz, r0.xyzx
            mov o7.xyz, v[1][4].xyzx
            mov o8.xyz, r1.xyzx
            mov o9.xyz, v[2][4].xyzx
            mov o10.xyz, r2.xyzx
            emit 
            cut 
            ret 
            // Approximately 50 instruction slots used
                    
        };
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbMultiPerFrameFrame
            // {
            //
            //   float4x4 mWorldViewProj;           // Offset:    0 Size:    64 [unused]
            //   float4x4 mWorldView;               // Offset:   64 Size:    64 [unused]
            //   float4x4 mWorld;                   // Offset:  128 Size:    64
            //   float4x4 mView;                    // Offset:  192 Size:    64 [unused]
            //   float4x4 mProj;                    // Offset:  256 Size:    64 [unused]
            //   float3 vEye;                       // Offset:  320 Size:    12
            //
            // }
            //
            // cbuffer cbPerMaterial
            // {
            //
            //   float4 vMaterialDiff;              // Offset:    0 Size:    16
            //   float4 vMaterialSpec;              // Offset:   16 Size:    16
            //
            // }
            //
            // cbuffer cbConstants
            // {
            //
            //   float fReflectivity;               // Offset:    0 Size:     4 [unused]
            //      = 0x3f800000 
            //   float3 skyDir;                     // Offset:    4 Size:    12
            //      = 0x00000000 0x3f800000 0x00000000 
            //   float R0Constant;                  // Offset:   16 Size:     4 [unused]
            //      = 0x3e3c14e6 
            //   float R0Inv;                       // Offset:   20 Size:     4 [unused]
            //      = 0x3f50fac7 
            //   float4 vFrontColor;                // Offset:   32 Size:    16 [unused]
            //      = 0x3e99999a 0x3dcccccd 0x3f19999a 0x3f800000 
            //   float4 vBackColor;                 // Offset:   48 Size:    16 [unused]
            //      = 0x00000000 0x3e99999a 0x3e99999a 0x3f800000 
            //   float4 vHighlight1;                // Offset:   64 Size:    16 [unused]
            //      = 0x3f666666 0x3f4ccccd 0x3f666666 0x3f800000 
            //   float4 vHighlight2;                // Offset:   80 Size:    16 [unused]
            //      = 0x3f800000 0x3f800000 0x3f19999a 0x3f800000 
            //   float lightMul;                    // Offset:   96 Size:     4 [unused]
            //      = 0x40400000 
            //   float4 vOne;                       // Offset:  112 Size:    16 [unused]
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samCube                         sampler      NA          NA             s0      1 
            // g_txEnvMap                        texture  float4        cube             t0      1 
            // cbMultiPerFrameFrame              cbuffer      NA          NA            cb0      1 
            // cbPerMaterial                     cbuffer      NA          NA            cb1      1 
            // cbConstants                       cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            // TEXCOORD                 1   xyzw        2     NONE   float   xyz 
            // TEXCOORD                 2   xyzw        3     NONE   float       
            // TEXCOORD                 3   xyz         4     NONE   float       
            // SIXNORMS                 0   xyz         5     NONE   float   xyz 
            // SIXNORMS                 1   xyz         6     NONE   float   xyz 
            // SIXNORMS                 2   xyz         7     NONE   float   xyz 
            // SIXNORMS                 3   xyz         8     NONE   float   xyz 
            // SIXNORMS                 4   xyz         9     NONE   float   xyz 
            // SIXNORMS                 5   xyz        10     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[21], immediateIndexed
            dcl_constantbuffer CB1[2], immediateIndexed
            dcl_constantbuffer CB2[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v5.xyz
            dcl_input_ps linear v6.xyz
            dcl_input_ps linear v7.xyz
            dcl_input_ps linear v8.xyz
            dcl_input_ps linear v9.xyz
            dcl_input_ps linear v10.xyz
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xy, v1.xyxx, v1.xyxx
            add r0.zw, r0.xxxy, r0.xxxy
            add r0.z, r0.w, r0.z
            mul r0.w, v1.x, l(4.000000)
            mad r0.z, r0.w, v1.y, r0.z
            mul r0.w, r0.w, v1.y
            mad r0.z, -v1.x, l(3.000000), r0.z
            mad r0.z, -v1.y, l(3.000000), r0.z
            add r0.z, r0.z, l(1.000000)
            mad r1.xy, r0.xyxx, l(-4.000000, -4.000000, 0.000000, 0.000000), -r0.wwww
            mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -v1.xyxx
            mad r1.xy, v1.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000), r1.xyxx
            mul r1.xzw, r1.xxxx, v6.xxyz
            mad r1.xzw, r0.zzzz, v5.xxyz, r1.xxzw
            mad r1.xzw, r0.xxxx, v7.xxyz, r1.xxzw
            mad r1.xyz, r1.yyyy, v8.xyzx, r1.xzwx
            mad r0.xyz, r0.yyyy, v9.xyzx, r1.xyzx
            mad r0.xyz, r0.wwww, v10.xyzx, r0.xyzx
            dp3 r1.x, r0.xyzx, cb0[8].xyzx
            dp3 r1.y, r0.xyzx, cb0[9].xyzx
            dp3 r1.z, r0.xyzx, cb0[10].xyzx
            add r0.xyz, v2.xyzx, -cb0[20].xyzx
            dp3 r0.w, r0.xyzx, r1.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xyz, -r0.wwww, r1.xyzx, r0.xyzx
            dp3_sat r0.w, cb2[0].yzwy, r1.xyzx
            add r0.w, r0.w, l(0.200000)
            mul r1.xyz, r0.wwww, cb1[0].xyzx
            sample r0.xyzw, r0.xyzx, t0.xyzw, s0
            mul r0.xyz, r0.xyzx, cb1[1].xyzx
            mul r0.xyz, r0.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
            mad o0.xyz, r1.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r0.xyzx
            mov o0.w, cb1[0].w
            ret 
            // Approximately 34 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = GlassBlendState;
    }

}

technique10 VisualizeCubeMap
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float       
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v2.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_txVisual                        texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlend;
    }

}

