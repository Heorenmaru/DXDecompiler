//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 1 local buffer(s)
//
cbuffer $Globals
{
    float4x4 g_mWorld;                  // Offset:    0, size:   64
    float4x4 g_mWorldViewProj;          // Offset:   64, size:   64
    float2  g_avSampleOffsets[15];      // Offset:  128, size:  232
    float4  g_avSampleWeights[15];      // Offset:  368, size:  240
    float3  g_vEyePt;                   // Offset:  608, size:   12
}

//
// 12 local object(s)
//
TextureCube g_tCube;
Texture2D g_tNormal;
Texture2D s0;
Texture2D s1;
Texture2D s2;
SamplerState PointSampler
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState LinearSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_samPointCube
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_samLinearCube
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
RasterizerState DisableCulling
{
    CullMode = uint(NONE /* 1 */);
};
DepthStencilState DisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState EnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
};

//
// 22 technique(s)
//
technique10 BloomTech
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64 [unused]
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64 [unused]
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[38], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mov r0.xyzw, l(0,0,0,0)
            mov r1.x, l(0)
            loop 
              ige r1.y, r1.x, l(15)
              breakc_nz r1.y
              add r1.yz, v1.xxyx, cb0[r1.x + 8].xxyx
              sample r2.xyzw, r1.yzyy, t0.xyzw, s0
              mad r0.xyzw, cb0[r1.x + 23].xyzw, r2.xyzw, r0.xyzw
              iadd r1.x, r1.x, l(1)
            endloop 
            mov o0.xyzw, r0.xyzw
            ret 
            // Approximately 12 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 Scene_FP
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232 [unused]
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240 [unused]
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[39], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_output o4.xy
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[4].xyzw
            dp4 o0.y, r0.xyzw, cb0[5].xyzw
            dp4 o0.z, r0.xyzw, cb0[6].xyzw
            dp4 o0.w, r0.xyzw, cb0[7].xyzw
            dp3 o1.x, v1.xyzx, cb0[0].xyzx
            dp3 o1.y, v1.xyzx, cb0[1].xyzx
            dp3 o1.z, v1.xyzx, cb0[2].xyzx
            dp4 r1.x, r0.xyzw, cb0[0].xyzw
            dp4 r1.y, r0.xyzw, cb0[1].xyzw
            dp4 r1.z, r0.xyzw, cb0[2].xyzw
            add o2.xyz, r1.xyzx, -cb0[38].xyzx
            dp3 o3.x, v3.xyzx, cb0[0].xyzx
            dp3 o3.y, v3.xyzx, cb0[1].xyzx
            dp3 o3.z, v3.xyzx, cb0[2].xyzx
            mov o4.xy, v2.xyxx
            ret 
            // Approximately 18 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // g_samPointCube                    sampler      NA          NA             s1      1 
            // g_tCube                           texture  float4        cube             t0      1 
            // g_tNormal                         texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v1.zxyz, v3.yzxy
            mad r0.xyz, v1.yzxy, v3.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v4.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r2.xyz, r1.yyyy, v3.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
            dp3 r0.w, v2.xyzx, r0.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xzw, r0.xxyz, -r0.wwww, v2.xxyz
            mul_sat r1.xyz, r0.yyyy, l(0.000000, 0.000000, 0.400000, 0.000000)
            sample r0.xyzw, r0.xzwx, t0.xyzw, s1
            add r0.xyz, -r1.yyzy, r0.xyzx
            mad o0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 22 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 Scene_RGBE8
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232 [unused]
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240 [unused]
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[39], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_output o4.xy
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[4].xyzw
            dp4 o0.y, r0.xyzw, cb0[5].xyzw
            dp4 o0.z, r0.xyzw, cb0[6].xyzw
            dp4 o0.w, r0.xyzw, cb0[7].xyzw
            dp3 o1.x, v1.xyzx, cb0[0].xyzx
            dp3 o1.y, v1.xyzx, cb0[1].xyzx
            dp3 o1.z, v1.xyzx, cb0[2].xyzx
            dp4 r1.x, r0.xyzw, cb0[0].xyzw
            dp4 r1.y, r0.xyzw, cb0[1].xyzw
            dp4 r1.z, r0.xyzw, cb0[2].xyzw
            add o2.xyz, r1.xyzx, -cb0[38].xyzx
            dp3 o3.x, v3.xyzx, cb0[0].xyzx
            dp3 o3.y, v3.xyzx, cb0[1].xyzx
            dp3 o3.z, v3.xyzx, cb0[2].xyzx
            mov o4.xy, v2.xyxx
            ret 
            // Approximately 18 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // g_samPointCube                    sampler      NA          NA             s1      1 
            // g_tCube                           texture  float4        cube             t0      1 
            // g_tNormal                         texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v1.zxyz, v3.yzxy
            mad r0.xyz, v1.yzxy, v3.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v4.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r2.xyz, r1.yyyy, v3.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
            dp3 r0.w, v2.xyzx, r0.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xzw, r0.xxyz, -r0.wwww, v2.xxyz
            mul_sat r1.xyz, r0.yyyy, l(0.000000, 0.000000, 0.400000, 0.000000)
            sample r0.xyzw, r0.xzwx, t0.xyzw, s1
            mad r0.w, r0.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r0.xyzx, r0.wwww, -r1.yyzy
            mad r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
            max r0.w, r0.y, r0.x
            max r0.w, r0.z, r0.w
            log r0.w, r0.w
            round_pi r0.w, r0.w
            exp r1.x, r0.w
            add r0.w, r0.w, l(128.000000)
            mul o0.w, r0.w, l(0.003922)
            div o0.xyz, r0.xyzx, r1.xxxx
            ret 
            // Approximately 31 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 Scene_RGB16
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232 [unused]
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240 [unused]
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[39], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_output o4.xy
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[4].xyzw
            dp4 o0.y, r0.xyzw, cb0[5].xyzw
            dp4 o0.z, r0.xyzw, cb0[6].xyzw
            dp4 o0.w, r0.xyzw, cb0[7].xyzw
            dp3 o1.x, v1.xyzx, cb0[0].xyzx
            dp3 o1.y, v1.xyzx, cb0[1].xyzx
            dp3 o1.z, v1.xyzx, cb0[2].xyzx
            dp4 r1.x, r0.xyzw, cb0[0].xyzw
            dp4 r1.y, r0.xyzw, cb0[1].xyzw
            dp4 r1.z, r0.xyzw, cb0[2].xyzw
            add o2.xyz, r1.xyzx, -cb0[38].xyzx
            dp3 o3.x, v3.xyzx, cb0[0].xyzx
            dp3 o3.y, v3.xyzx, cb0[1].xyzx
            dp3 o3.z, v3.xyzx, cb0[2].xyzx
            mov o4.xy, v2.xyxx
            ret 
            // Approximately 18 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // g_samPointCube                    sampler      NA          NA             s1      1 
            // g_tCube                           texture  float4        cube             t0      1 
            // g_tNormal                         texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v1.zxyz, v3.yzxy
            mad r0.xyz, v1.yzxy, v3.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v4.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r2.xyz, r1.yyyy, v3.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
            dp3 r0.w, v2.xyzx, r0.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xzw, r0.xxyz, -r0.wwww, v2.xxyz
            mul_sat r1.xyz, r0.yyyy, l(0.000000, 0.000000, 0.400000, 0.000000)
            sample r0.xyzw, r0.xzwx, t0.xyzw, s1
            mad r0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), -r1.yyzy
            mad r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
            mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
            mov o0.w, l(0)
            ret 
            // Approximately 23 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 SceneTwoComp_FP
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232 [unused]
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240 [unused]
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[39], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_output o4.xy
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[4].xyzw
            dp4 o0.y, r0.xyzw, cb0[5].xyzw
            dp4 o0.z, r0.xyzw, cb0[6].xyzw
            dp4 o0.w, r0.xyzw, cb0[7].xyzw
            dp3 o1.x, v1.xyzx, cb0[0].xyzx
            dp3 o1.y, v1.xyzx, cb0[1].xyzx
            dp3 o1.z, v1.xyzx, cb0[2].xyzx
            dp4 r1.x, r0.xyzw, cb0[0].xyzw
            dp4 r1.y, r0.xyzw, cb0[1].xyzw
            dp4 r1.z, r0.xyzw, cb0[2].xyzw
            add o2.xyz, r1.xyzx, -cb0[38].xyzx
            dp3 o3.x, v3.xyzx, cb0[0].xyzx
            dp3 o3.y, v3.xyzx, cb0[1].xyzx
            dp3 o3.z, v3.xyzx, cb0[2].xyzx
            mov o4.xy, v2.xyxx
            ret 
            // Approximately 18 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // g_samPointCube                    sampler      NA          NA             s1      1 
            // g_tCube                           texture  float4        cube             t0      1 
            // g_tNormal                         texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v1.zxyz, v3.yzxy
            mad r0.xyz, v1.yzxy, v3.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v4.xyxx, t1.xyzw, s0
            mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
            mad r0.w, -r1.x, r1.x, l(1.000000)
            mad r0.w, -r1.y, r1.y, r0.w
            sqrt r1.z, r0.w
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r2.xyz, r1.yyyy, v3.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
            dp3 r0.w, v2.xyzx, r0.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xzw, r0.xxyz, -r0.wwww, v2.xxyz
            mul_sat r1.xyz, r0.yyyy, l(0.000000, 0.000000, 0.400000, 0.000000)
            sample r0.xyzw, r0.xzwx, t0.xyzw, s1
            add r0.xyz, -r1.yyzy, r0.xyzx
            mad o0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 25 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 SceneTwoComp_RGBE8
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232 [unused]
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240 [unused]
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[39], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_output o4.xy
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[4].xyzw
            dp4 o0.y, r0.xyzw, cb0[5].xyzw
            dp4 o0.z, r0.xyzw, cb0[6].xyzw
            dp4 o0.w, r0.xyzw, cb0[7].xyzw
            dp3 o1.x, v1.xyzx, cb0[0].xyzx
            dp3 o1.y, v1.xyzx, cb0[1].xyzx
            dp3 o1.z, v1.xyzx, cb0[2].xyzx
            dp4 r1.x, r0.xyzw, cb0[0].xyzw
            dp4 r1.y, r0.xyzw, cb0[1].xyzw
            dp4 r1.z, r0.xyzw, cb0[2].xyzw
            add o2.xyz, r1.xyzx, -cb0[38].xyzx
            dp3 o3.x, v3.xyzx, cb0[0].xyzx
            dp3 o3.y, v3.xyzx, cb0[1].xyzx
            dp3 o3.z, v3.xyzx, cb0[2].xyzx
            mov o4.xy, v2.xyxx
            ret 
            // Approximately 18 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // g_samPointCube                    sampler      NA          NA             s1      1 
            // g_tCube                           texture  float4        cube             t0      1 
            // g_tNormal                         texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v1.zxyz, v3.yzxy
            mad r0.xyz, v1.yzxy, v3.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v4.xyxx, t1.xyzw, s0
            mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
            mad r0.w, -r1.x, r1.x, l(1.000000)
            mad r0.w, -r1.y, r1.y, r0.w
            sqrt r1.z, r0.w
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r2.xyz, r1.yyyy, v3.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
            dp3 r0.w, v2.xyzx, r0.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xzw, r0.xxyz, -r0.wwww, v2.xxyz
            mul_sat r1.xyz, r0.yyyy, l(0.000000, 0.000000, 0.400000, 0.000000)
            sample r0.xyzw, r0.xzwx, t0.xyzw, s1
            mad r0.w, r0.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r0.xyzx, r0.wwww, -r1.yyzy
            mad r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
            max r0.w, r0.y, r0.x
            max r0.w, r0.z, r0.w
            log r0.w, r0.w
            round_pi r0.w, r0.w
            exp r1.x, r0.w
            add r0.w, r0.w, l(128.000000)
            mul o0.w, r0.w, l(0.003922)
            div o0.xyz, r0.xyzx, r1.xxxx
            ret 
            // Approximately 34 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 SceneTwoComp_RGB16
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 g_mWorld;                 // Offset:    0 Size:    64
            //   float4x4 g_mWorldViewProj;         // Offset:   64 Size:    64
            //   float2 g_avSampleOffsets[15];      // Offset:  128 Size:   232 [unused]
            //   float4 g_avSampleWeights[15];      // Offset:  368 Size:   240 [unused]
            //   float3 g_vEyePt;                   // Offset:  608 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // $Globals                          cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[39], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_output o4.xy
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[4].xyzw
            dp4 o0.y, r0.xyzw, cb0[5].xyzw
            dp4 o0.z, r0.xyzw, cb0[6].xyzw
            dp4 o0.w, r0.xyzw, cb0[7].xyzw
            dp3 o1.x, v1.xyzx, cb0[0].xyzx
            dp3 o1.y, v1.xyzx, cb0[1].xyzx
            dp3 o1.z, v1.xyzx, cb0[2].xyzx
            dp4 r1.x, r0.xyzw, cb0[0].xyzw
            dp4 r1.y, r0.xyzw, cb0[1].xyzw
            dp4 r1.z, r0.xyzw, cb0[2].xyzw
            add o2.xyz, r1.xyzx, -cb0[38].xyzx
            dp3 o3.x, v3.xyzx, cb0[0].xyzx
            dp3 o3.y, v3.xyzx, cb0[1].xyzx
            dp3 o3.z, v3.xyzx, cb0[2].xyzx
            mov o4.xy, v2.xyxx
            ret 
            // Approximately 18 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // g_samPointCube                    sampler      NA          NA             s1      1 
            // g_tCube                           texture  float4        cube             t0      1 
            // g_tNormal                         texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 1   xyz         2     NONE   float   xyz 
            // TEXCOORD                 2   xyz         3     NONE   float   xyz 
            // TEXCOORD                 3   xy          4     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texturecube (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xy
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v1.zxyz, v3.yzxy
            mad r0.xyz, v1.yzxy, v3.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v4.xyxx, t1.xyzw, s0
            mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
            mad r0.w, -r1.x, r1.x, l(1.000000)
            mad r0.w, -r1.y, r1.y, r0.w
            sqrt r1.z, r0.w
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            mul r2.xyz, r1.yyyy, v3.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
            dp3 r0.w, v2.xyzx, r0.xyzx
            add r0.w, r0.w, r0.w
            mad r0.xzw, r0.xxyz, -r0.wwww, v2.xxyz
            mul_sat r1.xyz, r0.yyyy, l(0.000000, 0.000000, 0.400000, 0.000000)
            sample r0.xyzw, r0.xzwx, t0.xyzw, s1
            mad r0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), -r1.yyzy
            mad r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
            mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
            mov o0.w, l(0)
            ret 
            // Approximately 26 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 FinalPass_FP
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // LinearSampler                     sampler      NA          NA             s1      1 
            // s0                                texture  float4          2d             t0      1 
            // s1                                texture  float4          2d             t1      1 
            // s2                                texture  float4          2d             t2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_resource_texture2d (float,float,float,float) t2
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            sample r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t1.xyzw, s0
            add r0.x, r0.x, l(0.001000)
            div r0.x, l(0.720000), r0.x
            sample r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.xyz, r0.xxxx, r1.xyzx
            mad r1.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
            mul r2.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r2.xyzx, r0.xyzx
            sample r1.xyzw, v1.xyxx, t2.xyzw, s1
            mad o0.xyz, r1.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000), r0.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 13 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 FinalPass_RGBE8
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // LinearSampler                     sampler      NA          NA             s1      1 
            // s0                                texture  float4          2d             t0      1 
            // s1                                texture  float4          2d             t1      1 
            // s2                                texture  float4          2d             t2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_resource_texture2d (float,float,float,float) t2
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            sample r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t1.xyzw, s0
            mad r0.y, r0.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r0.x, r0.y, l(0.001000)
            div r0.x, l(0.720000), r0.x
            sample r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.w, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mul r0.yzw, r0.yyyy, r1.xxyz
            mul r0.xyz, r0.xxxx, r0.yzwy
            mad r1.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
            mul r2.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r2.xyzx, r0.xyzx
            sample r1.xyzw, v1.xyxx, t2.xyzw, s1
            mad o0.xyz, r1.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000), r0.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 18 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 FinalPass_RGB16
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // LinearSampler                     sampler      NA          NA             s1      1 
            // s0                                texture  float4          2d             t0      1 
            // s1                                texture  float4          2d             t1      1 
            // s2                                texture  float4          2d             t2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_resource_texture2d (float,float,float,float) t2
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            sample r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t1.xyzw, s0
            mad r0.x, r0.x, l(100.000000), l(0.001000)
            div r0.x, l(0.720000), r0.x
            sample r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.yzw, r1.xxyz, l(0.000000, 100.000000, 100.000000, 100.000000)
            mul r0.xyz, r0.xxxx, r0.yzwy
            mad r1.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
            mul r2.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r2.xyzx, r0.xyzx
            sample r1.xyzw, v1.xyxx, t2.xyzw, s1
            mad o0.xyz, r1.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000), r0.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 14 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 FinalPassEncoded_RGB
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 FinalPassEncoded_A
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v1.xyxx, t0.xyzw, s0
            mov o0.xyz, r0.wwww
            mov o0.w, l(1.000000)
            ret 
            // Approximately 4 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale3x3_FP
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample_aoffimmi(-1,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            sample_aoffimmi(0,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(-1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(0,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            sample_aoffimmi(1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.x, r0.x, r1.x
            mul o0.xyz, r0.xxxx, l(0.111111, 0.111111, 0.111111, 0.000000)
            mov o0.w, l(1.000000)
            ret 
            // Approximately 20 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale3x3_RGBE8
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample_aoffimmi(0,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r0.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mul r0.x, r0.y, r0.x
            sample_aoffimmi(-1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(-1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(0,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            sample_aoffimmi(1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.y, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mad r0.x, r1.x, r0.y, r0.x
            mul r0.x, r0.x, l(0.111111)
            log r0.y, r0.x
            round_pi r0.y, r0.y
            exp r0.z, r0.y
            add r0.y, r0.y, l(128.000000)
            mul o0.y, r0.y, l(0.003922)
            div o0.x, r0.x, r0.z
            mov o0.zw, l(0,0,0,0)
            ret 
            // Approximately 45 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale3x3_RGB16
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample_aoffimmi(0,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.x, r0.x, l(100.000000)
            sample_aoffimmi(-1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(-1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(0,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            sample_aoffimmi(1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.x, r1.x, l(100.000000), r0.x
            mul o0.x, r0.x, l(0.001111)
            mov o0.yzw, l(0,0,0,0)
            ret 
            // Approximately 21 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale2x2_Lum_FP
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample_aoffimmi(-1,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            dp3 r0.x, r0.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
            sample_aoffimmi(0,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            dp3 r0.y, r1.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            dp3 r0.y, r1.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            dp3 r0.y, r1.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            mul o0.xyz, r0.xxxx, l(0.250000, 0.250000, 0.250000, 0.000000)
            mov o0.w, l(1.000000)
            ret 
            // Approximately 14 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale2x2_Lum_RGBE8
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample_aoffimmi(-1,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r0.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.x, r0.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
            sample_aoffimmi(0,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.w, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mul r0.yzw, r0.yyyy, r1.xxyz
            dp3 r0.y, r0.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.w, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mul r0.yzw, r0.yyyy, r1.xxyz
            dp3 r0.y, r0.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.y, r1.w, l(255.000000), l(-128.000000)
            exp r0.y, r0.y
            mul r0.yzw, r0.yyyy, r1.xxyz
            dp3 r0.y, r0.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            mul r0.x, r0.x, l(0.250000)
            log r0.y, r0.x
            round_pi r0.y, r0.y
            exp r0.z, r0.y
            add r0.y, r0.y, l(128.000000)
            mul o0.y, r0.y, l(0.003922)
            div o0.x, r0.x, r0.z
            mov o0.zw, l(0,0,0,0)
            ret 
            // Approximately 32 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale2x2_Lum_RGB16
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample_aoffimmi(-1,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
            dp3 r0.x, r0.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
            sample_aoffimmi(0,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.yzw, r1.xxyz, l(0.000000, 100.000000, 100.000000, 100.000000)
            dp3 r0.y, r0.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.yzw, r1.xxyz, l(0.000000, 100.000000, 100.000000, 100.000000)
            dp3 r0.y, r0.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.yzw, r1.xxyz, l(0.000000, 100.000000, 100.000000, 100.000000)
            dp3 r0.y, r0.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
            add r0.x, r0.y, r0.x
            mul o0.x, r0.x, l(0.002500)
            mov o0.yzw, l(0,0,0,0)
            ret 
            // Approximately 18 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale3x3_BrightPass_FP
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            // s1                                texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            sample_aoffimmi(-1,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            sample_aoffimmi(0,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(-1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(0,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            sample_aoffimmi(1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            add r0.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), l(-0.500000, -0.500000, -0.500000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            sample r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t1.xyzw, s0
            add r0.w, r1.x, l(0.001000)
            div r0.w, l(0.720000), r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mad r1.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
            mul r2.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div o0.xyz, r2.xyzx, r0.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 29 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale3x3_BrightPass_RGBE8
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            // s1                                texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            sample_aoffimmi(0,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r0.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample_aoffimmi(-1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(-1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(0,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            sample_aoffimmi(1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.w, r1.w, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
            mad r0.xyz, r0.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), l(-0.500000, -0.500000, -0.500000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            sample r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t1.xyzw, s0
            mad r0.w, r1.y, l(255.000000), l(-128.000000)
            exp r0.w, r0.w
            mad r0.w, r1.x, r0.w, l(0.001000)
            div r0.w, l(0.720000), r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mad r1.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
            mul r2.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div o0.xyz, r2.xyzx, r0.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 50 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DownScale3x3_BrightPass_RGB16
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // PointSampler                      sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            // s1                                texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 3
            sample_aoffimmi(0,-1,0) r0.xyzw, v1.xyxx, t0.xyzw, s0
            mul r0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
            sample_aoffimmi(-1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(1,-1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(-1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(0,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(1,0,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(-1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(0,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            sample_aoffimmi(1,1,0) r1.xyzw, v1.xyxx, t0.xyzw, s0
            mad r0.xyz, r1.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), r0.xyzx
            mad r0.xyz, r0.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), l(-0.500000, -0.500000, -0.500000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            sample r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t1.xyzw, s0
            mad r0.w, r1.x, l(100.000000), l(0.001000)
            div r0.w, l(0.720000), r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mad r1.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
            mul r2.xyz, r0.xyzx, r1.xyzx
            mad r0.xyz, r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div o0.xyz, r2.xyzx, r0.xyzx
            mov o0.w, l(1.000000)
            ret 
            // Approximately 30 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 DrawTexture
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyzw, v0.xyzw
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // LinearSampler                     sampler      NA          NA             s0      1 
            // s0                                texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // TEXCOORD                 0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

