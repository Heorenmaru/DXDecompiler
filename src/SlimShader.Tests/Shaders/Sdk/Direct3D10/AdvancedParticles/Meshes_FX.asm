//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 3 local buffer(s)
//
cbuffer cbAnimMatrices
{
    float4x4 g_mBoneWorld[255];         // Offset:    0, size: 16320
    float4x4 g_mBonePrev[255];          // Offset: 16320, size: 16320
}

cbuffer cb0
{
    float4x4 g_mWorldViewProj;          // Offset:    0, size:   64
    float4x4 g_mViewProj;               // Offset:   64, size:   64
    float4x4 g_mWorld;                  // Offset:  128, size:   64
    float3  g_vLightDir;                // Offset:  192, size:   12
    float3  g_vEyePt;                   // Offset:  208, size:   12
}

cbuffer cbImmutable
{
    float4  g_vAmbient = { 0.200000003, 0.200000003, 0.300000012, 0 };// Offset:    0, size:   16
}

//
// 9 local object(s)
//
Texture2D g_txDiffuse;
Texture2D g_txNormal;
Texture2D g_txSpecular;
Texture2D g_txPaint;
SamplerState g_samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_samPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
BlendState NoBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
};
DepthStencilState EnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
};
RasterizerState CullBack
{
    CullMode = uint(BACK /* 3 */);
};

//
// 2 technique(s)
//
technique10 RenderScene
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mViewProj;              // Offset:   64 Size:    64 [unused]
            //   float4x4 g_mWorld;                 // Offset:  128 Size:    64
            //   float3 g_vLightDir;                // Offset:  192 Size:    12 [unused]
            //   float3 g_vEyePt;                   // Offset:  208 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[0].xyzw
            dp4 o0.y, r0.xyzw, cb0[1].xyzw
            dp4 o0.z, r0.xyzw, cb0[2].xyzw
            dp4 o0.w, r0.xyzw, cb0[3].xyzw
            dp3 r0.x, v1.xyzx, cb0[8].xyzx
            dp3 r0.y, v1.xyzx, cb0[9].xyzx
            dp3 r0.z, v1.xyzx, cb0[10].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o1.xyz, r0.wwww, r0.xyzx
            mov o2.xy, v2.xyxx
            ret 
            // Approximately 14 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64 [unused]
            //   float4x4 g_mViewProj;              // Offset:   64 Size:    64 [unused]
            //   float4x4 g_mWorld;                 // Offset:  128 Size:    64 [unused]
            //   float3 g_vLightDir;                // Offset:  192 Size:    12
            //   float3 g_vEyePt;                   // Offset:  208 Size:    12 [unused]
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_vAmbient;                 // Offset:    0 Size:    16
            //      = 0x3e4ccccd 0x3e4ccccd 0x3e99999a 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[13], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xy
            dcl_output o0.xyzw
            dcl_temps 2
            dp3_sat r0.x, cb0[12].xyzx, v1.xyzx
            add r0.xyzw, r0.xxxx, cb1[0].xyzw
            sample r1.xyzw, v2.xyxx, t0.xyzw, s0
            mul o0.xyzw, r0.xyzw, r1.xyzw
            ret 
            // Approximately 5 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        RasterizerState = CullBack;
    }

}

technique10 RenderAnimScene
{
    pass p0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbAnimMatrices
            // {
            //
            //   float4x4 g_mBoneWorld[255];        // Offset:    0 Size: 16320
            //   float4x4 g_mBonePrev[255];         // Offset: 16320 Size: 16320 [unused]
            //
            // }
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64 [unused]
            //   float4x4 g_mViewProj;              // Offset:   64 Size:    64
            //   float4x4 g_mWorld;                 // Offset:  128 Size:    64 [unused]
            //   float3 g_vLightDir;                // Offset:  192 Size:    12 [unused]
            //   float3 g_vEyePt;                   // Offset:  208 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbAnimMatrices                    cbuffer      NA          NA            cb0      1 
            // cb0                               cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
            // BONES                    0   xyzw        2     NONE    uint   xyzw
            // NORMAL                   0   xyz         3     NONE   float   xyz 
            // TEXCOORD                 0   xy          4     NONE   float   xy  
            // TANGENT                  0   xyz         5     NONE   float   xyz 
            // SV_INSTANCEID            0   x           6   INSTID    uint       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            // POSVIEW                  0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[1020], dynamicIndexed
            dcl_constantbuffer CB1[8], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyzw
            dcl_input v2.xyzw
            dcl_input v3.xyz
            dcl_input v4.xy
            dcl_input v5.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o4.xyz
            dcl_temps 4
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            ishl r1.xyzw, v2.xyzw, l(2)
            dp4 r2.x, r0.xyzw, cb0[r1.y + 0].xyzw
            dp4 r2.y, r0.xyzw, cb0[r1.y + 1].xyzw
            dp4 r2.z, r0.xyzw, cb0[r1.y + 2].xyzw
            dp4 r2.w, r0.xyzw, cb0[r1.y + 3].xyzw
            mul r2.xyzw, r2.xyzw, v1.yyyy
            dp4 r3.x, r0.xyzw, cb0[r1.x + 0].xyzw
            dp4 r3.y, r0.xyzw, cb0[r1.x + 1].xyzw
            dp4 r3.z, r0.xyzw, cb0[r1.x + 2].xyzw
            dp4 r3.w, r0.xyzw, cb0[r1.x + 3].xyzw
            mad r2.xyzw, v1.xxxx, r3.xyzw, r2.xyzw
            dp4 r3.x, r0.xyzw, cb0[r1.z + 0].xyzw
            dp4 r3.y, r0.xyzw, cb0[r1.z + 1].xyzw
            dp4 r3.z, r0.xyzw, cb0[r1.z + 2].xyzw
            dp4 r3.w, r0.xyzw, cb0[r1.z + 3].xyzw
            mad r2.xyzw, v1.zzzz, r3.xyzw, r2.xyzw
            dp4 r3.x, r0.xyzw, cb0[r1.w + 0].xyzw
            dp4 r3.y, r0.xyzw, cb0[r1.w + 1].xyzw
            dp4 r3.z, r0.xyzw, cb0[r1.w + 2].xyzw
            dp4 r3.w, r0.xyzw, cb0[r1.w + 3].xyzw
            mad r0.xyzw, v1.wwww, r3.xyzw, r2.xyzw
            dp4 o0.x, r0.xyzw, cb1[4].xyzw
            dp4 o0.y, r0.xyzw, cb1[5].xyzw
            dp4 o0.z, r0.xyzw, cb1[6].xyzw
            dp4 o0.w, r0.xyzw, cb1[7].xyzw
            mov o1.xyz, r0.xyzx
            dp3 r0.x, v3.xyzx, cb0[r1.y + 0].xyzx
            dp3 r0.y, v3.xyzx, cb0[r1.y + 1].xyzx
            dp3 r0.z, v3.xyzx, cb0[r1.y + 2].xyzx
            mul r0.xyz, r0.xyzx, v1.yyyy
            dp3 r2.x, v3.xyzx, cb0[r1.x + 0].xyzx
            dp3 r2.y, v3.xyzx, cb0[r1.x + 1].xyzx
            dp3 r2.z, v3.xyzx, cb0[r1.x + 2].xyzx
            mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
            dp3 r2.x, v3.xyzx, cb0[r1.z + 0].xyzx
            dp3 r2.y, v3.xyzx, cb0[r1.z + 1].xyzx
            dp3 r2.z, v3.xyzx, cb0[r1.z + 2].xyzx
            mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
            dp3 r2.x, v3.xyzx, cb0[r1.w + 0].xyzx
            dp3 r2.y, v3.xyzx, cb0[r1.w + 1].xyzx
            dp3 r2.z, v3.xyzx, cb0[r1.w + 2].xyzx
            mad r0.xyz, v1.wwww, r2.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xy, v4.xyxx
            dp3 r0.x, v5.xyzx, cb0[r1.y + 0].xyzx
            dp3 r0.y, v5.xyzx, cb0[r1.y + 1].xyzx
            dp3 r0.z, v5.xyzx, cb0[r1.y + 2].xyzx
            mul r0.xyz, r0.xyzx, v1.yyyy
            dp3 r2.x, v5.xyzx, cb0[r1.x + 0].xyzx
            dp3 r2.y, v5.xyzx, cb0[r1.x + 1].xyzx
            dp3 r2.z, v5.xyzx, cb0[r1.x + 2].xyzx
            mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
            dp3 r2.x, v5.xyzx, cb0[r1.z + 0].xyzx
            dp3 r2.y, v5.xyzx, cb0[r1.z + 1].xyzx
            dp3 r2.z, v5.xyzx, cb0[r1.z + 2].xyzx
            mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
            dp3 r1.x, v5.xyzx, cb0[r1.w + 0].xyzx
            dp3 r1.y, v5.xyzx, cb0[r1.w + 1].xyzx
            dp3 r1.z, v5.xyzx, cb0[r1.w + 2].xyzx
            mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o4.xyz, r0.wwww, r0.xyzx
            ret 
            // Approximately 68 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64 [unused]
            //   float4x4 g_mViewProj;              // Offset:   64 Size:    64 [unused]
            //   float4x4 g_mWorld;                 // Offset:  128 Size:    64 [unused]
            //   float3 g_vLightDir;                // Offset:  192 Size:    12
            //   float3 g_vEyePt;                   // Offset:  208 Size:    12
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_vAmbient;                 // Offset:    0 Size:    16
            //      = 0x3e4ccccd 0x3e4ccccd 0x3e99999a 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // g_txPaint                         texture  float4          2d             t2      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float       
            // POSVIEW                  0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[14], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_resource_texture2d (float,float,float,float) t2
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xy
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_temps 5
            add r0.xyz, -v1.xyzx, cb0[13].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mad r0.xyz, r0.xyzx, r0.wwww, cb0[12].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            mul r1.xyz, v2.zxyz, v4.yzxy
            mad r1.xyz, v2.yzxy, v4.zxyz, -r1.xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            sample r2.xyzw, v3.xyxx, t1.xyzw, s0
            mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r3.xyz, r2.yyyy, v4.xyzx
            mad r1.xyz, r2.xxxx, r1.xyzx, r3.xyzx
            mad r1.xyz, r2.zzzz, v2.xyzx, r1.xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            dp3_sat r0.x, r0.xyzx, r1.xyzx
            dp3_sat r0.y, cb0[12].xyzx, r1.xyzx
            add r1.xyzw, r0.yyyy, cb1[0].xyzw
            log r0.x, r0.x
            mul r0.x, r0.x, l(64.000000)
            exp r0.x, r0.x
            sample r2.xyzw, v3.xyxx, t0.xyzw, s0
            mul r3.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 0.300000)
            sample r4.xyzw, v3.xyxx, t2.xyzw, s0
            mad r2.xyzw, -r2.xyzw, l(1.000000, 1.000000, 1.000000, 0.300000), r4.xyzw
            mad r2.xyzw, r4.wwww, r2.xyzw, r3.xyzw
            mul r0.x, r0.x, r2.w
            mad o0.xyzw, r1.xyzw, r2.xyzw, r0.xxxx
            ret 
            // Approximately 34 instruction slots used
                    
        };
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        RasterizerState = CullBack;
    }

}

