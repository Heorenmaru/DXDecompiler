//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    float3  g_vLightDir;                // Offset:    0, size:   12
    float4  g_vLightDiffuse;            // Offset:   16, size:   16
    float   g_fTime;                    // Offset:   32, size:    4
    float4x4 g_mWorld;                  // Offset:   48, size:   64
    float4x4 g_mWorldViewProjection;    // Offset:  112, size:   64
    float4x4 g_mViewProjection;         // Offset:  176, size:   64
    float3  g_vEyePt;                   // Offset:  240, size:   12
    float4  g_vRenderTargetSize;        // Offset:  256, size:   16
}

cbuffer cbPerUser
{
    float   g_fSliderVal[4];            // Offset:    0, size:   52
    bool    g_bUseDDXDDY;               // Offset:   52, size:    4
}

cbuffer cbCubeGradients
{
    float   g_TexDims = 256;            // Offset:    0, size:    4
    float   g_TexRandomDims = 1024;     // Offset:    4, size:    4
    float3  g_grad3[16] = { 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0 };// Offset:   16, size:  252
    float4  g_grad4[32] = { 0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1, -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1, 1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1, -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0 };// Offset:  272, size:  512
}

//
// 15 local object(s)
//
Texture2D g_MeshTexture;
Texture2D g_PositionDepthTexture;
Texture2D g_NormalDepthTexture;
SamplerState MeshTextureSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState g_samPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
Texture2D g_txRandomByte;
Texture1D g_txRandVector;
SamplerState g_samWrap
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
DepthStencilState EnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
DepthStencilState DisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
BlendState DisableBlending
{
    BlendEnable[0] = bool(FALSE /* 0 */);
};
BlendState SmokeBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(INV_SRC_ALPHA /* 6 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
RasterizerState CullNone
{
    CullMode = uint(NONE /* 1 */);
};
RasterizerState CullBack
{
    CullMode = uint(BACK /* 3 */);
};
RasterizerState CullFront
{
    CullMode = uint(FRONT /* 2 */);
};

//
// 21 technique(s)
//
technique10 CreateNormals
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // TEXCOORD                 0   xy          1     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xyzw
            //
            vs_4_0
            dcl_input v0.xyzw
            dcl_output_siv o0.xyzw, position
            mov o0.xyzw, v0.xyzw
            ret 
            // Approximately 2 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_PositionDepthTexture            texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_POSITION              0   xyzw        0      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps_siv linear noperspective v0.xy, position
            dcl_output o0.xyzw
            dcl_temps 6
            ftou r0.xy, v0.xyxx
            mov r0.zw, l(0,0,0,0)
            iadd r1.xyzw, r0.xyww, l(0, 1, 0, 0)
            ld r1.xyzw, r1.xyzw, t0.xyzw
            ld r2.xyzw, r0.xyww, t0.xyzw
            add r1.xyzw, r1.xyzw, -r2.xyzw
            add r1.w, -|r1.w|, l(0.100000)
            mul_sat r3.x, r1.w, l(10000000.000000)
            iadd r4.xyzw, r0.xyww, l(0, -1, 0, 0)
            ld r4.xyzw, r4.xyzw, t0.xyzw
            add r4.xyzw, r2.xyzw, -r4.xyzw
            add r1.w, -|r4.w|, l(0.100000)
            mul_sat r3.y, r1.w, l(10000000.000000)
            iadd r5.xyzw, r0.xyzw, l(1, 0, 0, 0)
            iadd r0.xyzw, r0.xyww, l(-1, 0, 0, 0)
            ld r0.xyzw, r0.xyzw, t0.xyzw
            add r0.xyzw, -r0.xyzw, r2.xyzw
            ld r5.xyzw, r5.xyzw, t0.xyzw
            add r2.xyzw, -r2.xyzw, r5.xyzw
            add r1.w, -|r2.w|, l(0.100000)
            mul_sat r3.z, r1.w, l(10000000.000000)
            add r0.w, -|r0.w|, l(0.100000)
            mul_sat r3.w, r0.w, l(10000000.000000)
            add r5.xy, r3.ywyy, r3.xzxx
            mul r4.xyz, r3.yyyy, r4.yzxy
            mad r1.xyz, r1.yzxy, r3.xxxx, r4.xyzx
            div r1.xyz, r1.xyzx, r5.xxxx
            mul r0.xyz, r0.zxyz, r3.wwww
            mad r0.xyz, r2.zxyz, r3.zzzz, r0.xyzx
            div r0.xyz, r0.xyzx, r5.yyyy
            mul r2.xyz, r1.xyzx, r0.xyzx
            mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o0.xyz, r0.wwww, r0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 37 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderLavaPlanet
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 8
            mul r0.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
            mul r0.w, cb0[2].x, l(0.100000)
            dp4 r1.x, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r1.xyzw, r0.xyzw, r1.xxxx
            round_ni r1.xyzw, r1.xyzw
            dp4 r2.x, r1.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r2.xyzw, r1.xyzw, -r2.xxxx
            add r0.xyzw, r0.xyzw, -r2.xyzw
            ge r2.xy, r0.yyyy, r0.zwzz
            movc r2.zw, r2.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r2.xy, r2.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.x, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r3.xyzw, r0.xxxz, r0.yzww
            movc r4.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r2.yz, r2.zzwz, r4.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r5.z, r3.w, r2.y
            add r5.w, r4.w, r2.z
            add r5.y, r2.x, r4.x
            dp3 r5.x, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r2.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r3.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r5.xyzw, r1.xyzw, r2.xyzw
            add r2.xyzw, r0.xyzw, -r2.xyzw
            add r2.xyzw, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb1[r5.x + 17].xyzw, r2.xyzw
            dp4 r2.x, r2.xyzw, r2.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mul r2.x, r5.x, r2.x
            div r5.xyzw, r1.xyzw, cb1[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t0.xyzw, s0, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.y, cb1[r2.y + 17].xyzw, r0.xyzw
            dp4 r2.z, r0.xyzw, r0.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            mad r2.x, r2.z, r2.y, r2.x
            add r5.xyzw, r1.xyzw, r3.xyzw
            add r3.xyzw, r0.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t0.xyzw, s0, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.y, cb1[r2.y + 17].xyzw, r3.xyzw
            dp4 r2.z, r3.xyzw, r3.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            mad r2.x, r2.z, r2.y, r2.x
            add r3.xyzw, r1.xyzw, r4.xyzw
            add r4.xyzw, r0.xyzw, -r4.xyzw
            add r0.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb1[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.x, cb1[r1.x + 17].xyzw, r0.xyzw
            dp4 r0.x, r0.xyzw, r0.xyzw
            add r0.x, -r0.x, l(0.600000)
            max r0.x, r0.x, l(0.000000)
            mul r0.x, r0.x, r0.x
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r4.xyzw
            dp4 r0.z, r4.xyzw, r4.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.xz, r0.xxzx, r0.xxzx
            mul r0.z, r0.z, r0.z
            mad r0.y, r0.z, r0.y, r2.x
            mad r0.x, r0.x, r1.x, r0.y
            mov r1.xyz, v0.xyzx
            mov r1.w, cb0[2].x
            mul r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.200000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.200000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.200000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.xy, r0.xyxx, l(27.000000, 27.000000, 0.000000, 0.000000)
            mad r0.x, |r0.y|, l(0.500000), |r0.x|
            mul r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.400000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.400000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.400000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(27.000000)
            mad r0.x, |r0.y|, l(0.250000), r0.x
            mul r2.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 0.800000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 0.800000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 0.800000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(27.000000)
            mad r0.x, |r0.y|, l(0.125000), r0.x
            mul r2.xyzw, r1.xyzw, l(128.000000, 128.000000, 128.000000, 1.600000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(128.000000, 128.000000, 128.000000, 1.600000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(128.000000, 128.000000, 128.000000, 1.600000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(27.000000)
            mad r0.x, |r0.y|, l(0.062500), r0.x
            mul r2.xyzw, r1.xyzw, l(256.000000, 256.000000, 256.000000, 3.200000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(256.000000, 256.000000, 256.000000, 3.200000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(256.000000, 256.000000, 256.000000, 3.200000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(27.000000)
            mad r0.x, |r0.y|, l(0.031250), r0.x
            mul r2.xyzw, r1.xyzw, l(512.000000, 512.000000, 512.000000, 6.400000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(512.000000, 512.000000, 512.000000, 6.400000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(512.000000, 512.000000, 512.000000, 6.400000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(27.000000)
            mad r0.x, |r0.y|, l(0.015625), r0.x
            mul r2.xyzw, r1.xyzw, l(1024.000000, 1024.000000, 1024.000000, 12.800000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(1024.000000, 1024.000000, 1024.000000, 12.800000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r1.xyzw, r1.xyzw, l(1024.000000, 1024.000000, 1024.000000, 12.800000), -r3.xyzw
            ge r0.yz, r1.yyyy, r1.zzwz
            movc r3.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r1.xxxz, r1.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r3.xxxy, r5.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r3.z, r4.w, r0.z
            add r3.w, r5.w, r0.w
            add r3.y, r0.y, r5.x
            dp3 r3.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r4.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.w, r3.w, l(1.000000)
            min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r1.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r0.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r6.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r4.xyzw
            dp4 r0.z, r4.xyzw, r4.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r4.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r4.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r1.xyzw
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r4.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r1.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r4.xyzw, r4.xyzw, cb1[0].xxxx
            mad r0.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r4.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r5.xyzw
            dp4 r0.w, r5.xyzw, r5.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r4.xyzw, r2.xyzw, r3.xyzw
            add r3.xyzw, r1.xyzw, -r3.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r3.xyzw, r3.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb1[r0.z + 17].xyzw, r1.xyzw
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r1.xyzw, r4.xyzw, cb1[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.x, cb1[r1.x + 17].xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, r3.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            mad r0.y, r1.y, r1.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(27.000000)
            mad r0.x, |r0.y|, l(0.007813), r0.x
            mul r0.x, r0.x, l(0.501961)
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.xyzx
            mul r1.xyz, v0.xyzx, l(1024.000000, 1024.000000, 1024.000000, 0.000000)
            dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(1024.000000, 1024.000000, 1024.000000, 0.000000), r0.wwww
            round_ni r1.xyz, r1.xyzx
            dp3 r0.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.xyzx
            mad r2.xyz, v0.xyzx, l(1024.000000, 1024.000000, 1024.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r5.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb1[r0.w + 1].xyzx, r4.xyzx
            dp3 r1.w, r4.xyzx, r4.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mul r0.w, r0.w, r1.w
            div r4.xyz, r1.xyzx, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r2.xyzx
            dp3 r2.w, r2.xyzx, r2.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r1.w, r0.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb1[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.x, cb1[r1.x + 1].xyzx, r2.xyzx
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r1.zw, r2.zzzz, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.z, cb1[r1.z + 1].xyzx, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.w, r1.w, r1.w
            mad r0.w, r1.w, r1.z, r0.w
            mad r0.w, r1.y, r1.x, r0.w
            mul r1.xyz, v0.xyzx, l(512.000000, 512.000000, 512.000000, 0.000000)
            dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(512.000000, 512.000000, 512.000000, 0.000000), r1.xxxx
            round_ni r1.xyz, r1.xyzx
            dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r1.wwww, r1.xyzx
            mad r2.xyz, v0.xyzx, l(512.000000, 512.000000, 512.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r5.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r4.xyz, r1.xyzx, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r2.xyzx
            dp3 r3.w, r2.xyzx, r2.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb1[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r5.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r5.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.x, cb1[r1.x + 1].xyzx, r2.xyzx
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.z, cb1[r1.z + 1].xyzx, r3.xyzx
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r1.z, r2.x, r1.z, r1.w
            mad r1.x, r1.y, r1.x, r1.z
            mul r1.yzw, v0.xxyz, l(0.000000, 64.000000, 64.000000, 64.000000)
            dp3 r1.y, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, v0.xxyz, l(0.000000, 64.000000, 64.000000, 64.000000), r1.yyyy
            round_ni r1.yzw, r1.yyzw
            dp3 r2.x, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, r1.yzwy, -r2.xxxx
            mad r2.xyz, v0.xyzx, l(64.000000, 64.000000, 64.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.yzwy, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r4.xyzx
            dp3 r3.w, r4.xyzx, r4.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r4.xyz, r1.yzwy, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r4.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r2.xyzx
            dp3 r4.x, r2.xyzx, r2.xyzx
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mad r2.w, r4.x, r3.w, r2.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.yzwy, r4.xyzx
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb1[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r5.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r5.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb1[r1.y + 1].xyzx, r2.xyzx
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r4.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r1.w, r2.x, r1.w, r2.w
            mad r1.y, r1.z, r1.y, r1.w
            mul r1.z, r1.y, l(16.000000)
            mul r2.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000)
            dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000), r1.wwww
            round_ni r2.xyz, r2.xyzx
            dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.wwww, r2.xyzx
            mad r3.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb1[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r6.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r5.xyzx
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r5.xyz, r2.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r3.xyzx
            dp3 r3.w, r3.xyzx, r3.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb1[r2.x + 1].xyzx, r3.xyzx
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            div r3.xyz, r5.xyzx, cb1[0].xxxx
            add r2.zw, r3.zzzz, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb1[r2.z + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            mad r1.w, r2.w, r2.z, r1.w
            mad r1.w, r2.y, r2.x, r1.w
            mad r1.z, r1.w, l(32.000000), r1.z
            mul r2.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
            dp3 r2.x, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), r2.xxxx
            round_ni r2.xyz, r2.xyzx
            dp3 r2.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r2.wwww, r2.xyzx
            mad r3.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb1[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r6.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r5.xyz, r2.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r5.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r3.xyzx
            dp3 r4.w, r3.xyzx, r3.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r6.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r6.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb1[r2.x + 1].xyzx, r3.xyzx
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            div r3.xyz, r5.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb1[r2.z + 1].xyzx, r4.xyzx
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r2.z, r3.x, r2.z, r2.w
            mad r2.x, r2.y, r2.x, r2.z
            mad r1.z, r2.x, l(8.000000), r1.z
            mul r2.yzw, v0.xxyz, l(0.000000, 256.000000, 256.000000, 256.000000)
            dp3 r2.y, r2.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.yzw, v0.xxyz, l(0.000000, 256.000000, 256.000000, 256.000000), r2.yyyy
            round_ni r2.yzw, r2.yyzw
            dp3 r3.x, r2.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, r2.yzwy, -r3.xxxx
            mad r3.xyz, v0.xyzx, l(256.000000, 256.000000, 256.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.yzwy, r6.xyzx
            div r6.xyz, r6.xyzx, cb1[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r6.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r5.xyzx
            dp3 r4.w, r5.xyzx, r5.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mul r3.w, r3.w, r4.w
            div r5.xyz, r2.yzwy, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.w, r5.x, l(255.000000)
            ftou r4.w, r4.w
            and r4.w, r4.w, l(15)
            dp3 r4.w, cb1[r4.w + 1].xyzx, r3.xyzx
            dp3 r5.x, r3.xyzx, r3.xyzx
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r3.w, r5.x, r4.w, r3.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.yzwy, r5.xyzx
            add r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r2.yzw, r2.yyzw, cb1[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r6.xyzw, r2.yzyy, t0.xyzw, s0, l(0.000000)
            mul r2.y, r6.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(15)
            dp3 r2.y, cb1[r2.y + 1].xyzx, r3.xyzx
            dp3 r2.z, r3.xyzx, r3.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            div r3.xyz, r5.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r5.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r4.xyzx
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r2.w, r3.x, r2.w, r3.w
            mad r2.y, r2.z, r2.y, r2.w
            mad r1.z, r2.y, l(4.000000), r1.z
            mad r1.x, r1.x, l(2.000000), r1.z
            add r0.w, r0.w, r1.x
            mul r0.w, r0.w, l(0.507937)
            mul r1.x, r2.x, l(32.000000)
            mul r3.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
            dp3 r1.z, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r3.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r1.zzzz
            round_ni r3.xyz, r3.xyzx
            dp3 r1.z, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r1.zzzz, r3.xyzx
            mad r4.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r7.xyz, r3.xyzx, r7.xyzx
            div r7.xyz, r7.xyzx, cb1[0].xxxx
            add r2.zw, r7.zzzz, r7.xxxy
            sample_l r7.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r7.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.z, cb1[r1.z + 1].xyzx, r6.xyzx
            dp3 r2.z, r6.xyzx, r6.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            mul r1.z, r1.z, r2.z
            div r6.xyz, r3.xyzx, cb1[0].xxxx
            add r2.zw, r6.zzzz, r6.xxxy
            sample_l r6.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r6.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb1[r2.z + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r1.z, r2.w, r2.z, r1.z
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r3.xyzx, r6.xyzx
            add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r3.xyz, r3.xyzx, cb1[0].xxxx
            add r2.zw, r3.zzzz, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb1[r2.z + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            div r3.xyz, r6.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.x, cb1[r3.x + 1].xyzx, r5.xyzx
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            mad r1.z, r3.y, r3.x, r1.z
            mad r1.z, r2.w, r2.z, r1.z
            mul r1.z, r1.z, l(32.000000)
            mad r1.x, |r1.z|, l(0.500000), |r1.x|
            mad r1.x, r1.x, l(0.333333), -r0.w
            add r3.xyz, v0.xyzx, v0.xyzx
            dp3 r1.z, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r3.xyz, v0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.zzzz
            round_ni r3.xyz, r3.xyzx
            dp3 r1.z, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r1.zzzz, r3.xyzx
            mad r4.xyz, v0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r7.xyz, r3.xyzx, r7.xyzx
            div r7.xyz, r7.xyzx, cb1[0].xxxx
            add r2.zw, r7.zzzz, r7.xxxy
            sample_l r7.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r7.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.z, cb1[r1.z + 1].xyzx, r6.xyzx
            dp3 r2.z, r6.xyzx, r6.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            mul r1.z, r1.z, r2.z
            div r6.xyz, r3.xyzx, cb1[0].xxxx
            add r2.zw, r6.zzzz, r6.xxxy
            sample_l r6.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r6.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb1[r2.z + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r1.z, r2.w, r2.z, r1.z
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r3.xyzx, r6.xyzx
            add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r3.xyz, r3.xyzx, cb1[0].xxxx
            add r2.zw, r3.zzzz, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb1[r2.z + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            div r3.xyz, r6.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.x, cb1[r3.x + 1].xyzx, r5.xyzx
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            mad r1.z, r3.y, r3.x, r1.z
            mad r1.z, r2.w, r2.z, r1.z
            mul r2.z, r1.z, l(32.000000)
            mul r3.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
            dp3 r2.w, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r3.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r2.wwww
            round_ni r3.xyz, r3.xyzx
            dp3 r2.w, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r2.wwww, r3.xyzx
            mad r4.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r7.xyz, r3.xyzx, r7.xyzx
            div r7.xyz, r7.xyzx, cb1[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r7.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r6.xyzx
            dp3 r3.w, r6.xyzx, r6.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r6.xyz, r3.xyzx, cb1[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r6.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r4.xyzx
            dp3 r4.w, r4.xyzx, r4.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r3.xyzx, r6.xyzx
            add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r3.xyz, r3.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.x, cb1[r3.x + 1].xyzx, r4.xyzx
            dp3 r3.y, r4.xyzx, r4.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyz, r6.xyzx, cb1[0].xxxx
            add r3.zw, r4.zzzz, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(15)
            dp3 r3.z, cb1[r3.z + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mul r3.xy, r2.wwww, l(32.000000, 16.000000, 0.000000, 0.000000)
            mad r2.z, |r3.x|, l(0.500000), |r2.z|
            mad r1.z, r1.z, l(32.000000), r3.y
            mul r3.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
            dp3 r2.w, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r3.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), r2.wwww
            round_ni r3.xyz, r3.xyzx
            dp3 r2.w, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r2.wwww, r3.xyzx
            mad r4.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r7.xyz, r3.xyzx, r7.xyzx
            div r7.xyz, r7.xyzx, cb1[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r7.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r6.xyzx
            dp3 r3.w, r6.xyzx, r6.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r6.xyz, r3.xyzx, cb1[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r6.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r4.xyzx
            dp3 r4.w, r4.xyzx, r4.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r3.xyzx, r6.xyzx
            add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r3.xyz, r3.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.x, cb1[r3.x + 1].xyzx, r4.xyzx
            dp3 r3.y, r4.xyzx, r4.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyz, r6.xyzx, cb1[0].xxxx
            add r3.zw, r4.zzzz, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(15)
            dp3 r3.z, cb1[r3.z + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mul r3.x, r2.w, l(32.000000)
            mad r1.z, r2.w, l(8.000000), r1.z
            mad r2.z, |r3.x|, l(0.250000), r2.z
            mul r3.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
            dp3 r2.w, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r3.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), r2.wwww
            round_ni r3.xyz, r3.xyzx
            dp3 r2.w, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r2.wwww, r3.xyzx
            mad r4.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r7.xyz, r3.xyzx, r7.xyzx
            div r7.xyz, r7.xyzx, cb1[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r7.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r6.xyzx
            dp3 r3.w, r6.xyzx, r6.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r6.xyz, r3.xyzx, cb1[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r6.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r4.xyzx
            dp3 r4.w, r4.xyzx, r4.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r3.xyzx, r6.xyzx
            add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r3.xyz, r3.xyzx, cb1[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.x, cb1[r3.x + 1].xyzx, r4.xyzx
            dp3 r3.y, r4.xyzx, r4.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyz, r6.xyzx, cb1[0].xxxx
            add r3.zw, r4.zzzz, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(15)
            dp3 r3.z, cb1[r3.z + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mul r3.x, r2.w, l(32.000000)
            mad r1.z, r2.w, l(4.000000), r1.z
            mad r1.z, r1.w, l(2.000000), r1.z
            add r1.y, r1.y, r1.z
            mad r1.y, r2.x, l(0.500000), r1.y
            mad r1.y, r2.y, l(0.250000), r1.y
            mul r1.yzw, r1.yyyy, l(0.000000, 10.039216, 5.019608, 5.019608)
            mad r1.yzw, v0.xxyz, l(0.000000, 40.000000, 40.000000, 40.000000), r1.yyzw
            mad r2.x, |r3.x|, l(0.125000), r2.z
            mul r2.x, r2.x, l(0.533333)
            mad r0.w, r2.x, r1.x, r0.w
            mul r2.xyz, r0.wwww, v2.xyzx
            mad r2.xyz, r2.xyzx, l(0.005000, 0.005000, 0.005000, 0.000000), v0.xyzx
            add r2.xyz, -r0.xyzx, r2.xyzx
            mul r3.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000)
            round_ni r4.xyz, r3.xyzx
            round_pi r3.xyz, r3.xyzx
            mad r5.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xyzx
            dp3 r0.w, r5.xyzx, r5.xyzx
            add r0.w, -r0.w, l(0.250000)
            max r0.w, r0.w, l(0.000000)
            mov r4.w, r3.z
            mad r5.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xywx
            mov r6.xzw, r4.xxzw
            dp3 r1.x, r5.xyzx, r5.xyzx
            add r1.x, -r1.x, l(0.250000)
            max r1.x, r1.x, l(0.000000)
            add r0.w, r0.w, r1.x
            mov r6.y, r3.y
            mad r5.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r6.xyzx
            dp3 r1.x, r5.xyzx, r5.xyzx
            add r1.x, -r1.x, l(0.250000)
            max r1.x, r1.x, l(0.000000)
            add r0.w, r0.w, r1.x
            mad r5.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r6.xywx
            mov r4.w, r6.w
            dp3 r1.x, r5.xyzx, r5.xyzx
            add r1.x, -r1.x, l(0.250000)
            max r1.x, r1.x, l(0.000000)
            add r0.w, r0.w, r1.x
            mov r4.x, r3.x
            mad r3.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r3.xyzx
            dp3 r1.x, r3.xyzx, r3.xyzx
            add r1.x, -r1.x, l(0.250000)
            mad r3.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xyzx
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.250000)
            max r2.w, r2.w, l(0.000000)
            add r0.w, r0.w, r2.w
            mad r3.xyz, r1.yzwy, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xywx
            mov r6.xz, r4.xxzx
            mad r1.yzw, r1.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000), -r6.xxyz
            dp3 r1.y, r1.yzwy, r1.yzwy
            add r1.y, -r1.y, l(0.250000)
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.250000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r0.w, r0.w, r1.z
            add r0.w, r1.y, r0.w
            add r0.w, r1.x, r0.w
            mul r0.w, r0.w, l(20.000000)
            min r0.w, r0.w, l(1.000000)
            mad o0.xyz, r0.wwww, r2.xyzx, r0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 1730 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 14
            add r0.xyz, v0.xyzx, v0.xyzx
            dp3 r0.x, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.xyz, v0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xxxx
            round_ni r0.xyz, r0.xyzx
            dp3 r0.w, r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, -r0.wwww, r0.xyzx
            mad r1.xyz, v0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.xyzx, cb2[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r7.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r1.xyzx, r1.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r1.xyzx
            add r1.xyz, r0.xyzx, r4.xyzx
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r4.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r4.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r3.xyzx, r3.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r3.xyzx
            mul r1.x, r1.x, r1.y
            mad r0.w, r1.w, r0.w, r1.x
            add r1.xyz, r0.xyzx, r5.xyzx
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r2.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r0.xyzx, cb2[0].xxxx
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r1.xyzw, r0.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.x, r1.x, l(255.000000)
            ftou r0.x, r0.x
            and r0.x, r0.x, l(15)
            dp3 r0.y, r6.xyzx, r6.xyzx
            add r0.y, -r0.y, l(0.600000)
            max r0.y, r0.y, l(0.000000)
            mul r0.y, r0.y, r0.y
            mul r0.y, r0.y, r0.y
            dp3 r0.x, cb2[r0.x + 1].xyzx, r6.xyzx
            mad r0.x, r0.y, r0.x, r0.w
            mul r1.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
            dp3 r0.z, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r0.zzzz
            round_ni r1.xyz, r1.xyzx
            dp3 r0.z, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.zzzz, r1.xyzx
            mad r2.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.xyzx, cb2[0].xxxx
            add r0.zw, r8.zzzz, r8.xxxy
            sample_l r8.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r8.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.w, r2.xyzx, r2.xyzx
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp3 r0.z, cb2[r0.z + 1].xyzx, r2.xyzx
            add r2.xyz, r1.xyzx, r5.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r4.xyzx, r4.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mul r1.w, r1.w, r2.x
            mad r0.z, r0.w, r0.z, r1.w
            add r2.xyz, r1.xyzx, r6.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r3.xyzx
            mad r0.z, r1.w, r0.w, r0.z
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.x, r7.xyzx, r7.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp3 r0.w, cb2[r0.w + 1].xyzx, r7.xyzx
            mad r0.z, r1.x, r0.w, r0.z
            mul r0.yzw, r0.xxzz, l(0.000000, 32.000000, 32.000000, 16.000000)
            mad r0.x, r0.x, l(32.000000), r0.w
            mul r1.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
            dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), r0.wwww
            round_ni r1.xyz, r1.xyzx
            dp3 r0.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.xyzx
            mad r2.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.xyzx, cb2[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r2.xyzx, r2.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r2.xyzx
            add r2.xyz, r1.xyzx, r5.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r0.w, r1.w, r0.w, r2.x
            add r2.xyz, r1.xyzx, r6.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
            mad r0.w, r2.x, r1.w, r0.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r7.xyzx, r7.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r7.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            mul r1.x, r0.w, l(32.000000)
            mad r0.x, r0.w, l(8.000000), r0.x
            mul r1.yzw, v0.xxyz, l(0.000000, 16.000000, 16.000000, 16.000000)
            dp3 r0.w, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, v0.xxyz, l(0.000000, 16.000000, 16.000000, 16.000000), r0.wwww
            round_ni r1.yzw, r1.yyzw
            dp3 r0.w, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.yzwy
            mad r2.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.yzwy, cb2[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r2.w, r2.xyzx, r2.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r2.xyzx
            add r2.xyz, r1.yzwy, r5.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r5.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r5.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r0.w, r2.w, r0.w, r2.x
            add r2.xyz, r1.yzwy, r6.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r3.xyzx
            mad r0.w, r2.y, r2.x, r0.w
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r7.xyzx, r7.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r7.xyzx
            mad r0.w, r1.z, r1.y, r0.w
            mul r1.y, r0.w, l(32.000000)
            mad r0.x, r0.w, l(4.000000), r0.x
            mul r2.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000)
            dp3 r0.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000), r0.wwww
            round_ni r2.xyz, r2.xyzx
            dp3 r0.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r0.wwww, r2.xyzx
            mad r3.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.xyzx, cb2[0].xxxx
            add r1.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.w, r9.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r0.w, cb2[r0.w + 1].xyzx, r3.xyzx
            add r3.xyz, r2.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            mul r1.w, r1.w, r2.w
            mad r0.w, r1.z, r0.w, r1.w
            add r3.xyz, r2.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r1.zw, r3.zzzz, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r4.xyzx, r4.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r4.xyzx
            mad r0.w, r1.w, r1.z, r0.w
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r1.zw, r2.zzzz, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r8.xyzx, r8.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r8.xyzx
            mad r0.w, r1.w, r1.z, r0.w
            mad r0.x, r0.w, l(2.000000), r0.x
            mul r2.xyz, v0.xyzx, l(64.000000, 64.000000, 64.000000, 0.000000)
            dp3 r1.z, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(64.000000, 64.000000, 64.000000, 0.000000), r1.zzzz
            round_ni r2.xyz, r2.xyzx
            dp3 r1.z, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.zzzz, r2.xyzx
            mad r3.xyz, v0.xyzx, l(64.000000, 64.000000, 64.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.xyzx, cb2[0].xxxx
            add r1.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r9.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r3.xyzx
            add r3.xyz, r2.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r5.xyzx, r5.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            mul r2.w, r2.w, r3.x
            mad r1.z, r1.w, r1.z, r2.w
            add r3.xyz, r2.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mad r1.z, r2.w, r1.w, r1.z
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r8.xyzx, r8.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r8.xyzx
            mad r1.z, r2.x, r1.w, r1.z
            add r0.x, r0.x, r1.z
            mul r2.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
            dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), r1.wwww
            round_ni r2.xyz, r2.xyzx
            dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.wwww, r2.xyzx
            mad r3.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.xyzx, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r9.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
            add r3.xyz, r2.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
            mul r3.x, r3.x, r3.y
            mad r1.w, r2.w, r1.w, r3.x
            add r3.xyz, r2.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
            mad r1.w, r3.x, r2.w, r1.w
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r8.xyzx, r8.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r8.xyzx
            mad r1.w, r2.y, r2.x, r1.w
            mul r2.x, r1.w, l(32.000000)
            mad r0.x, r1.w, l(0.500000), r0.x
            mul r2.yzw, v0.xxyz, l(0.000000, 256.000000, 256.000000, 256.000000)
            dp3 r2.y, r2.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.yzw, v0.xxyz, l(0.000000, 256.000000, 256.000000, 256.000000), r2.yyyy
            round_ni r2.yzw, r2.yyzw
            dp3 r3.x, r2.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, r2.yzwy, -r3.xxxx
            mad r3.xyz, v0.xyzx, l(256.000000, 256.000000, 256.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.yzwy, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.w, r9.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r4.w, r3.xyzx, r3.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            dp3 r3.x, cb2[r3.w + 1].xyzx, r3.xyzx
            add r3.yzw, r2.yyzw, r6.xxyz
            div r3.yzw, r3.yyzw, cb2[0].xxxx
            add r3.yz, r3.wwww, r3.yyzy
            sample_l r6.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(15)
            dp3 r3.z, r5.xyzx, r5.xyzx
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp3 r3.y, cb2[r3.y + 1].xyzx, r5.xyzx
            mul r3.y, r3.y, r3.z
            mad r3.x, r4.w, r3.x, r3.y
            add r3.yzw, r2.yyzw, r7.xxyz
            div r3.yzw, r3.yyzw, cb2[0].xxxx
            add r3.yz, r3.wwww, r3.yyzy
            sample_l r5.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r5.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(15)
            dp3 r3.z, r4.xyzx, r4.xyzx
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp3 r3.y, cb2[r3.y + 1].xyzx, r4.xyzx
            mad r3.x, r3.z, r3.y, r3.x
            add r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(15)
            dp3 r2.z, r8.xyzx, r8.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp3 r2.y, cb2[r2.y + 1].xyzx, r8.xyzx
            mad r2.y, r2.z, r2.y, r3.x
            mad r0.x, r2.y, l(0.250000), r0.x
            mul r3.xyz, r0.xxxx, l(10.039216, 5.019608, 5.019608, 0.000000)
            mad r3.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r3.xyzx
            mul r4.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
            round_pi r5.xyz, r4.xyzx
            round_ni r4.xyz, r4.xyzx
            mad r6.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xyzx
            mov r4.w, r5.z
            mad r7.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xywx
            mov r8.xzw, r4.xxzw
            mov r8.y, r5.y
            mad r9.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r8.xyzx
            mad r10.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r8.xywx
            mov r4.x, r5.x
            mad r11.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xyzx
            mov r4.w, r8.w
            mad r12.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r4.xywx
            mov r8.xz, r4.xxzx
            mad r4.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r8.xyzx
            mad r3.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), -r5.xyzx
            dp3 r0.x, r6.xyzx, r6.xyzx
            add r0.x, -r0.x, l(0.250000)
            max r0.x, r0.x, l(0.000000)
            dp3 r2.z, r7.xyzx, r7.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            dp3 r2.z, r9.xyzx, r9.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            dp3 r2.z, r10.xyzx, r10.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            dp3 r2.z, r11.xyzx, r11.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            dp3 r2.z, r12.xyzx, r12.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            dp3 r2.z, r4.xyzx, r4.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            dp3 r2.z, r3.xyzx, r3.xyzx
            add r2.z, -r2.z, l(0.250000)
            max r2.z, r2.z, l(0.000000)
            add r0.x, r0.x, r2.z
            mul r0.x, r0.x, l(20.000000)
            min r0.x, r0.x, l(1.000000)
            mul r1.z, r1.z, l(16.000000)
            mad r0.w, r0.w, l(32.000000), r1.z
            mad r0.w, r1.w, l(8.000000), r0.w
            mad r0.w, r2.y, l(4.000000), r0.w
            mul r2.yzw, v0.xxyz, l(0.000000, 512.000000, 512.000000, 512.000000)
            dp3 r1.z, r2.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.yzw, v0.xxyz, l(0.000000, 512.000000, 512.000000, 512.000000), r1.zzzz
            round_ni r2.yzw, r2.yyzw
            dp3 r1.z, r2.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.zzzz, r2.yzwy
            mad r3.xyz, v0.xyzx, l(512.000000, 512.000000, 512.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.yzwy, cb2[0].xxxx
            add r1.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r9.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r3.xyzx
            add r3.xyz, r2.yzwy, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
            mul r3.x, r3.x, r3.y
            mad r1.z, r1.w, r1.z, r3.x
            add r3.xyz, r2.yzwy, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mad r1.z, r3.x, r1.w, r1.z
            add r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.y, r8.xyzx, r8.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r1.w, cb2[r1.w + 1].xyzx, r8.xyzx
            mad r1.z, r2.y, r1.w, r1.z
            mad r0.w, r1.z, l(2.000000), r0.w
            mul r2.yzw, v0.xxyz, l(0.000000, 1024.000000, 1024.000000, 1024.000000)
            dp3 r1.z, r2.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.yzw, v0.xxyz, l(0.000000, 1024.000000, 1024.000000, 1024.000000), r1.zzzz
            round_ni r2.yzw, r2.yyzw
            dp3 r1.z, r2.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.zzzz, r2.yzwy
            mad r3.xyz, v0.xyzx, l(1024.000000, 1024.000000, 1024.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.yzwy, cb2[0].xxxx
            add r1.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r9.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r3.xyzx
            add r3.xyz, r2.yzwy, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
            mul r3.x, r3.x, r3.y
            mad r1.z, r1.w, r1.z, r3.x
            add r3.xyz, r2.yzwy, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mad r1.z, r3.x, r1.w, r1.z
            add r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.y, r8.xyzx, r8.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r1.w, cb2[r1.w + 1].xyzx, r8.xyzx
            mad r1.z, r2.y, r1.w, r1.z
            add r0.w, r0.w, r1.z
            mul r3.xyz, v0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
            mul r3.w, cb0[2].x, l(0.100000)
            dp4 r1.z, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r4.xyzw, r1.zzzz, r3.xyzw
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.z, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.zzzz, r4.xyzw
            add r3.xyzw, r3.xyzw, -r5.xyzw
            ge r5.xyzw, r3.xxxz, r3.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.zw, r3.yyyy, r3.zzzw
            and r2.yz, r1.zzwz, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r2.y, r2.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r2.y, r5.x
            movc r1.zw, r1.zzzw, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            add r1.zw, r1.zzzw, r5.yyyz
            add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r7.z, r6.w, r1.z
            add r5.w, r5.w, r1.w
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r3.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r3.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r12.zzzz, r12.wwww, r12.xxxy
            sample_l r12.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r12.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r3.xyzw, r3.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r3.xyzw
            add r3.xyzw, r4.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r8.xyzw, r8.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r8.xyzw
            mul r2.y, r2.y, r2.z
            mad r1.z, r1.w, r1.z, r2.y
            add r3.xyzw, r4.xyzw, r7.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r9.xyzw, r9.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r9.xyzw
            mad r1.z, r2.y, r1.w, r1.z
            add r3.xyzw, r4.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r10.xyzw, r10.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r10.xyzw
            mad r1.z, r2.y, r1.w, r1.z
            add r3.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r11.xyzw, r11.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r11.xyzw
            mad r1.z, r2.y, r1.w, r1.z
            mov r3.xyz, v0.xyzx
            mov r3.w, cb0[2].x
            mul r4.xyzw, r3.xyzw, l(16.000000, 16.000000, 16.000000, 0.200000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(16.000000, 16.000000, 16.000000, 0.200000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r5.xyzw, r3.xyzw, l(16.000000, 16.000000, 16.000000, 0.200000), -r5.xyzw
            ge r6.xyzw, r5.xxxz, r5.yzww
            and r7.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r8.x, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r6.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r5.yyyy, r5.zzwz
            and r7.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.y, r1.w, r6.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r6.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r7.w, r2.y
            add r6.w, r6.w, r2.z
            add r8.w, r6.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r6.xyz, r8.xyzx
            add_sat r8.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r9.xyzw, r5.xyzw, -r6.xyzw
            add r9.xyzw, r9.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r10.xyzw, r5.xyzw, -r8.xyzw
            add r10.xyzw, r10.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r11.xyzw, r5.xyzw, -r7.xyzw
            add r11.xyzw, r11.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r12.xyzw, r5.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r13.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r13.zzzz, r13.wwww, r13.xxyx
            sample_l r13.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r13.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r5.xyzw, r5.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r5.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r9.xyzw, r9.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r9.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r5.xyzw, r4.xyzw, r8.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r12.xyzw, r12.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r12.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 27.000000, 27.000000)
            mad r1.z, |r1.w|, l(0.500000), |r1.z|
            mul r4.xyzw, r3.xyzw, l(32.000000, 32.000000, 32.000000, 0.400000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(32.000000, 32.000000, 32.000000, 0.400000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r5.xyzw, r3.xyzw, l(32.000000, 32.000000, 32.000000, 0.400000), -r5.xyzw
            ge r6.xyzw, r5.xxxz, r5.yzww
            and r7.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r8.x, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r6.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r5.yyyy, r5.zzwz
            and r7.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.y, r1.w, r6.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r6.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r7.w, r2.y
            add r6.w, r6.w, r2.z
            add r8.w, r6.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r6.xyz, r8.xyzx
            add_sat r8.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r9.xyzw, r5.xyzw, -r6.xyzw
            add r9.xyzw, r9.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r10.xyzw, r5.xyzw, -r8.xyzw
            add r10.xyzw, r10.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r11.xyzw, r5.xyzw, -r7.xyzw
            add r11.xyzw, r11.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r12.xyzw, r5.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r13.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r13.zzzz, r13.wwww, r13.xxyx
            sample_l r13.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r13.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r5.xyzw, r5.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r5.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r9.xyzw, r9.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r9.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r5.xyzw, r4.xyzw, r8.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r12.xyzw, r12.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r12.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.w, r1.w, l(27.000000)
            mad r1.z, |r1.w|, l(0.250000), r1.z
            mul r4.xyzw, r3.xyzw, l(64.000000, 64.000000, 64.000000, 0.800000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(64.000000, 64.000000, 64.000000, 0.800000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r5.xyzw, r3.xyzw, l(64.000000, 64.000000, 64.000000, 0.800000), -r5.xyzw
            ge r6.xyzw, r5.xxxz, r5.yzww
            and r7.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r8.x, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r6.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r5.yyyy, r5.zzwz
            and r7.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.y, r1.w, r6.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r6.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r7.w, r2.y
            add r6.w, r6.w, r2.z
            add r8.w, r6.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r6.xyz, r8.xyzx
            add_sat r8.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r9.xyzw, r5.xyzw, -r6.xyzw
            add r9.xyzw, r9.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r10.xyzw, r5.xyzw, -r8.xyzw
            add r10.xyzw, r10.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r11.xyzw, r5.xyzw, -r7.xyzw
            add r11.xyzw, r11.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r12.xyzw, r5.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r13.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r13.zzzz, r13.wwww, r13.xxyx
            sample_l r13.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r13.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r5.xyzw, r5.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r5.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r9.xyzw, r9.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r9.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r5.xyzw, r4.xyzw, r8.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r12.xyzw, r12.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r12.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.w, r1.w, l(27.000000)
            mad r1.z, |r1.w|, l(0.125000), r1.z
            mul r4.xyzw, r3.xyzw, l(128.000000, 128.000000, 128.000000, 1.600000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(128.000000, 128.000000, 128.000000, 1.600000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r5.xyzw, r3.xyzw, l(128.000000, 128.000000, 128.000000, 1.600000), -r5.xyzw
            ge r6.xyzw, r5.xxxz, r5.yzww
            and r7.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r8.x, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r6.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r5.yyyy, r5.zzwz
            and r7.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.y, r1.w, r6.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r6.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r7.w, r2.y
            add r6.w, r6.w, r2.z
            add r8.w, r6.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r6.xyz, r8.xyzx
            add_sat r8.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r9.xyzw, r5.xyzw, -r6.xyzw
            add r9.xyzw, r9.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r10.xyzw, r5.xyzw, -r8.xyzw
            add r10.xyzw, r10.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r11.xyzw, r5.xyzw, -r7.xyzw
            add r11.xyzw, r11.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r12.xyzw, r5.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r13.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r13.zzzz, r13.wwww, r13.xxyx
            sample_l r13.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r13.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r5.xyzw, r5.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r5.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r9.xyzw, r9.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r9.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r5.xyzw, r4.xyzw, r8.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r12.xyzw, r12.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r12.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.w, r1.w, l(27.000000)
            mad r1.z, |r1.w|, l(0.062500), r1.z
            mul r4.xyzw, r3.xyzw, l(256.000000, 256.000000, 256.000000, 3.200000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(256.000000, 256.000000, 256.000000, 3.200000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r5.xyzw, r3.xyzw, l(256.000000, 256.000000, 256.000000, 3.200000), -r5.xyzw
            ge r6.xyzw, r5.xxxz, r5.yzww
            and r7.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r8.x, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r6.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r5.yyyy, r5.zzwz
            and r7.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.y, r1.w, r6.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r6.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r7.w, r2.y
            add r6.w, r6.w, r2.z
            add r8.w, r6.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r6.xyz, r8.xyzx
            add_sat r8.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r9.xyzw, r5.xyzw, -r6.xyzw
            add r9.xyzw, r9.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r10.xyzw, r5.xyzw, -r8.xyzw
            add r10.xyzw, r10.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r11.xyzw, r5.xyzw, -r7.xyzw
            add r11.xyzw, r11.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r12.xyzw, r5.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r13.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r13.zzzz, r13.wwww, r13.xxyx
            sample_l r13.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r13.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r5.xyzw, r5.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r5.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r9.xyzw, r9.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r9.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r5.xyzw, r4.xyzw, r8.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r12.xyzw, r12.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r12.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.w, r1.w, l(27.000000)
            mad r1.z, |r1.w|, l(0.031250), r1.z
            mul r4.xyzw, r3.xyzw, l(512.000000, 512.000000, 512.000000, 6.400000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(512.000000, 512.000000, 512.000000, 6.400000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r5.xyzw, r3.xyzw, l(512.000000, 512.000000, 512.000000, 6.400000), -r5.xyzw
            ge r6.xyzw, r5.xxxz, r5.yzww
            and r7.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r8.x, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r6.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r5.yyyy, r5.zzwz
            and r7.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.y, r1.w, r6.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r6.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r7.w, r2.y
            add r6.w, r6.w, r2.z
            add r8.w, r6.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r6.xyz, r8.xyzx
            add_sat r8.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r9.xyzw, r5.xyzw, -r6.xyzw
            add r9.xyzw, r9.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r10.xyzw, r5.xyzw, -r8.xyzw
            add r10.xyzw, r10.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r11.xyzw, r5.xyzw, -r7.xyzw
            add r11.xyzw, r11.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r12.xyzw, r5.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r13.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r13.zzzz, r13.wwww, r13.xxyx
            sample_l r13.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r13.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r5.xyzw, r5.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r5.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r9.xyzw, r9.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r9.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r5.xyzw, r4.xyzw, r8.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r12.xyzw, r12.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r12.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.w, r1.w, l(27.000000)
            mad r1.z, |r1.w|, l(0.015625), r1.z
            mul r4.xyzw, r3.xyzw, l(1024.000000, 1024.000000, 1024.000000, 12.800000)
            dp4 r1.w, r4.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r4.xyzw, r3.xyzw, l(1024.000000, 1024.000000, 1024.000000, 12.800000), r1.wwww
            round_ni r4.xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r1.wwww, r4.xyzw
            mad r3.xyzw, r3.xyzw, l(1024.000000, 1024.000000, 1024.000000, 12.800000), -r5.xyzw
            ge r5.xyzw, r3.xxxz, r3.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r2.yz, r3.yyyy, r3.zzwz
            and r6.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r2.yz, r2.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r2.yz, r2.yyzy, r5.yyzy
            add r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r2.y
            add r5.w, r5.w, r2.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r3.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r3.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.w, r12.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.y, r3.xyzw, r3.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp4 r1.w, cb2[r1.w + 17].xyzw, r3.xyzw
            add r3.xyzw, r4.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t1.xyzw, s1, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.w, r8.xyzw, r8.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            dp4 r2.z, cb2[r2.z + 17].xyzw, r8.xyzw
            mul r2.z, r2.z, r2.w
            mad r1.w, r2.y, r1.w, r2.z
            add r3.xyzw, r4.xyzw, r7.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r9.xyzw, r9.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r9.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r3.xyzw, r4.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            add r3.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r11.xyzw, r11.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r11.xyzw
            mad r1.w, r2.z, r2.y, r1.w
            mul r1.w, r1.w, l(27.000000)
            mad r1.z, |r1.w|, l(0.007813), r1.z
            mul r1.w, r1.z, l(0.501961)
            mad r0.y, |r0.z|, l(0.500000), |r0.y|
            mad r0.y, |r1.x|, l(0.250000), r0.y
            mad r0.y, |r1.y|, l(0.125000), r0.y
            mul r2.yzw, v0.xxyz, l(0.000000, 320.000000, 320.000000, 320.000000)
            dp3 r0.z, r2.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.yzw, v0.xxyz, l(0.000000, 320.000000, 320.000000, 320.000000), r0.zzzz
            round_ni r2.yzw, r2.yyzw
            dp3 r0.z, r2.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r0.zzzz, r2.yzwy
            mad r3.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.yzwy, cb2[0].xxxx
            add r1.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.z, r9.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r1.x, r3.xyzx, r3.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp3 r0.z, cb2[r0.z + 1].xyzx, r3.xyzx
            add r3.xyz, r2.yzwy, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r3.x, r5.xyzx, r5.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r1.y, cb2[r1.y + 1].xyzx, r5.xyzx
            mul r1.y, r1.y, r3.x
            mad r0.z, r1.x, r0.z, r1.y
            add r3.xyz, r2.yzwy, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r1.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r3.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r4.xyzx, r4.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r4.xyzx
            mad r0.z, r1.y, r1.x, r0.z
            add r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r1.xy, r2.wwww, r2.yzyy
            sample_l r3.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r3.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r8.xyzx, r8.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
            mad r0.z, r1.y, r1.x, r0.z
            mul r0.yzw, r0.yyzw, l(0.000000, 0.533333, 32.000000, 0.507937)
            mad r0.z, |r0.z|, l(0.500000), |r2.x|
            mad r0.z, r0.z, l(0.333333), -r0.w
            mad r0.z, r0.y, r0.z, r0.w
            if_nz cb1[3].y
              mul r2.xyz, r1.wwww, v2.yzxy
              mad r2.xyz, r2.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.yzxy
              mul r3.xyz, r0.zzzz, v2.yzxy
              mad r3.xyz, r3.xyzx, l(0.005000, 0.005000, 0.005000, 0.000000), v0.yzxy
              add r3.xyz, -r2.xyzx, r3.xyzx
              mad r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
              deriv_rtx r3.xyz, r2.yzxy
              deriv_rty r2.xyz, r2.xyzx
              mul r4.xyz, r2.xyzx, r3.xyzx
              mad r2.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
              dp3 r0.w, r2.xyzx, r2.xyzx
              rsq r0.w, r0.w
              mul r2.xyz, r0.wwww, r2.xyzx
            else 
              div r1.xy, v4.xyxx, cb0[16].xyxx
              sample_l r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.w, r2.xyzx, cb0[0].xyzx
            mad r2.xyzw, r0.wwww, l(0.100000, 0.100000, 0.100000, 1.000000), l(-0.850000, -0.070000, -0.050000, -1.000000)
            mad r3.xyzw, r1.wwww, r2.xyzw, l(0.850000, 0.070000, 0.050000, 1.000000)
            mad r4.xyzw, r0.zzzz, l(0.100000, 0.250000, 0.300000, 0.000000), l(0.500000, 0.300000, 0.100000, 1.000000)
            mul r0.y, r0.y, r0.y
            add r5.xyzw, -r4.xyzw, l(0.400000, 0.000000, 0.000000, 1.000000)
            mad r4.xyzw, r0.yyyy, r5.xyzw, r4.xyzw
            mul r5.xyzw, r0.wwww, r4.xyzw
            lt r0.yz, l(0.000000, 0.219141, 0.685312, 0.000000), r1.zzzz
            lt r1.xy, r1.zzzz, l(0.258984, 0.709219, 0.000000, 0.000000)
            and r0.yz, r0.yyzy, r1.xxyx
            mad r1.xy, r1.zzzz, l(0.501961, 0.501961, 0.000000, 0.000000), l(-0.120000, -0.350000, 0.000000, 0.000000)
            mul r1.xy, |r1.xyxx|, l(100.000000, 166.666672, 0.000000, 0.000000)
            mad r2.xyzw, r1.wwww, r2.xyzw, l(-0.150000, -0.430000, 0.050000, 0.000000)
            mad r2.xyzw, r1.xxxx, r2.xyzw, l(1.000000, 0.500000, 0.000000, 1.000000)
            movc r2.xyzw, r0.yyyy, r2.xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, l(-1.000000, -0.000000, -0.000000, -1.000000)
            mad r1.xyzw, r1.yyyy, r3.xyzw, l(1.000000, 0.000000, 0.000000, 1.000000)
            movc r1.xyzw, r0.zzzz, r1.xyzw, r2.xyzw
            add r0.x, -r0.x, l(1.000000)
            mad r1.xyzw, -r4.xyzw, r0.wwww, r1.xyzw
            mad o0.xyzw, r0.xxxx, r1.xyzw, r5.xyzw
            ret 
            // Approximately 1767 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderStraightBlocks
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 6
            mul r0.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000)
            dp3 r0.x, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r0.xxxx
            round_ni r0.xyz, r0.xyzx
            dp3 r0.w, r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, -r0.wwww, r0.xyzx
            mad r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.xyzx, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mul r0.w, r0.w, r1.w
            div r3.xyz, r0.xyzx, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r1.xyzx
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r1.w, r0.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.xyzx, r3.xyzx
            add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r0.xyzx, cb0[0].xxxx
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r4.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.x, r4.x, l(255.000000)
            ftou r0.x, r0.x
            and r0.x, r0.x, l(15)
            dp3 r0.x, cb0[r0.x + 1].xyzx, r1.xyzx
            dp3 r0.y, r1.xyzx, r1.xyzx
            add r0.y, -r0.y, l(0.600000)
            max r0.y, r0.y, l(0.000000)
            mul r0.y, r0.y, r0.y
            mul r0.y, r0.y, r0.y
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.z, r1.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.z, cb0[r0.z + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.z, r1.x, r0.z, r0.w
            mad r0.x, r0.y, r0.x, r0.z
            mul r0.yzw, v0.xxyz, l(0.000000, 80.000000, 80.000000, 80.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 80.000000, 80.000000, 80.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.yzwy, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r3.xyz, r0.yzwy, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb0[r2.w + 1].xyzx, r1.xyzx
            dp3 r3.x, r1.xyzx, r1.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r1.w, r3.x, r2.w, r1.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.yzwy, r3.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r1.xyzx
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.w, r1.x, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mul r0.yz, r0.yyyy, l(0.000000, 16.000000, 32.000000, 0.000000)
            mad r0.x, r0.x, l(32.000000), r0.y
            mul r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000)
            dp3 r0.y, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), r0.yyyy
            round_ni r1.xyz, r1.xyzx
            dp3 r0.y, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.yyyy, r1.xyzx
            mad r2.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb0[0].xxxx
            add r0.yw, r5.zzzz, r5.xxxy
            sample_l r5.xyzw, r0.ywyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r5.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r4.xyzx
            dp3 r0.w, r4.xyzx, r4.xyzx
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mul r0.y, r0.y, r0.w
            div r4.xyz, r1.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.w, r2.xyzx, r2.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r0.y, r1.w, r0.w, r0.y
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            div r1.yzw, r4.xxyz, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb0[r1.y + 1].xyzx, r3.xyzx
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.xz, r1.xxzx, r1.xxzx
            mul r1.z, r1.z, r1.z
            mad r0.y, r1.z, r1.y, r0.y
            mad r0.y, r1.x, r0.w, r0.y
            mad r0.x, r0.y, l(8.000000), r0.x
            mad r0.y, r0.y, l(16.000000), r0.z
            mad_sat r0.x, r0.x, l(0.571429), l(-0.500000)
            add r0.x, -r0.x, l(1.000000)
            mul r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
            dp3 r0.z, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r0.zzzz
            round_ni r1.xyz, r1.xyzx
            dp3 r0.z, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.zzzz, r1.xyzx
            mad r2.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb0[0].xxxx
            add r0.zw, r5.zzzz, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.z, cb0[r0.z + 1].xyzx, r4.xyzx
            dp3 r0.w, r4.xyzx, r4.xyzx
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mul r0.z, r0.z, r0.w
            div r4.xyz, r1.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.w, r2.xyzx, r2.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r0.z, r1.w, r0.w, r0.z
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            div r1.yzw, r4.xxyz, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb0[r1.y + 1].xyzx, r3.xyzx
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.xz, r1.xxzx, r1.xxzx
            mul r1.z, r1.z, r1.z
            mad r0.z, r1.z, r1.y, r0.z
            mad r0.z, r1.x, r0.w, r0.z
            mad r0.y, r0.z, l(8.000000), r0.y
            mul r0.zw, r0.yyyy, l(0.000000, 0.000000, 0.000057, 0.000571)
            mad r0.x, r0.x, l(0.010000), r0.z
            mad r0.x, -r0.y, l(0.000571), r0.x
            mul r1.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_pi r2.xyz, r1.xyzx
            round_ni r1.xyz, r1.xyzx
            mad r1.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000), -r1.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.y, r1.xyzx, r1.xyzx
            mad r1.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000), -r2.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.y, r0.y, r0.z
            mul r0.y, r0.y, l(500.000000)
            min r0.y, r0.y, l(1.000000)
            log r0.z, r0.y
            mul r0.z, r0.z, l(16.000000)
            exp r0.z, r0.z
            add r0.yz, -r0.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            mad r0.x, r0.z, r0.x, r0.w
            add r0.x, r0.y, r0.x
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad o0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 332 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 10
            mul r0.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_pi r1.xyz, r0.xyzx
            round_ni r0.xyz, r0.xyzx
            mad r1.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000), -r1.xyzx
            mad r2.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000), -r0.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r2.xyz, -|r2.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r0.w, r0.w, r1.x
            mul r0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.039216, 500.000000)
            min r0.w, r0.w, l(1.000000)
            log r1.x, r0.w
            mul r1.x, r1.x, l(16.000000)
            exp r1.x, r1.x
            mul r1.yzw, v0.xxyz, l(0.000000, 40.000000, 40.000000, 40.000000)
            dp3 r1.y, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, v0.xxyz, l(0.000000, 40.000000, 40.000000, 40.000000), r1.yyyy
            round_ni r1.yzw, r1.yyzw
            dp3 r2.x, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, r1.yzwy, -r2.xxxx
            mad r2.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.yzwy, cb2[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.w, r2.xyzx, r2.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            dp3 r2.x, cb2[r2.w + 1].xyzx, r2.xyzx
            add r2.yzw, r1.yyzw, r5.xxyz
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(15)
            dp3 r2.z, r4.xyzx, r4.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp3 r2.y, cb2[r2.y + 1].xyzx, r4.xyzx
            mul r2.y, r2.y, r2.z
            mad r2.x, r3.w, r2.x, r2.y
            add r2.yzw, r1.yyzw, r6.xxyz
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(15)
            dp3 r2.z, r3.xyzx, r3.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp3 r2.y, cb2[r2.y + 1].xyzx, r3.xyzx
            mad r2.x, r2.z, r2.y, r2.x
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r7.xyzx, r7.xyzx
            add r1.xz, -r1.xxzx, l(1.000000, 0.000000, 0.600000, 0.000000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r7.xyzx
            mad r1.y, r1.z, r1.y, r2.x
            mul r2.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000)
            dp3 r1.z, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), r1.zzzz
            round_ni r2.xyz, r2.xyzx
            dp3 r1.z, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.zzzz, r2.xyzx
            mad r3.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.xyzx, cb2[0].xxxx
            add r1.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r9.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r3.xyzx
            add r3.xyz, r2.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r5.xyzx, r5.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            mul r2.w, r2.w, r3.x
            mad r1.z, r1.w, r1.z, r2.w
            add r3.xyz, r2.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mad r1.z, r2.w, r1.w, r1.z
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r8.xyzx, r8.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r8.xyzx
            mad r1.z, r2.x, r1.w, r1.z
            mul r1.w, r1.z, l(16.000000)
            mad r1.y, r1.y, l(32.000000), r1.w
            mul r2.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000)
            dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), r1.wwww
            round_ni r2.xyz, r2.xyzx
            dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.wwww, r2.xyzx
            mad r3.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r2.xyzx, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r9.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
            add r3.xyz, r2.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
            mul r3.x, r3.x, r3.y
            mad r1.w, r2.w, r1.w, r3.x
            add r3.xyz, r2.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
            mad r1.w, r3.x, r2.w, r1.w
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r8.xyzx, r8.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r8.xyzx
            mad r1.w, r2.y, r2.x, r1.w
            mad r1.y, r1.w, l(8.000000), r1.y
            mad_sat r1.y, r1.y, l(0.571429), l(-0.500000)
            add r1.y, -r1.y, l(1.000000)
            if_nz cb1[3].y
              add r0.w, -r0.w, l(1.000000)
              mul r1.w, r1.w, l(16.000000)
              mad r1.z, r1.z, l(32.000000), r1.w
              mul r2.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
              dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              mad r2.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r1.wwww
              round_ni r2.xyz, r2.xyzx
              dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              add r3.xyz, -r1.wwww, r2.xyzx
              mad r3.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r3.xyzx
              ge r4.xyz, r3.xyzx, r3.yzxy
              and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              lt r5.xyz, r4.zxyz, r4.xyzx
              and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              ge r4.xyz, r4.xyzx, r4.zxyz
              and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r5.xyz, r3.xyzx, r5.xyzx
              add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r4.xyz, r3.xyzx, r4.xyzx
              add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
              div r9.xyz, r2.xyzx, cb2[0].xxxx
              add r9.xy, r9.zzzz, r9.xyxx
              sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
              mul r1.w, r9.x, l(255.000000)
              ftou r1.w, r1.w
              and r1.w, r1.w, l(15)
              dp3 r2.w, r3.xyzx, r3.xyzx
              add r2.w, -r2.w, l(0.600000)
              max r2.w, r2.w, l(0.000000)
              mul r2.w, r2.w, r2.w
              mul r2.w, r2.w, r2.w
              dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
              add r3.xyz, r2.xyzx, r6.xyzx
              div r3.xyz, r3.xyzx, cb2[0].xxxx
              add r3.xy, r3.zzzz, r3.xyxx
              sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
              mul r3.x, r3.x, l(255.000000)
              ftou r3.x, r3.x
              and r3.x, r3.x, l(15)
              dp3 r3.y, r5.xyzx, r5.xyzx
              add r3.y, -r3.y, l(0.600000)
              max r3.y, r3.y, l(0.000000)
              mul r3.y, r3.y, r3.y
              mul r3.y, r3.y, r3.y
              dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
              mul r3.x, r3.x, r3.y
              mad r1.w, r2.w, r1.w, r3.x
              add r3.xyz, r2.xyzx, r7.xyzx
              div r3.xyz, r3.xyzx, cb2[0].xxxx
              add r3.xy, r3.zzzz, r3.xyxx
              sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
              mul r2.w, r3.x, l(255.000000)
              ftou r2.w, r2.w
              and r2.w, r2.w, l(15)
              dp3 r3.x, r4.xyzx, r4.xyzx
              add r3.x, -r3.x, l(0.600000)
              max r3.x, r3.x, l(0.000000)
              mul r3.x, r3.x, r3.x
              mul r3.x, r3.x, r3.x
              dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
              mad r1.w, r3.x, r2.w, r1.w
              add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
              div r2.xyz, r2.xyzx, cb2[0].xxxx
              add r2.xy, r2.zzzz, r2.xyxx
              sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
              mul r2.x, r2.x, l(255.000000)
              ftou r2.x, r2.x
              and r2.x, r2.x, l(15)
              dp3 r2.y, r8.xyzx, r8.xyzx
              add r2.y, -r2.y, l(0.600000)
              max r2.y, r2.y, l(0.000000)
              mul r2.y, r2.y, r2.y
              mul r2.y, r2.y, r2.y
              dp3 r2.x, cb2[r2.x + 1].xyzx, r8.xyzx
              mad r1.w, r2.y, r2.x, r1.w
              mad r1.z, r1.w, l(8.000000), r1.z
              mul r2.xy, r1.zzzz, l(0.000057, 0.000571, 0.000000, 0.000000)
              mad r1.w, r1.y, l(0.010000), r2.x
              mad r1.z, -r1.z, l(0.000571), r1.w
              mad r1.z, r1.x, r1.z, r2.y
              add r0.w, r0.w, r1.z
              mul r2.xyz, r0.wwww, v2.yzxy
              mad r2.xyz, r2.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.yzxy
              deriv_rtx r3.xyz, r2.yzxy
              deriv_rty r2.xyz, r2.xyzx
              mul r4.xyz, r2.xyzx, r3.xyzx
              mad r2.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
              dp3 r0.w, r2.xyzx, r2.xyzx
              rsq r0.w, r0.w
              mul r2.xyz, r0.wwww, r2.xyzx
            else 
              div r1.zw, v4.xxxy, cb0[16].xxxy
              sample_l r2.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.w, r2.xyzx, cb0[0].xyzx
            max r0.w, r0.w, l(0.100000)
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r2.xyzw, r0.xyxx, t1.xyzw, s1, l(0.000000)
            log r0.x, r1.y
            mul r0.x, r0.x, l(16.000000)
            exp r0.x, r0.x
            mad r2.xyzw, r2.xxxx, l(0.450000, -0.010000, 0.040000, 0.000000), l(-0.150000, -0.270000, -0.290000, 0.000000)
            mad r2.xyzw, r0.xxxx, r2.xyzw, l(-0.300000, -0.400000, -0.400000, 0.000000)
            mad r1.xyzw, r1.xxxx, r2.xyzw, l(0.700000, 0.700000, 0.700000, 1.000000)
            mul o0.xyzw, r0.wwww, r1.xyzw
            ret 
            // Approximately 357 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderStagBlocks
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 6
            mul r0.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000)
            dp3 r0.x, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r0.xxxx
            round_ni r0.xyz, r0.xyzx
            dp3 r0.w, r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, -r0.wwww, r0.xyzx
            mad r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.xyzx, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mul r0.w, r0.w, r1.w
            div r3.xyz, r0.xyzx, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r1.xyzx
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r1.w, r0.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.xyzx, r3.xyzx
            add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r0.xyzx, cb0[0].xxxx
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r4.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.x, r4.x, l(255.000000)
            ftou r0.x, r0.x
            and r0.x, r0.x, l(15)
            dp3 r0.x, cb0[r0.x + 1].xyzx, r1.xyzx
            dp3 r0.y, r1.xyzx, r1.xyzx
            add r0.y, -r0.y, l(0.600000)
            max r0.y, r0.y, l(0.000000)
            mul r0.y, r0.y, r0.y
            mul r0.y, r0.y, r0.y
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.z, r1.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.z, cb0[r0.z + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.z, r1.x, r0.z, r0.w
            mad r0.x, r0.y, r0.x, r0.z
            mul r0.yzw, v0.xxyz, l(0.000000, 80.000000, 80.000000, 80.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 80.000000, 80.000000, 80.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.yzwy, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r3.xyz, r0.yzwy, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb0[r2.w + 1].xyzx, r1.xyzx
            dp3 r3.x, r1.xyzx, r1.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r1.w, r3.x, r2.w, r1.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.yzwy, r3.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r1.xyzx
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.w, r1.x, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mul r0.yz, r0.yyyy, l(0.000000, 16.000000, 32.000000, 0.000000)
            mad r0.x, r0.x, l(32.000000), r0.y
            mul r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000)
            dp3 r0.y, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), r0.yyyy
            round_ni r1.xyz, r1.xyzx
            dp3 r0.y, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.yyyy, r1.xyzx
            mad r2.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb0[0].xxxx
            add r0.yw, r5.zzzz, r5.xxxy
            sample_l r5.xyzw, r0.ywyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r5.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r4.xyzx
            dp3 r0.w, r4.xyzx, r4.xyzx
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mul r0.y, r0.y, r0.w
            div r4.xyz, r1.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.w, r2.xyzx, r2.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r0.y, r1.w, r0.w, r0.y
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            div r1.yzw, r4.xxyz, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb0[r1.y + 1].xyzx, r3.xyzx
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.xz, r1.xxzx, r1.xxzx
            mul r1.z, r1.z, r1.z
            mad r0.y, r1.z, r1.y, r0.y
            mad r0.y, r1.x, r0.w, r0.y
            mad r0.x, r0.y, l(8.000000), r0.x
            mad r0.y, r0.y, l(16.000000), r0.z
            mad_sat r0.x, r0.x, l(0.571429), l(-0.500000)
            add r0.x, -r0.x, l(1.000000)
            mul r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
            dp3 r0.z, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r0.zzzz
            round_ni r1.xyz, r1.xyzx
            dp3 r0.z, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.zzzz, r1.xyzx
            mad r2.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb0[0].xxxx
            add r0.zw, r5.zzzz, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.z, cb0[r0.z + 1].xyzx, r4.xyzx
            dp3 r0.w, r4.xyzx, r4.xyzx
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mul r0.z, r0.z, r0.w
            div r4.xyz, r1.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.w, r2.xyzx, r2.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r0.z, r1.w, r0.w, r0.z
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            div r1.yzw, r4.xxyz, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb0[r1.y + 1].xyzx, r3.xyzx
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.xz, r1.xxzx, r1.xxzx
            mul r1.z, r1.z, r1.z
            mad r0.z, r1.z, r1.y, r0.z
            mad r0.z, r1.x, r0.w, r0.z
            mad r0.y, r0.z, l(8.000000), r0.y
            mul r0.zw, r0.yyyy, l(0.000000, 0.000000, 0.000057, 0.000571)
            mad r0.x, r0.x, l(0.010000), r0.z
            mad r0.x, -r0.y, l(0.000571), r0.x
            mul r1.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_ni r0.y, r1.y
            ftou r0.y, |r0.y|
            and r0.y, r0.y, l(1)
            utof r0.y, r0.y
            mad r1.xyz, r0.yyyy, l(0.500000, 0.000000, 0.500000, 0.000000), r1.xyzx
            round_pi r2.xyz, r1.xyzx
            add r2.xyz, r1.xyzx, -r2.xyzx
            add r2.xyz, -|r2.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.y, r2.xyzx, r2.xyzx
            round_ni r2.xyz, r1.xyzx
            add r1.xyz, r1.xyzx, -r2.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.y, r0.z, r0.y
            mul r0.y, r0.y, l(500.000000)
            min r0.y, r0.y, l(1.000000)
            log r0.z, r0.y
            mul r0.z, r0.z, l(16.000000)
            exp r0.z, r0.z
            add r0.yz, -r0.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            mad r0.x, r0.z, r0.x, r0.w
            add r0.x, r0.y, r0.x
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad o0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 337 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 10
            mul r0.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_ni r0.w, r0.y
            ftou r0.w, |r0.w|
            and r0.w, r0.w, l(1)
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.500000, 0.000000, 0.500000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            round_ni r2.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r0.xyz, r0.xyzx, -r2.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r0.xyz, -|r0.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(500.000000)
            min r0.x, r0.x, l(1.000000)
            log r0.y, r0.x
            mul r0.y, r0.y, l(16.000000)
            exp r0.y, r0.y
            mul r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000)
            dp3 r0.z, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r0.zzzz
            round_ni r1.xyz, r1.xyzx
            dp3 r0.z, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r0.zzzz, r1.xyzx
            mad r3.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.xyzx, cb2[0].xxxx
            add r0.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r9.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.w, r3.xyzx, r3.xyzx
            add r0.yw, -r0.yyyw, l(0.000000, 1.000000, 0.000000, 0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp3 r0.z, cb2[r0.z + 1].xyzx, r3.xyzx
            add r3.xyz, r1.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            mul r1.w, r1.w, r2.w
            mad r0.z, r0.w, r0.z, r1.w
            add r3.xyz, r1.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r4.xyzx, r4.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r4.xyzx
            mad r0.z, r1.w, r0.w, r0.z
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.x, r8.xyzx, r8.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp3 r0.w, cb2[r0.w + 1].xyzx, r8.xyzx
            mad r0.z, r1.x, r0.w, r0.z
            mul r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000)
            dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), r0.wwww
            round_ni r1.xyz, r1.xyzx
            dp3 r0.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r0.wwww, r1.xyzx
            mad r3.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.xyzx, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r9.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r3.xyzx
            add r3.xyz, r1.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r5.xyzx, r5.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            mul r2.w, r2.w, r3.x
            mad r0.w, r1.w, r0.w, r2.w
            add r3.xyz, r1.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mad r0.w, r2.w, r1.w, r0.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r8.xyzx, r8.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            mul r1.x, r0.w, l(16.000000)
            mad r0.z, r0.z, l(32.000000), r1.x
            mul r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000)
            dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), r1.xxxx
            round_ni r1.xyz, r1.xyzx
            dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.wwww, r1.xyzx
            mad r3.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.xyzx, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r9.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
            add r3.xyz, r1.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
            mul r3.x, r3.x, r3.y
            mad r1.w, r2.w, r1.w, r3.x
            add r3.xyz, r1.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
            mad r1.w, r3.x, r2.w, r1.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r3.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r8.xyzx, r8.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
            mad r1.x, r1.y, r1.x, r1.w
            mad r0.z, r1.x, l(8.000000), r0.z
            mad_sat r0.z, r0.z, l(0.571429), l(-0.500000)
            add r0.z, -r0.z, l(1.000000)
            if_nz cb1[3].y
              add r0.x, -r0.x, l(1.000000)
              mul r1.x, r1.x, l(16.000000)
              mad r0.w, r0.w, l(32.000000), r1.x
              mul r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
              dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              mad r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r1.xxxx
              round_ni r1.xyz, r1.xyzx
              dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              add r3.xyz, -r1.wwww, r1.xyzx
              mad r3.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r3.xyzx
              ge r4.xyz, r3.xyzx, r3.yzxy
              and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              lt r5.xyz, r4.zxyz, r4.xyzx
              and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              ge r4.xyz, r4.xyzx, r4.zxyz
              and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r5.xyz, r3.xyzx, r5.xyzx
              add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r4.xyz, r3.xyzx, r4.xyzx
              add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
              div r9.xyz, r1.xyzx, cb2[0].xxxx
              add r9.xy, r9.zzzz, r9.xyxx
              sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
              mul r1.w, r9.x, l(255.000000)
              ftou r1.w, r1.w
              and r1.w, r1.w, l(15)
              dp3 r2.w, r3.xyzx, r3.xyzx
              add r2.w, -r2.w, l(0.600000)
              max r2.w, r2.w, l(0.000000)
              mul r2.w, r2.w, r2.w
              mul r2.w, r2.w, r2.w
              dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
              add r3.xyz, r1.xyzx, r6.xyzx
              div r3.xyz, r3.xyzx, cb2[0].xxxx
              add r3.xy, r3.zzzz, r3.xyxx
              sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
              mul r3.x, r3.x, l(255.000000)
              ftou r3.x, r3.x
              and r3.x, r3.x, l(15)
              dp3 r3.y, r5.xyzx, r5.xyzx
              add r3.y, -r3.y, l(0.600000)
              max r3.y, r3.y, l(0.000000)
              mul r3.y, r3.y, r3.y
              mul r3.y, r3.y, r3.y
              dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
              mul r3.x, r3.x, r3.y
              mad r1.w, r2.w, r1.w, r3.x
              add r3.xyz, r1.xyzx, r7.xyzx
              div r3.xyz, r3.xyzx, cb2[0].xxxx
              add r3.xy, r3.zzzz, r3.xyxx
              sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
              mul r2.w, r3.x, l(255.000000)
              ftou r2.w, r2.w
              and r2.w, r2.w, l(15)
              dp3 r3.x, r4.xyzx, r4.xyzx
              add r3.x, -r3.x, l(0.600000)
              max r3.x, r3.x, l(0.000000)
              mul r3.x, r3.x, r3.x
              mul r3.x, r3.x, r3.x
              dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
              mad r1.w, r3.x, r2.w, r1.w
              add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
              div r1.xyz, r1.xyzx, cb2[0].xxxx
              add r1.xy, r1.zzzz, r1.xyxx
              sample_l r3.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
              mul r1.x, r3.x, l(255.000000)
              ftou r1.x, r1.x
              and r1.x, r1.x, l(15)
              dp3 r1.y, r8.xyzx, r8.xyzx
              add r1.y, -r1.y, l(0.600000)
              max r1.y, r1.y, l(0.000000)
              mul r1.y, r1.y, r1.y
              mul r1.y, r1.y, r1.y
              dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
              mad r1.x, r1.y, r1.x, r1.w
              mad r0.w, r1.x, l(8.000000), r0.w
              mul r1.xy, r0.wwww, l(0.000057, 0.000571, 0.000000, 0.000000)
              mad r1.x, r0.z, l(0.010000), r1.x
              mad r0.w, -r0.w, l(0.000571), r1.x
              mad r0.w, r0.y, r0.w, r1.y
              add r0.x, r0.x, r0.w
              mul r1.xyz, r0.xxxx, v2.yzxy
              mad r1.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.yzxy
              deriv_rtx r3.xyz, r1.yzxy
              deriv_rty r1.xyz, r1.xyzx
              mul r4.xyz, r1.xyzx, r3.xyzx
              mad r1.xyz, r3.zxyz, r1.yzxy, -r4.xyzx
              dp3 r0.x, r1.xyzx, r1.xyzx
              rsq r0.x, r0.x
              mul r1.xyz, r0.xxxx, r1.xyzx
            else 
              div r0.xw, v4.xxxy, cb0[16].xxxy
              sample_l r1.xyzw, r0.xwxx, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.x, r1.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.100000)
            mul r1.xyz, r2.xyzx, l(0.003922, 0.003922, 0.039216, 0.000000)
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            log r0.z, r0.z
            mul r0.z, r0.z, l(16.000000)
            exp r0.z, r0.z
            mad r1.xyzw, r1.xxxx, l(0.450000, -0.010000, 0.040000, 0.000000), l(-0.150000, -0.270000, -0.290000, 0.000000)
            mad r1.xyzw, r0.zzzz, r1.xyzw, l(-0.300000, -0.400000, -0.400000, 0.000000)
            mad r1.xyzw, r0.yyyy, r1.xyzw, l(0.700000, 0.700000, 0.700000, 1.000000)
            mul o0.xyzw, r0.xxxx, r1.xyzw
            ret 
            // Approximately 363 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderWigglyBlocks
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 9
            mul r0.xyz, v0.xyzx, l(1.950000, 1.950000, 1.950000, 0.000000)
            mul r0.w, cb0[2].x, l(0.100000)
            dp4 r1.x, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r1.xyzw, r0.xyzw, r1.xxxx
            round_ni r1.xyzw, r1.xyzw
            dp4 r2.x, r1.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r2.xyzw, r1.xyzw, -r2.xxxx
            add r2.xyzw, r0.xyzw, -r2.xyzw
            ge r3.xy, r2.yyyy, r2.zwzz
            movc r3.zw, r3.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r3.x, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r2.xxxz, r2.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r3.yz, r3.zzwz, r5.yyzy
            add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r4.w, r3.y
            add r6.w, r5.w, r3.z
            add r6.y, r3.x, r5.x
            dp3 r6.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r3.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r4.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.w, r6.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r1.xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r6.xy, r6.zzzz, r6.wwww, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r6.x, r6.x, l(255.000000)
            ftou r6.x, r6.x
            and r6.x, r6.x, l(31)
            dp4 r6.x, cb1[r6.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mul r3.x, r6.x, r3.x
            div r6.xyzw, r1.xyzw, cb1[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb1[r3.y + 17].xyzw, r2.xyzw
            dp4 r3.z, r2.xyzw, r2.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r6.xyzw, r1.xyzw, r4.xyzw
            add r4.xyzw, r2.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb1[r3.y + 17].xyzw, r4.xyzw
            dp4 r3.z, r4.xyzw, r4.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r4.xyzw, r1.xyzw, r5.xyzw
            add r5.xyzw, r2.xyzw, -r5.xyzw
            add r2.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb1[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.x, cb1[r1.x + 17].xyzw, r2.xyzw
            dp4 r1.y, r2.xyzw, r2.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            div r2.xyzw, r4.xyzw, cb1[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r5.xyzw
            dp4 r1.w, r5.xyzw, r5.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.w, r1.w, r1.w
            mad r1.z, r1.w, r1.z, r3.x
            mad r1.x, r1.y, r1.x, r1.z
            mov r2.xyz, v0.xyzx
            mov r2.w, cb0[2].x
            mul r3.xyzw, r2.xyzw, l(3.900000, 3.900000, 3.900000, 0.200000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(3.900000, 3.900000, 3.900000, 0.200000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r2.xyzw, l(3.900000, 3.900000, 3.900000, 0.200000), -r4.xyzw
            ge r1.yz, r4.yyyy, r4.zzwz
            movc r5.xy, r1.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r1.y, r1.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r1.zw, r5.xxxy, r7.yyyz
            add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r6.w, r1.z
            add r5.w, r7.w, r1.w
            add r5.y, r1.y, r7.x
            dp3 r5.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r6.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r1.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r8.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.y, cb1[r1.y + 17].xyzw, r6.xyzw
            dp4 r1.z, r6.xyzw, r6.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            mul r1.y, r1.y, r1.z
            div r6.xyzw, r3.xyzw, cb1[0].xxxx
            mad r1.zw, r6.zzzz, r6.wwww, r6.xxxy
            sample_l r6.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r6.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, r4.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r1.y, r1.w, r1.z, r1.y
            add r6.xyzw, r3.xyzw, r7.xyzw
            add r7.xyzw, r4.xyzw, -r7.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r1.zw, r6.zzzz, r6.wwww, r6.xxxy
            sample_l r6.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r6.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r7.xyzw
            dp4 r1.w, r7.xyzw, r7.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r1.y, r1.w, r1.z, r1.y
            add r6.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, r4.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            div r3.xyzw, r6.xyzw, cb1[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb1[r3.x + 17].xyzw, r5.xyzw
            dp4 r3.y, r5.xyzw, r5.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            mad r1.y, r3.y, r3.x, r1.y
            mad r1.y, r1.w, r1.z, r1.y
            mul r1.y, r1.y, l(13.500000)
            mad r1.x, r1.x, l(27.000000), r1.y
            mul r3.xyzw, r2.xyzw, l(7.800000, 7.800000, 7.800000, 0.400000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(7.800000, 7.800000, 7.800000, 0.400000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r2.xyzw, l(7.800000, 7.800000, 7.800000, 0.400000), -r4.xyzw
            ge r1.yz, r4.yyyy, r4.zzwz
            movc r5.xy, r1.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r1.y, r1.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r1.zw, r5.xxxy, r7.yyyz
            add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r6.w, r1.z
            add r5.w, r7.w, r1.w
            add r5.y, r1.y, r7.x
            dp3 r5.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r6.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r1.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r8.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.y, cb1[r1.y + 17].xyzw, r6.xyzw
            dp4 r1.z, r6.xyzw, r6.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            mul r1.y, r1.y, r1.z
            div r6.xyzw, r3.xyzw, cb1[0].xxxx
            mad r1.zw, r6.zzzz, r6.wwww, r6.xxxy
            sample_l r6.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r6.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, r4.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r1.y, r1.w, r1.z, r1.y
            add r6.xyzw, r3.xyzw, r7.xyzw
            add r7.xyzw, r4.xyzw, -r7.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r1.zw, r6.zzzz, r6.wwww, r6.xxxy
            sample_l r6.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r6.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r7.xyzw
            dp4 r1.w, r7.xyzw, r7.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r1.y, r1.w, r1.z, r1.y
            add r6.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r4.xyzw
            dp4 r1.w, r4.xyzw, r4.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            div r3.xyzw, r6.xyzw, cb1[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb1[r3.x + 17].xyzw, r5.xyzw
            dp4 r3.y, r5.xyzw, r5.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            mad r1.y, r3.y, r3.x, r1.y
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(6.750000), r1.x
            mul r3.xyzw, r2.xyzw, l(15.600000, 15.600000, 15.600000, 0.800000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(15.600000, 15.600000, 15.600000, 0.800000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r2.xyzw, r2.xyzw, l(15.600000, 15.600000, 15.600000, 0.800000), -r4.xyzw
            ge r1.yz, r2.yyyy, r2.zzwz
            movc r4.xy, r1.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r1.y, r1.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r2.xxxz, r2.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r1.zw, r4.xxxy, r6.yyyz
            add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r1.z
            add r4.w, r6.w, r1.w
            add r4.y, r1.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r2.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r1.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r7.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.y, cb1[r1.y + 17].xyzw, r5.xyzw
            dp4 r1.z, r5.xyzw, r5.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            mul r1.y, r1.y, r1.z
            div r5.xyzw, r3.xyzw, cb1[0].xxxx
            mad r1.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r5.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r2.xyzw
            dp4 r1.w, r2.xyzw, r2.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r1.y, r1.w, r1.z, r1.y
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r2.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r1.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r5.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r6.xyzw
            dp4 r1.w, r6.xyzw, r6.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mad r1.y, r1.w, r1.z, r1.y
            add r5.xyzw, r3.xyzw, r4.xyzw
            add r4.xyzw, r2.xyzw, -r4.xyzw
            add r2.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.z, cb1[r1.z + 17].xyzw, r2.xyzw
            dp4 r1.w, r2.xyzw, r2.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            div r2.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r1.y, r2.y, r2.x, r1.y
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(3.375000), r1.x
            add r2.xyzw, r0.xyzw, l(12.000000, 0.000000, -8.000000, 0.000000)
            add r0.xyzw, r0.xyzw, l(12.000000, -23.000000, 14.000000, 0.000000)
            add r3.xyzw, r2.xyzw, r2.xyzw
            dp4 r1.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r1.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.wwww, r3.xyzw
            mad r4.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r1.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r8.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r1.w, cb1[r1.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r1.w, r1.w, r5.x
            div r5.xyzw, r3.xyzw, cb1[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb1[r5.x + 17].xyzw, r4.xyzw
            dp4 r5.y, r4.xyzw, r4.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r1.w, r5.y, r5.x, r1.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb1[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r1.w, r5.y, r5.x, r1.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb1[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r5.xyzw, cb1[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb1[r3.z + 17].xyzw, r6.xyzw
            dp4 r3.w, r6.xyzw, r6.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r3.z, r1.w
            mad r1.w, r3.y, r3.x, r1.w
            mul r1.w, r1.w, l(13.500000)
            dp4 r3.x, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r3.xyzw, r2.xyzw, r3.xxxx
            round_ni r3.xyzw, r3.xyzw
            dp4 r4.x, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, r3.xyzw, -r4.xxxx
            add r4.xyzw, r2.xyzw, -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.x, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.yz, r5.zzwz, r7.yyzy
            add r5.yz, r5.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r6.w, r5.y
            add r8.w, r7.w, r5.z
            add r8.y, r5.x, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r8.x, r8.x, l(255.000000)
            ftou r8.x, r8.x
            and r8.x, r8.x, l(31)
            dp4 r8.x, cb1[r8.x + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r5.x, r8.x, r5.x
            div r8.xyzw, r3.xyzw, cb1[0].xxxx
            mad r5.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r5.yzyy, t0.xyzw, s0, l(0.000000)
            mul r5.y, r8.x, l(255.000000)
            ftou r5.y, r5.y
            and r5.y, r5.y, l(31)
            dp4 r5.y, cb1[r5.y + 17].xyzw, r4.xyzw
            dp4 r5.z, r4.xyzw, r4.xyzw
            add r5.z, -r5.z, l(0.600000)
            max r5.z, r5.z, l(0.000000)
            mul r5.z, r5.z, r5.z
            mul r5.z, r5.z, r5.z
            mad r5.x, r5.z, r5.y, r5.x
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r5.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r5.yzyy, t0.xyzw, s0, l(0.000000)
            mul r5.y, r8.x, l(255.000000)
            ftou r5.y, r5.y
            and r5.y, r5.y, l(31)
            dp4 r5.y, cb1[r5.y + 17].xyzw, r6.xyzw
            dp4 r5.z, r6.xyzw, r6.xyzw
            add r5.z, -r5.z, l(0.600000)
            max r5.z, r5.z, l(0.000000)
            mul r5.z, r5.z, r5.z
            mul r5.z, r5.z, r5.z
            mad r5.x, r5.z, r5.y, r5.x
            add r6.xyzw, r3.xyzw, r7.xyzw
            add r7.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r7.xyzw, r7.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb1[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r6.xyzw, cb1[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb1[r3.z + 17].xyzw, r7.xyzw
            dp4 r3.w, r7.xyzw, r7.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r3.z, r3.w, r3.z, r5.x
            mad r3.x, r3.y, r3.x, r3.z
            mad r1.w, r3.x, l(27.000000), r1.w
            mul r3.xyzw, r2.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
            dp4 r3.x, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), r3.xxxx
            round_ni r3.xyzw, r3.xyzw
            dp4 r4.x, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, r3.xyzw, -r4.xxxx
            mad r4.xyzw, r2.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.x, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.yz, r5.zzwz, r7.yyzy
            add r5.yz, r5.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r8.z, r6.w, r5.y
            add r8.w, r7.w, r5.z
            add r8.y, r5.x, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r8.x, r8.x, l(255.000000)
            ftou r8.x, r8.x
            and r8.x, r8.x, l(31)
            dp4 r8.x, cb1[r8.x + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r5.x, r8.x, r5.x
            div r8.xyzw, r3.xyzw, cb1[0].xxxx
            mad r5.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r5.yzyy, t0.xyzw, s0, l(0.000000)
            mul r5.y, r8.x, l(255.000000)
            ftou r5.y, r5.y
            and r5.y, r5.y, l(31)
            dp4 r5.y, cb1[r5.y + 17].xyzw, r4.xyzw
            dp4 r5.z, r4.xyzw, r4.xyzw
            add r5.z, -r5.z, l(0.600000)
            max r5.z, r5.z, l(0.000000)
            mul r5.z, r5.z, r5.z
            mul r5.z, r5.z, r5.z
            mad r5.x, r5.z, r5.y, r5.x
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r8.xyzw, r8.xyzw, cb1[0].xxxx
            mad r5.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r5.yzyy, t0.xyzw, s0, l(0.000000)
            mul r5.y, r8.x, l(255.000000)
            ftou r5.y, r5.y
            and r5.y, r5.y, l(31)
            dp4 r5.y, cb1[r5.y + 17].xyzw, r6.xyzw
            dp4 r5.z, r6.xyzw, r6.xyzw
            add r5.z, -r5.z, l(0.600000)
            max r5.z, r5.z, l(0.000000)
            mul r5.z, r5.z, r5.z
            mul r5.z, r5.z, r5.z
            mad r5.x, r5.z, r5.y, r5.x
            add r6.xyzw, r3.xyzw, r7.xyzw
            add r7.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r7.xyzw, r7.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb1[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r6.xyzw, cb1[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb1[r3.z + 17].xyzw, r7.xyzw
            dp4 r3.w, r7.xyzw, r7.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r3.z, r3.w, r3.z, r5.x
            mad r3.x, r3.y, r3.x, r3.z
            mad r1.w, r3.x, l(6.750000), r1.w
            mul r3.xyzw, r2.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000)
            dp4 r3.x, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), r3.xxxx
            round_ni r3.xyzw, r3.xyzw
            dp4 r4.x, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, r3.xyzw, -r4.xxxx
            mad r2.xyzw, r2.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), -r4.xyzw
            ge r4.xy, r2.yyyy, r2.zwzz
            movc r4.zw, r4.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.x, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r2.xxxz, r2.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.yz, r4.zzwz, r6.yyzy
            add r4.yz, r4.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r5.w, r4.y
            add r7.w, r6.w, r4.z
            add r7.y, r4.x, r6.x
            dp3 r7.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r4.xyzw, r7.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r5.xyzw, r7.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r7.w, r7.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, r4.xyzw
            add r4.xyzw, r2.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r7.xy, r7.zzzz, r7.wwww, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r7.x, r7.x, l(255.000000)
            ftou r7.x, r7.x
            and r7.x, r7.x, l(31)
            dp4 r7.x, cb1[r7.x + 17].xyzw, r4.xyzw
            dp4 r4.x, r4.xyzw, r4.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mul r4.x, r7.x, r4.x
            div r7.xyzw, r3.xyzw, cb1[0].xxxx
            mad r4.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r7.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb1[r4.y + 17].xyzw, r2.xyzw
            dp4 r4.z, r2.xyzw, r2.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            mad r4.x, r4.z, r4.y, r4.x
            add r7.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r2.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r4.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r7.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb1[r4.y + 17].xyzw, r5.xyzw
            dp4 r4.z, r5.xyzw, r5.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            mad r4.x, r4.z, r4.y, r4.x
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r2.xyzw, -r6.xyzw
            add r2.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb1[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb1[r3.x + 17].xyzw, r2.xyzw
            dp4 r2.x, r2.xyzw, r2.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            div r5.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r2.yzyy, t0.xyzw, s0, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.y, cb1[r2.y + 17].xyzw, r6.xyzw
            dp4 r2.z, r6.xyzw, r6.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.xz, r2.xxzx, r2.xxzx
            mul r2.z, r2.z, r2.z
            mad r2.y, r2.z, r2.y, r4.x
            mad r2.x, r2.x, r3.x, r2.y
            mad r1.y, r2.x, l(3.375000), r1.w
            add r2.xyzw, r0.xyzw, r0.xyzw
            dp4 r1.w, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r1.wwww
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.w, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.wwww, r2.xyzw
            mad r3.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), -r3.xyzw
            ge r4.xy, r3.yyyy, r3.zwzz
            movc r4.zw, r4.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.xy, r4.zwzz, r6.yzyy
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.z, r5.w, r4.x
            add r7.w, r6.w, r4.y
            add r7.y, r1.w, r6.x
            dp3 r7.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r4.xyzw, r7.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r5.xyzw, r7.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r7.w, r7.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r7.xy, r7.zzzz, r7.wwww, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r7.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r1.w, cb1[r1.w + 17].xyzw, r4.xyzw
            dp4 r4.x, r4.xyzw, r4.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mul r1.w, r1.w, r4.x
            div r4.xyzw, r2.xyzw, cb1[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb1[r4.x + 17].xyzw, r3.xyzw
            dp4 r4.y, r3.xyzw, r3.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            mad r1.w, r4.y, r4.x, r1.w
            add r4.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r4.xyzw, r4.xyzw, cb1[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb1[r4.x + 17].xyzw, r5.xyzw
            dp4 r4.y, r5.xyzw, r5.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            mad r1.w, r4.y, r4.x, r1.w
            add r4.xyzw, r2.xyzw, r6.xyzw
            add r5.xyzw, r3.xyzw, -r6.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r3.xyzw
            dp4 r2.y, r3.xyzw, r3.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            div r3.xyzw, r4.xyzw, cb1[0].xxxx
            mad r2.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.z, cb1[r2.z + 17].xyzw, r5.xyzw
            dp4 r2.w, r5.xyzw, r5.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            mad r1.w, r2.w, r2.z, r1.w
            mad r1.w, r2.y, r2.x, r1.w
            mul r1.w, r1.w, l(13.500000)
            dp4 r2.x, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r0.xyzw, r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            add r3.xyzw, r0.xyzw, -r3.xyzw
            ge r4.xy, r3.yyyy, r3.zwzz
            movc r4.zw, r4.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.x, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.yz, r4.zzwz, r6.yyzy
            add r4.yz, r4.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r5.w, r4.y
            add r7.w, r6.w, r4.z
            add r7.y, r4.x, r6.x
            dp3 r7.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r4.xyzw, r7.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r5.xyzw, r7.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r7.w, r7.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r7.xy, r7.zzzz, r7.wwww, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r7.x, r7.x, l(255.000000)
            ftou r7.x, r7.x
            and r7.x, r7.x, l(31)
            dp4 r7.x, cb1[r7.x + 17].xyzw, r4.xyzw
            dp4 r4.x, r4.xyzw, r4.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mul r4.x, r7.x, r4.x
            div r7.xyzw, r2.xyzw, cb1[0].xxxx
            mad r4.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r7.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb1[r4.y + 17].xyzw, r3.xyzw
            dp4 r4.z, r3.xyzw, r3.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            mad r4.x, r4.z, r4.y, r4.x
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r4.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r7.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb1[r4.y + 17].xyzw, r5.xyzw
            dp4 r4.z, r5.xyzw, r5.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            mad r4.x, r4.z, r4.y, r4.x
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r3.xyzw
            dp4 r2.y, r3.xyzw, r3.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            div r3.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.z, cb1[r2.z + 17].xyzw, r6.xyzw
            dp4 r2.w, r6.xyzw, r6.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            mad r2.z, r2.w, r2.z, r4.x
            mad r2.x, r2.y, r2.x, r2.z
            mad r1.w, r2.x, l(27.000000), r1.w
            mul r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
            dp4 r2.x, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            mad r3.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r3.xyzw
            ge r4.xy, r3.yyyy, r3.zwzz
            movc r4.zw, r4.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.x, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.yz, r4.zzwz, r6.yyzy
            add r4.yz, r4.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r5.w, r4.y
            add r7.w, r6.w, r4.z
            add r7.y, r4.x, r6.x
            dp3 r7.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r4.xyzw, r7.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r5.xyzw, r7.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r7.w, r7.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r7.xy, r7.zzzz, r7.wwww, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r7.x, r7.x, l(255.000000)
            ftou r7.x, r7.x
            and r7.x, r7.x, l(31)
            dp4 r7.x, cb1[r7.x + 17].xyzw, r4.xyzw
            dp4 r4.x, r4.xyzw, r4.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mul r4.x, r7.x, r4.x
            div r7.xyzw, r2.xyzw, cb1[0].xxxx
            mad r4.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r7.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb1[r4.y + 17].xyzw, r3.xyzw
            dp4 r4.z, r3.xyzw, r3.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            mad r4.x, r4.z, r4.y, r4.x
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r7.xyzw, r7.xyzw, cb1[0].xxxx
            mad r4.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r7.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb1[r4.y + 17].xyzw, r5.xyzw
            dp4 r4.z, r5.xyzw, r5.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            mad r4.x, r4.z, r4.y, r4.x
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r3.xyzw
            dp4 r2.y, r3.xyzw, r3.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            div r3.xyzw, r5.xyzw, cb1[0].xxxx
            mad r2.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(31)
            dp4 r2.z, cb1[r2.z + 17].xyzw, r6.xyzw
            dp4 r2.w, r6.xyzw, r6.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            mad r2.z, r2.w, r2.z, r4.x
            mad r2.x, r2.y, r2.x, r2.z
            mad r1.w, r2.x, l(6.750000), r1.w
            mul r2.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000)
            dp4 r2.x, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            mad r0.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), -r3.xyzw
            ge r3.xy, r0.yyyy, r0.zwzz
            movc r3.zw, r3.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r3.x, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r0.xxxz, r0.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r3.yz, r3.zzwz, r5.yyzy
            add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r4.w, r3.y
            add r6.w, r5.w, r3.z
            add r6.y, r3.x, r5.x
            dp3 r6.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r3.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r4.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.w, r6.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, r3.xyzw
            add r3.xyzw, r0.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r6.xy, r6.zzzz, r6.wwww, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r6.x, r6.x, l(255.000000)
            ftou r6.x, r6.x
            and r6.x, r6.x, l(31)
            dp4 r6.x, cb1[r6.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mul r3.x, r6.x, r3.x
            div r6.xyzw, r2.xyzw, cb1[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb1[r3.y + 17].xyzw, r0.xyzw
            dp4 r3.z, r0.xyzw, r0.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r6.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r0.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r6.xyzw, r6.xyzw, cb1[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb1[r3.y + 17].xyzw, r4.xyzw
            dp4 r3.z, r4.xyzw, r4.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r4.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r0.xyzw, -r5.xyzw
            add r0.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb1[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb1[r2.x + 17].xyzw, r0.xyzw
            dp4 r0.x, r0.xyzw, r0.xyzw
            add r0.x, -r0.x, l(0.600000)
            max r0.x, r0.x, l(0.000000)
            mul r0.x, r0.x, r0.x
            div r4.xyzw, r4.xyzw, cb1[0].xxxx
            mad r0.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb1[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.xz, r0.xxzx, r0.xxzx
            mul r0.z, r0.z, r0.z
            mad r0.y, r0.z, r0.y, r3.x
            mad r0.x, r0.x, r2.x, r0.y
            mad r1.z, r0.x, l(3.375000), r1.w
            mad r0.xyz, r1.xyzx, l(0.053333, 0.053333, 0.053333, 0.000000), v0.xyzx
            mul r1.xyz, r0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000)
            dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, r0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r0.wwww
            round_ni r1.xyz, r1.xyzx
            dp3 r0.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.xyzx
            mad r2.xyz, r0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r5.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb1[r0.w + 1].xyzx, r4.xyzx
            dp3 r1.w, r4.xyzx, r4.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mul r0.w, r0.w, r1.w
            div r4.xyz, r1.xyzx, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r2.xyzx
            dp3 r2.w, r2.xyzx, r2.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r1.w, r0.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb1[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.x, cb1[r1.x + 1].xyzx, r2.xyzx
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r1.zw, r2.zzzz, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.z, cb1[r1.z + 1].xyzx, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.w, r1.w, r1.w
            mad r0.w, r1.w, r1.z, r0.w
            mad r0.w, r1.y, r1.x, r0.w
            mul r1.xyz, r0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000)
            dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, r0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), r1.xxxx
            round_ni r1.xyz, r1.xyzx
            dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r1.wwww, r1.xyzx
            mad r2.xyz, r0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r5.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r4.xyz, r1.xyzx, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r2.xyzx
            dp3 r3.w, r2.xyzx, r2.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb1[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r5.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r5.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.x, cb1[r1.x + 1].xyzx, r2.xyzx
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.z, cb1[r1.z + 1].xyzx, r3.xyzx
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r1.z, r2.x, r1.z, r1.w
            mad r1.x, r1.y, r1.x, r1.z
            mul r1.xy, r1.xxxx, l(16.000000, 32.000000, 0.000000, 0.000000)
            mad r0.w, r0.w, l(32.000000), r1.x
            mul r1.xzw, r0.xxyz, l(160.000000, 0.000000, 160.000000, 160.000000)
            dp3 r1.x, r1.xzwx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xzw, r0.xxyz, l(160.000000, 0.000000, 160.000000, 160.000000), r1.xxxx
            round_ni r1.xzw, r1.xxzw
            dp3 r2.x, r1.xzwx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, r1.xzwx, -r2.xxxx
            mad r2.xyz, r0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.xzwx, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r4.xyzx
            dp3 r3.w, r4.xyzx, r4.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r4.xyz, r1.xzwx, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r4.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r2.xyzx
            dp3 r4.x, r2.xyzx, r2.xyzx
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mad r2.w, r4.x, r3.w, r2.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.xzwx, r4.xyzx
            add r1.xzw, r1.xxzw, l(1.000000, 0.000000, 1.000000, 1.000000)
            div r1.xzw, r1.xxzw, cb1[0].xxxx
            add r1.xz, r1.wwww, r1.xxzx
            sample_l r5.xyzw, r1.xzxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r5.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.x, cb1[r1.x + 1].xyzx, r2.xyzx
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r4.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r1.w, r2.x, r1.w, r2.w
            mad r1.x, r1.z, r1.x, r1.w
            mad r0.w, r1.x, l(8.000000), r0.w
            mad r1.x, r1.x, l(16.000000), r1.y
            mad_sat r0.w, r0.w, l(0.571429), l(-0.500000)
            add r0.w, -r0.w, l(1.000000)
            mul r1.yzw, r0.xxyz, l(0.000000, 320.000000, 320.000000, 320.000000)
            dp3 r1.y, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, r0.xxyz, l(0.000000, 320.000000, 320.000000, 320.000000), r1.yyyy
            round_ni r1.yzw, r1.yyzw
            dp3 r2.x, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, r1.yzwy, -r2.xxxx
            mad r2.xyz, r0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r2.xyzx
            mul r0.xyz, r0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r1.yzwy, r5.xyzx
            div r5.xyz, r5.xyzx, cb1[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb1[r2.w + 1].xyzx, r4.xyzx
            dp3 r3.w, r4.xyzx, r4.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r4.xyz, r1.yzwy, cb1[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r4.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb1[r3.w + 1].xyzx, r2.xyzx
            dp3 r4.x, r2.xyzx, r2.xyzx
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mad r2.w, r4.x, r3.w, r2.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r1.yzwy, r4.xyzx
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb1[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r5.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r5.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb1[r1.y + 1].xyzx, r2.xyzx
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            div r2.xyz, r4.xyzx, cb1[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r4.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb1[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r1.w, r2.x, r1.w, r2.w
            mad r1.y, r1.z, r1.y, r1.w
            mad r1.x, r1.y, l(8.000000), r1.x
            mul r1.yz, r1.xxxx, l(0.000000, 0.000057, 0.000571, 0.000000)
            mad r0.w, r0.w, l(0.010000), r1.y
            mad r0.w, -r1.x, l(0.000571), r0.w
            round_ni r1.x, r0.y
            ftou r1.x, |r1.x|
            and r1.x, r1.x, l(1)
            utof r1.x, r1.x
            mad r0.xyz, r1.xxxx, l(0.500000, 0.000000, 0.500000, 0.000000), r0.xyzx
            round_pi r1.xyw, r0.xyxz
            add r1.xyw, r0.xyxz, -r1.xyxw
            add r1.xyw, -|r1.xyxw|, l(0.070000, 0.070000, 0.000000, 0.070000)
            max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r1.x, r1.xywx, r1.xywx
            round_ni r2.xyz, r0.xyzx
            add r0.xyz, r0.xyzx, -r2.xyzx
            add r0.xyz, -|r0.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r1.x
            mul r0.x, r0.x, l(500.000000)
            min r0.x, r0.x, l(1.000000)
            log r0.y, r0.x
            mul r0.y, r0.y, l(16.000000)
            exp r0.y, r0.y
            add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            mad r0.y, r0.y, r0.w, r1.z
            add r0.x, r0.x, r0.y
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad o0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 1557 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 13
            mul r0.xyz, v0.xyzx, l(1.950000, 1.950000, 1.950000, 0.000000)
            mul r0.w, cb0[2].x, l(0.100000)
            dp4 r1.x, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r1.xyzw, r0.xyzw, r1.xxxx
            round_ni r1.xyzw, r1.xyzw
            dp4 r2.x, r1.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r2.xyzw, r1.xyzw, -r2.xxxx
            add r2.xyzw, r0.xyzw, -r2.xyzw
            ge r3.xyzw, r2.xxxz, r2.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r4.xy, r2.yyyy, r2.zwzz
            and r6.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.z, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r3.x, r4.z
            movc r4.xy, r4.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r3.xy, r3.yzyy, r4.xyxx
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.z, r4.w, r3.x
            add r3.w, r3.w, r3.y
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r2.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r2.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r1.xyzw, cb2[0].xxxx
            mad r10.xy, r10.zzzz, r10.wwww, r10.xyxx
            sample_l r10.xyzw, r10.xyxx, t1.xyzw, s1, l(0.000000)
            mul r10.x, r10.x, l(255.000000)
            ftou r10.x, r10.x
            and r10.x, r10.x, l(31)
            dp4 r10.y, r2.xyzw, r2.xyzw
            add r10.y, -r10.y, l(0.600000)
            max r10.y, r10.y, l(0.000000)
            mul r10.y, r10.y, r10.y
            mul r10.y, r10.y, r10.y
            dp4 r2.x, cb2[r10.x + 17].xyzw, r2.xyzw
            add r3.xyzw, r1.xyzw, r3.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r6.xyzw, r6.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r6.xyzw
            mul r2.y, r2.y, r2.z
            mad r2.x, r10.y, r2.x, r2.y
            add r3.xyzw, r1.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r7.xyzw, r7.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r7.xyzw
            mad r2.x, r2.z, r2.y, r2.x
            add r3.xyzw, r1.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r8.xyzw, r8.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r8.xyzw
            mad r2.x, r2.z, r2.y, r2.x
            add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r9.xyzw, r9.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r9.xyzw
            mad r1.x, r1.y, r1.x, r2.x
            mov r2.xyz, v0.xyzx
            mov r2.w, cb0[2].x
            mul r3.xyzw, r2.xyzw, l(3.900000, 3.900000, 3.900000, 0.200000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(3.900000, 3.900000, 3.900000, 0.200000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r2.xyzw, l(3.900000, 3.900000, 3.900000, 0.200000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r4.yyyy, r4.zzwz
            and r6.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r5.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r1.y
            add r5.w, r5.w, r1.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r12.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r4.xyzw, r4.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r4.x, r8.xyzw, r8.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r8.xyzw
            mul r1.w, r1.w, r4.x
            mad r1.y, r1.z, r1.y, r1.w
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r11.xyzw, r11.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r11.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mul r1.y, r1.y, l(13.500000)
            mad r1.x, r1.x, l(27.000000), r1.y
            mul r3.xyzw, r2.xyzw, l(7.800000, 7.800000, 7.800000, 0.400000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(7.800000, 7.800000, 7.800000, 0.400000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r2.xyzw, l(7.800000, 7.800000, 7.800000, 0.400000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r4.yyyy, r4.zzwz
            and r6.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r5.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r1.y
            add r5.w, r5.w, r1.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r12.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r4.xyzw, r4.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r4.x, r8.xyzw, r8.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r8.xyzw
            mul r1.w, r1.w, r4.x
            mad r1.y, r1.z, r1.y, r1.w
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r11.xyzw, r11.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r11.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(6.750000), r1.x
            mul r3.xyzw, r2.xyzw, l(15.600000, 15.600000, 15.600000, 0.800000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(15.600000, 15.600000, 15.600000, 0.800000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r2.xyzw, r2.xyzw, l(15.600000, 15.600000, 15.600000, 0.800000), -r4.xyzw
            ge r4.xyzw, r2.xxxz, r2.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r2.yyyy, r2.zzwz
            and r5.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r4.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r5.w, r1.y
            add r4.w, r4.w, r1.z
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r2.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r2.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r11.zzzz, r11.wwww, r11.xxyx
            sample_l r11.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r11.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r2.xyzw, r2.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r2.xyzw
            add r2.xyzw, r3.xyzw, r4.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r2.x, r7.xyzw, r7.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r7.xyzw
            mul r1.w, r1.w, r2.x
            mad r1.y, r1.z, r1.y, r1.w
            add r2.xyzw, r3.xyzw, r6.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r8.xyzw, r8.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r8.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r2.xyzw, r3.xyzw, r5.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r2.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(3.375000), r1.x
            add r2.xyzw, r0.xyzw, l(12.000000, 0.000000, -8.000000, 0.000000)
            dp4 r1.w, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r3.xyzw, r1.wwww, r2.xyzw
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.wwww, r3.xyzw
            add r4.xyzw, r2.xyzw, -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r6.xy, r4.yyyy, r4.zwzz
            and r8.xy, r6.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r6.xy, r6.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r5.xy, r5.yzyy, r6.xyxx
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.z, r6.w, r5.x
            add r5.w, r5.w, r5.y
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r12.xy, r12.zzzz, r12.wwww, r12.xyxx
            sample_l r12.xyzw, r12.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r12.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r12.x, r4.xyzw, r4.xyzw
            add r12.x, -r12.x, l(0.600000)
            max r12.x, r12.x, l(0.000000)
            mul r12.x, r12.x, r12.x
            mul r12.x, r12.x, r12.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r8.xyzw, r8.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r8.xyzw
            mul r4.x, r4.x, r4.y
            mad r1.w, r12.x, r1.w, r4.x
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r9.xyzw, r9.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r9.xyzw
            mad r1.w, r4.y, r4.x, r1.w
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r10.xyzw, r10.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r10.xyzw
            mad r1.w, r4.y, r4.x, r1.w
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r11.xyzw, r11.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r11.xyzw
            mad r1.w, r3.y, r3.x, r1.w
            add r3.xyzw, r2.xyzw, r2.xyzw
            dp4 r3.x, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xxxx
            round_ni r3.xyzw, r3.xyzw
            dp4 r4.x, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, r3.xyzw, -r4.xxxx
            mad r4.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r6.xy, r4.yyyy, r4.zwzz
            and r8.xy, r6.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r6.z, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r5.x, r6.z
            movc r6.xy, r6.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r5.xy, r5.yzyy, r6.xyxx
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.z, r6.w, r5.x
            add r5.w, r5.w, r5.y
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r12.xy, r12.zzzz, r12.wwww, r12.xyxx
            sample_l r12.xyzw, r12.xyxx, t1.xyzw, s1, l(0.000000)
            mul r12.x, r12.x, l(255.000000)
            ftou r12.x, r12.x
            and r12.x, r12.x, l(31)
            dp4 r12.y, r4.xyzw, r4.xyzw
            add r12.y, -r12.y, l(0.600000)
            max r12.y, r12.y, l(0.000000)
            mul r12.y, r12.y, r12.y
            mul r12.y, r12.y, r12.y
            dp4 r4.x, cb2[r12.x + 17].xyzw, r4.xyzw
            add r5.xyzw, r3.xyzw, r5.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r4.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r4.yzyy, t1.xyzw, s1, l(0.000000)
            mul r4.y, r5.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.z, r8.xyzw, r8.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            dp4 r4.y, cb2[r4.y + 17].xyzw, r8.xyzw
            mul r4.y, r4.y, r4.z
            mad r4.x, r12.y, r4.x, r4.y
            add r5.xyzw, r3.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r4.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r4.yzyy, t1.xyzw, s1, l(0.000000)
            mul r4.y, r5.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.z, r9.xyzw, r9.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            dp4 r4.y, cb2[r4.y + 17].xyzw, r9.xyzw
            mad r4.x, r4.z, r4.y, r4.x
            add r5.xyzw, r3.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r4.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r4.yzyy, t1.xyzw, s1, l(0.000000)
            mul r4.y, r5.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.z, r10.xyzw, r10.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            dp4 r4.y, cb2[r4.y + 17].xyzw, r10.xyzw
            mad r4.x, r4.z, r4.y, r4.x
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r11.xyzw, r11.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r11.xyzw
            mad r3.x, r3.y, r3.x, r4.x
            mul r3.x, r3.x, l(13.500000)
            mad r1.w, r1.w, l(27.000000), r3.x
            mul r3.xyzw, r2.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
            dp4 r3.x, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), r3.xxxx
            round_ni r3.xyzw, r3.xyzw
            dp4 r4.x, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, r3.xyzw, -r4.xxxx
            mad r4.xyzw, r2.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r6.xy, r4.yyyy, r4.zwzz
            and r8.xy, r6.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r6.z, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r5.x, r6.z
            movc r6.xy, r6.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r5.xy, r5.yzyy, r6.xyxx
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.z, r6.w, r5.x
            add r5.w, r5.w, r5.y
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r12.xy, r12.zzzz, r12.wwww, r12.xyxx
            sample_l r12.xyzw, r12.xyxx, t1.xyzw, s1, l(0.000000)
            mul r12.x, r12.x, l(255.000000)
            ftou r12.x, r12.x
            and r12.x, r12.x, l(31)
            dp4 r12.y, r4.xyzw, r4.xyzw
            add r12.y, -r12.y, l(0.600000)
            max r12.y, r12.y, l(0.000000)
            mul r12.y, r12.y, r12.y
            mul r12.y, r12.y, r12.y
            dp4 r4.x, cb2[r12.x + 17].xyzw, r4.xyzw
            add r5.xyzw, r3.xyzw, r5.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r4.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r4.yzyy, t1.xyzw, s1, l(0.000000)
            mul r4.y, r5.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.z, r8.xyzw, r8.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            dp4 r4.y, cb2[r4.y + 17].xyzw, r8.xyzw
            mul r4.y, r4.y, r4.z
            mad r4.x, r12.y, r4.x, r4.y
            add r5.xyzw, r3.xyzw, r7.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r4.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r4.yzyy, t1.xyzw, s1, l(0.000000)
            mul r4.y, r5.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.z, r9.xyzw, r9.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            dp4 r4.y, cb2[r4.y + 17].xyzw, r9.xyzw
            mad r4.x, r4.z, r4.y, r4.x
            add r5.xyzw, r3.xyzw, r6.xyzw
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r4.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r4.yzyy, t1.xyzw, s1, l(0.000000)
            mul r4.y, r5.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.z, r10.xyzw, r10.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.z, r4.z, r4.z
            mul r4.z, r4.z, r4.z
            dp4 r4.y, cb2[r4.y + 17].xyzw, r10.xyzw
            mad r4.x, r4.z, r4.y, r4.x
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r11.xyzw, r11.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r11.xyzw
            mad r3.x, r3.y, r3.x, r4.x
            mad r1.w, r3.x, l(6.750000), r1.w
            mul r3.xyzw, r2.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000)
            dp4 r3.x, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r2.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), r3.xxxx
            round_ni r3.xyzw, r3.xyzw
            dp4 r4.x, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, r3.xyzw, -r4.xxxx
            mad r2.xyzw, r2.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), -r4.xyzw
            ge r4.xyzw, r2.xxxz, r2.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r2.yyyy, r2.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.z, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r4.x, r5.z
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r2.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r2.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r11.x, r11.x, l(255.000000)
            ftou r11.x, r11.x
            and r11.x, r11.x, l(31)
            dp4 r11.y, r2.xyzw, r2.xyzw
            add r11.y, -r11.y, l(0.600000)
            max r11.y, r11.y, l(0.000000)
            mul r11.y, r11.y, r11.y
            mul r11.y, r11.y, r11.y
            dp4 r2.x, cb2[r11.x + 17].xyzw, r2.xyzw
            add r4.xyzw, r3.xyzw, r4.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r7.xyzw, r7.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r7.xyzw
            mul r2.y, r2.y, r2.z
            mad r2.x, r11.y, r2.x, r2.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r8.xyzw, r8.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r8.xyzw
            mad r2.x, r2.z, r2.y, r2.x
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r2.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r4.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r9.xyzw, r9.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r9.xyzw
            mad r2.x, r2.z, r2.y, r2.x
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r2.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r3.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(31)
            dp4 r2.z, r10.xyzw, r10.xyzw
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp4 r2.y, cb2[r2.y + 17].xyzw, r10.xyzw
            mad r2.x, r2.z, r2.y, r2.x
            mad r1.y, r2.x, l(3.375000), r1.w
            add r0.xyzw, r0.xyzw, l(12.000000, -23.000000, 14.000000, 0.000000)
            dp4 r1.w, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r0.xyzw, r1.wwww
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.w, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.wwww, r2.xyzw
            add r3.xyzw, r0.xyzw, -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r3.yyyy, r3.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r11.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r11.x, r3.xyzw, r3.xyzw
            add r11.x, -r11.x, l(0.600000)
            max r11.x, r11.x, l(0.000000)
            mul r11.x, r11.x, r11.x
            mul r11.x, r11.x, r11.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r7.xyzw, r7.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r7.xyzw
            mul r3.x, r3.x, r3.y
            mad r1.w, r11.x, r1.w, r3.x
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r8.xyzw, r8.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r8.xyzw
            mad r1.w, r3.y, r3.x, r1.w
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r9.xyzw, r9.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r9.xyzw
            mad r1.w, r3.y, r3.x, r1.w
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r10.xyzw, r10.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r10.xyzw
            mad r1.w, r2.y, r2.x, r1.w
            add r2.xyzw, r0.xyzw, r0.xyzw
            dp4 r2.x, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            mad r3.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r3.yyyy, r3.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.z, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r4.x, r5.z
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r11.x, r11.x, l(255.000000)
            ftou r11.x, r11.x
            and r11.x, r11.x, l(31)
            dp4 r11.y, r3.xyzw, r3.xyzw
            add r11.y, -r11.y, l(0.600000)
            max r11.y, r11.y, l(0.000000)
            mul r11.y, r11.y, r11.y
            mul r11.y, r11.y, r11.y
            dp4 r3.x, cb2[r11.x + 17].xyzw, r3.xyzw
            add r4.xyzw, r2.xyzw, r4.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.z, r7.xyzw, r7.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp4 r3.y, cb2[r3.y + 17].xyzw, r7.xyzw
            mul r3.y, r3.y, r3.z
            mad r3.x, r11.y, r3.x, r3.y
            add r4.xyzw, r2.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.z, r8.xyzw, r8.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp4 r3.y, cb2[r3.y + 17].xyzw, r8.xyzw
            mad r3.x, r3.z, r3.y, r3.x
            add r4.xyzw, r2.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.z, r9.xyzw, r9.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp4 r3.y, cb2[r3.y + 17].xyzw, r9.xyzw
            mad r3.x, r3.z, r3.y, r3.x
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r10.xyzw, r10.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r10.xyzw
            mad r2.x, r2.y, r2.x, r3.x
            mul r2.x, r2.x, l(13.500000)
            mad r1.w, r1.w, l(27.000000), r2.x
            mul r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
            dp4 r2.x, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            mad r3.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r3.yyyy, r3.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.z, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r4.x, r5.z
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r11.x, r11.x, l(255.000000)
            ftou r11.x, r11.x
            and r11.x, r11.x, l(31)
            dp4 r11.y, r3.xyzw, r3.xyzw
            add r11.y, -r11.y, l(0.600000)
            max r11.y, r11.y, l(0.000000)
            mul r11.y, r11.y, r11.y
            mul r11.y, r11.y, r11.y
            dp4 r3.x, cb2[r11.x + 17].xyzw, r3.xyzw
            add r4.xyzw, r2.xyzw, r4.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.z, r7.xyzw, r7.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp4 r3.y, cb2[r3.y + 17].xyzw, r7.xyzw
            mul r3.y, r3.y, r3.z
            mad r3.x, r11.y, r3.x, r3.y
            add r4.xyzw, r2.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.z, r8.xyzw, r8.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp4 r3.y, cb2[r3.y + 17].xyzw, r8.xyzw
            mad r3.x, r3.z, r3.y, r3.x
            add r4.xyzw, r2.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t1.xyzw, s1, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.z, r9.xyzw, r9.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            dp4 r3.y, cb2[r3.y + 17].xyzw, r9.xyzw
            mad r3.x, r3.z, r3.y, r3.x
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r10.xyzw, r10.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r10.xyzw
            mad r2.x, r2.y, r2.x, r3.x
            mad r1.w, r2.x, l(6.750000), r1.w
            mul r2.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000)
            dp4 r2.x, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            mad r0.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000), -r3.xyzw
            ge r3.xyzw, r0.xxxz, r0.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r4.xy, r0.yyyy, r0.zwzz
            and r6.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.z, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r3.x, r4.z
            movc r4.xy, r4.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r3.xy, r3.yzyy, r4.xyxx
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.z, r4.w, r3.x
            add r3.w, r3.w, r3.y
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r0.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r0.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r0.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r2.xyzw, cb2[0].xxxx
            mad r10.xy, r10.zzzz, r10.wwww, r10.xyxx
            sample_l r10.xyzw, r10.xyxx, t1.xyzw, s1, l(0.000000)
            mul r10.x, r10.x, l(255.000000)
            ftou r10.x, r10.x
            and r10.x, r10.x, l(31)
            dp4 r10.y, r0.xyzw, r0.xyzw
            add r10.y, -r10.y, l(0.600000)
            max r10.y, r10.y, l(0.000000)
            mul r10.y, r10.y, r10.y
            mul r10.y, r10.y, r10.y
            dp4 r0.x, cb2[r10.x + 17].xyzw, r0.xyzw
            add r3.xyzw, r2.xyzw, r3.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r6.xyzw, r6.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r6.xyzw
            mul r0.y, r0.y, r0.z
            mad r0.x, r10.y, r0.x, r0.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r7.xyzw, r7.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r7.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r8.xyzw, r8.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r8.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.yz, r2.zzzz, r2.wwww, r2.xxyx
            sample_l r2.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r2.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r9.xyzw, r9.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r9.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            mad r1.z, r0.x, l(3.375000), r1.w
            mad r0.xyz, r1.xyzx, l(0.053333, 0.053333, 0.053333, 0.000000), v0.xyzx
            mul r1.xyz, r0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_ni r0.w, r1.y
            ftou r0.w, |r0.w|
            and r0.w, r0.w, l(1)
            utof r0.w, r0.w
            mad r1.xyz, r0.wwww, l(0.500000, 0.000000, 0.500000, 0.000000), r1.xyzx
            round_pi r2.xyz, r1.xyzx
            round_ni r3.xyz, r1.xyzx
            add r2.xyz, r1.xyzx, -r2.xyzx
            add r1.xyz, r1.xyzx, -r3.xyzx
            add r2.xyz, -|r2.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r2.xyzx, r2.xyzx
            dp3 r1.x, r1.xyzx, r1.xyzx
            add r0.w, r0.w, r1.x
            mul r0.w, r0.w, l(500.000000)
            min r0.w, r0.w, l(1.000000)
            log r1.x, r0.w
            mul r1.x, r1.x, l(16.000000)
            exp r1.x, r1.x
            mul r1.yzw, r0.xxyz, l(0.000000, 40.000000, 40.000000, 40.000000)
            dp3 r1.y, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, r0.xxyz, l(0.000000, 40.000000, 40.000000, 40.000000), r1.yyyy
            round_ni r1.yzw, r1.yyzw
            dp3 r2.x, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, r1.yzwy, -r2.xxxx
            mad r2.xyz, r0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r2.xyzx
            ge r4.xyz, r2.xyzx, r2.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.yzwy, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r9.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.w, r2.xyzx, r2.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            dp3 r2.x, cb2[r2.w + 1].xyzx, r2.xyzx
            add r2.yzw, r1.yyzw, r6.xxyz
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r6.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r6.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(15)
            dp3 r2.z, r5.xyzx, r5.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp3 r2.y, cb2[r2.y + 1].xyzx, r5.xyzx
            mul r2.y, r2.y, r2.z
            mad r2.x, r3.w, r2.x, r2.y
            add r2.yzw, r1.yyzw, r7.xxyz
            div r2.yzw, r2.yyzw, cb2[0].xxxx
            add r2.yz, r2.wwww, r2.yyzy
            sample_l r5.xyzw, r2.yzyy, t1.xyzw, s1, l(0.000000)
            mul r2.y, r5.x, l(255.000000)
            ftou r2.y, r2.y
            and r2.y, r2.y, l(15)
            dp3 r2.z, r4.xyzx, r4.xyzx
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.z, r2.z, r2.z
            mul r2.z, r2.z, r2.z
            dp3 r2.y, cb2[r2.y + 1].xyzx, r4.xyzx
            mad r2.x, r2.z, r2.y, r2.x
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r4.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r4.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r8.xyzx, r8.xyzx
            add r1.xz, -r1.xxzx, l(1.000000, 0.000000, 0.600000, 0.000000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r8.xyzx
            mad r1.y, r1.z, r1.y, r2.x
            mul r2.xyz, r0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000)
            dp3 r1.z, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), r1.zzzz
            round_ni r2.xyz, r2.xyzx
            dp3 r1.z, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r1.zzzz, r2.xyzx
            mad r4.xyz, r0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r8.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r9.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r10.xyz, r2.xyzx, cb2[0].xxxx
            add r1.zw, r10.zzzz, r10.xxxy
            sample_l r10.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r10.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(15)
            dp3 r1.w, r4.xyzx, r4.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.z, cb2[r1.z + 1].xyzx, r4.xyzx
            add r4.xyz, r2.xyzx, r7.xyzx
            div r4.xyz, r4.xyzx, cb2[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.w, r6.xyzx, r6.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            dp3 r2.w, cb2[r2.w + 1].xyzx, r6.xyzx
            mul r2.w, r2.w, r3.w
            mad r1.z, r1.w, r1.z, r2.w
            add r4.xyz, r2.xyzx, r8.xyzx
            div r4.xyz, r4.xyzx, cb2[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            mad r1.z, r2.w, r1.w, r1.z
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r9.xyzx, r9.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r9.xyzx
            mad r1.z, r2.x, r1.w, r1.z
            mul r1.w, r1.z, l(16.000000)
            mad r1.y, r1.y, l(32.000000), r1.w
            mul r2.xyz, r0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000)
            dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), r1.wwww
            round_ni r2.xyz, r2.xyzx
            dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r1.wwww, r2.xyzx
            mad r4.xyz, r0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r4.xyzx
            ge r5.xyz, r4.xyzx, r4.yzxy
            and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r6.xyz, r5.zxyz, r5.xyzx
            and r7.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r5.xyz, r5.xyzx, r5.zxyz
            and r8.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r6.xyz, r6.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r6.xyz, r4.xyzx, r6.xyzx
            add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r4.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r9.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r10.xyz, r2.xyzx, cb2[0].xxxx
            add r10.xy, r10.zzzz, r10.xyxx
            sample_l r10.xyzw, r10.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r10.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            add r4.xyz, r2.xyzx, r7.xyzx
            div r4.xyz, r4.xyzx, cb2[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.w, r4.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r4.x, r6.xyzx, r6.xyzx
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp3 r3.w, cb2[r3.w + 1].xyzx, r6.xyzx
            mul r3.w, r3.w, r4.x
            mad r1.w, r2.w, r1.w, r3.w
            add r4.xyz, r2.xyzx, r8.xyzx
            div r4.xyz, r4.xyzx, cb2[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            mad r1.w, r3.w, r2.w, r1.w
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r9.xyzx, r9.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r9.xyzx
            mad r1.w, r2.y, r2.x, r1.w
            mad r1.y, r1.w, l(8.000000), r1.y
            mad_sat r1.y, r1.y, l(0.571429), l(-0.500000)
            add r1.y, -r1.y, l(1.000000)
            if_nz cb1[3].y
              mul r1.w, r1.w, l(16.000000)
              mad r1.z, r1.z, l(32.000000), r1.w
              mul r2.xyz, r0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
              dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              mad r2.xyz, r0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r1.wwww
              round_ni r2.xyz, r2.xyzx
              dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              add r4.xyz, -r1.wwww, r2.xyzx
              mad r0.xyz, r0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r4.xyzx
              ge r4.xyz, r0.xyzx, r0.yzxy
              and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              lt r5.xyz, r4.zxyz, r4.xyzx
              and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              ge r4.xyz, r4.xyzx, r4.zxyz
              and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r5.xyz, r0.xyzx, r5.xyzx
              add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r4.xyz, r0.xyzx, r4.xyzx
              add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              add r8.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
              div r9.xyz, r2.xyzx, cb2[0].xxxx
              add r9.xy, r9.zzzz, r9.xyxx
              sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
              mul r1.w, r9.x, l(255.000000)
              ftou r1.w, r1.w
              and r1.w, r1.w, l(15)
              dp3 r2.w, r0.xyzx, r0.xyzx
              add r2.w, -r2.w, l(0.600000)
              max r2.w, r2.w, l(0.000000)
              mul r2.w, r2.w, r2.w
              mul r2.w, r2.w, r2.w
              dp3 r0.x, cb2[r1.w + 1].xyzx, r0.xyzx
              add r6.xyz, r2.xyzx, r6.xyzx
              div r6.xyz, r6.xyzx, cb2[0].xxxx
              add r0.yz, r6.zzzz, r6.xxyx
              sample_l r6.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
              mul r0.y, r6.x, l(255.000000)
              ftou r0.y, r0.y
              and r0.y, r0.y, l(15)
              dp3 r0.z, r5.xyzx, r5.xyzx
              add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 0.600000, 1.000000)
              max r0.z, r0.z, l(0.000000)
              mul r0.z, r0.z, r0.z
              mul r0.z, r0.z, r0.z
              dp3 r0.y, cb2[r0.y + 1].xyzx, r5.xyzx
              mul r0.y, r0.y, r0.z
              mad r0.x, r2.w, r0.x, r0.y
              add r5.xyz, r2.xyzx, r7.xyzx
              div r5.xyz, r5.xyzx, cb2[0].xxxx
              add r0.yz, r5.zzzz, r5.xxyx
              sample_l r5.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
              mul r0.y, r5.x, l(255.000000)
              ftou r0.y, r0.y
              and r0.y, r0.y, l(15)
              dp3 r0.z, r4.xyzx, r4.xyzx
              add r0.z, -r0.z, l(0.600000)
              max r0.z, r0.z, l(0.000000)
              mul r0.z, r0.z, r0.z
              mul r0.z, r0.z, r0.z
              dp3 r0.y, cb2[r0.y + 1].xyzx, r4.xyzx
              mad r0.x, r0.z, r0.y, r0.x
              add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
              div r2.xyz, r2.xyzx, cb2[0].xxxx
              add r0.yz, r2.zzzz, r2.xxyx
              sample_l r2.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
              mul r0.y, r2.x, l(255.000000)
              ftou r0.y, r0.y
              and r0.y, r0.y, l(15)
              dp3 r0.z, r8.xyzx, r8.xyzx
              add r0.z, -r0.z, l(0.600000)
              max r0.z, r0.z, l(0.000000)
              mul r0.z, r0.z, r0.z
              mul r0.z, r0.z, r0.z
              dp3 r0.y, cb2[r0.y + 1].xyzx, r8.xyzx
              mad r0.x, r0.z, r0.y, r0.x
              mad r0.x, r0.x, l(8.000000), r1.z
              mul r0.yz, r0.xxxx, l(0.000000, 0.000057, 0.000571, 0.000000)
              mad r0.y, r1.y, l(0.010000), r0.y
              mad r0.x, -r0.x, l(0.000571), r0.y
              mad r0.x, r1.x, r0.x, r0.z
              add r0.x, r0.w, r0.x
              mul r0.xyz, r0.xxxx, v2.yzxy
              mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.yzxy
              deriv_rtx r2.xyz, r0.yzxy
              deriv_rty r0.xyz, r0.xyzx
              mul r4.xyz, r0.xyzx, r2.xyzx
              mad r0.xyz, r2.zxyz, r0.yzxy, -r4.xyzx
              dp3 r0.w, r0.xyzx, r0.xyzx
              rsq r0.w, r0.w
              mul r0.xyz, r0.wwww, r0.xyzx
            else 
              div r1.zw, v4.xxxy, cb0[16].xxxy
              sample_l r0.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.x, r0.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.100000)
            mul r0.yzw, r3.xxyz, l(0.000000, 0.003922, 0.003922, 0.039216)
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r2.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            log r0.y, r1.y
            mul r0.y, r0.y, l(16.000000)
            exp r0.y, r0.y
            mad r2.xyzw, r2.xxxx, l(0.450000, -0.010000, 0.040000, 0.000000), l(-0.150000, -0.270000, -0.290000, 0.000000)
            mad r2.xyzw, r0.yyyy, r2.xyzw, l(-0.300000, -0.400000, -0.400000, 0.000000)
            mad r1.xyzw, r1.xxxx, r2.xyzw, l(0.700000, 0.700000, 0.700000, 1.000000)
            mul o0.xyzw, r0.xxxx, r1.xyzw
            ret 
            // Approximately 1602 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderBlocksDestroyed
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_immediateConstantBuffer { { 1.000000, 0.700000, -1.000000, 0.800000},
                                          { -0.500000, 0, -1.000000, 0.600000} }
            dcl_constantbuffer CB0[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 9
            dp3 r0.x, v0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r0.xyz, r0.xxxx, v0.xyzx
            round_ni r0.xyz, r0.xyzx
            dp3 r0.w, r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, -r0.wwww, r0.xyzx
            add r1.xyz, -r1.xyzx, v0.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.xyzx, cb0[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r7.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r1.xyzx, r1.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb0[r0.w + 1].xyzx, r1.xyzx
            add r1.xyz, r0.xyzx, r4.xyzx
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r4.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r4.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r3.xyzx, r3.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb0[r1.x + 1].xyzx, r3.xyzx
            mul r1.x, r1.x, r1.y
            mad r0.w, r1.w, r0.w, r1.x
            add r1.xyz, r0.xyzx, r5.xyzx
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb0[r1.x + 1].xyzx, r2.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r0.xyzx, cb0[0].xxxx
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r1.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.x, r1.x, l(255.000000)
            ftou r0.x, r0.x
            and r0.x, r0.x, l(15)
            dp3 r0.y, r6.xyzx, r6.xyzx
            add r0.y, -r0.y, l(0.600000)
            max r0.y, r0.y, l(0.000000)
            mul r0.y, r0.y, r0.y
            mul r0.y, r0.y, r0.y
            dp3 r0.x, cb0[r0.x + 1].xyzx, r6.xyzx
            mad r0.x, r0.y, r0.x, r0.w
            mul r0.yzw, v0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.yzwy, cb0[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r7.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.x, cb0[r1.w + 1].xyzx, r1.xyzx
            add r1.yzw, r0.yyzw, r4.xxyz
            div r1.yzw, r1.yyzw, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r4.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r4.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb0[r1.y + 1].xyzx, r3.xyzx
            mul r1.y, r1.y, r1.z
            mad r1.x, r2.w, r1.x, r1.y
            add r1.yzw, r0.yyzw, r5.xxyz
            div r1.yzw, r1.yyzw, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r3.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb0[r1.y + 1].xyzx, r2.xyzx
            mad r1.x, r1.z, r1.y, r1.x
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r2.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r2.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.z, r6.xyzx, r6.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp3 r0.y, cb0[r0.y + 1].xyzx, r6.xyzx
            mad r0.y, r0.z, r0.y, r1.x
            mul r0.y, r0.y, l(19.200001)
            mad r0.x, r0.x, l(32.000000), r0.y
            mul r0.yzw, v0.xxyz, l(0.000000, 16.000000, 16.000000, 16.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 16.000000, 16.000000, 16.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.yzwy, cb0[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r7.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.x, cb0[r1.w + 1].xyzx, r1.xyzx
            add r1.yzw, r0.yyzw, r4.xxyz
            div r1.yzw, r1.yyzw, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r4.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r4.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb0[r1.y + 1].xyzx, r3.xyzx
            mul r1.y, r1.y, r1.z
            mad r1.x, r2.w, r1.x, r1.y
            add r1.yzw, r0.yyzw, r5.xxyz
            div r1.yzw, r1.yyzw, cb0[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r3.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb0[r1.y + 1].xyzx, r2.xyzx
            mad r1.x, r1.z, r1.y, r1.x
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r2.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r2.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.z, r6.xyzx, r6.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp3 r0.y, cb0[r0.y + 1].xyzx, r6.xyzx
            mad r0.y, r0.z, r0.y, r1.x
            mad r0.x, r0.y, l(11.520000), r0.x
            mov r1.z, l(-1.000000)
            mov r0.y, l(0)
            loop 
              uge r0.z, r0.y, l(2)
              breakc_nz r0.z
              mov r1.xy, icb[r0.y + 0].xyxx
              add r1.xyw, -r1.xyxz, v0.xyxz
              dp3 r0.z, r1.xywx, r1.xywx
              mad r0.z, r0.x, l(0.153061), r0.z
              mul r0.w, icb[r0.y + 0].w, icb[r0.y + 0].w
              lt r0.z, r0.z, r0.w
              discard_nz r0.z
              iadd r0.y, r0.y, l(1)
            endloop 
            mul r0.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_ni r0.w, r0.y
            ftou r0.w, |r0.w|
            and r0.w, r0.w, l(1)
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.500000, 0.000000, 0.500000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            round_ni r2.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r0.xyz, r0.xyzx, -r2.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r0.xyz, -|r0.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(500.000000)
            min r0.x, r0.x, l(1.000000)
            log r0.y, r0.x
            mul r0.y, r0.y, l(16.000000)
            exp r0.y, r0.y
            mul r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000)
            dp3 r0.z, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r0.zzzz
            round_ni r1.xyz, r1.xyzx
            dp3 r0.z, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.zzzz, r1.xyzx
            mad r2.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.xyzx, cb0[0].xxxx
            add r0.zw, r8.zzzz, r8.xxxy
            sample_l r8.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r8.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.w, r2.xyzx, r2.xyzx
            add r0.xyw, -r0.xyxw, l(1.000000, 1.000000, 0.000000, 0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp3 r0.z, cb0[r0.z + 1].xyzx, r2.xyzx
            add r2.xyz, r1.xyzx, r5.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r4.xyzx, r4.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb0[r1.w + 1].xyzx, r4.xyzx
            mul r1.w, r1.w, r2.x
            mad r0.z, r0.w, r0.z, r1.w
            add r2.xyz, r1.xyzx, r6.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb0[r0.w + 1].xyzx, r3.xyzx
            mad r0.z, r1.w, r0.w, r0.z
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.x, r7.xyzx, r7.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp3 r0.w, cb0[r0.w + 1].xyzx, r7.xyzx
            mad r0.z, r1.x, r0.w, r0.z
            mul r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000)
            dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), r0.wwww
            round_ni r1.xyz, r1.xyzx
            dp3 r0.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.xyzx
            mad r2.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.xyzx, cb0[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r2.xyzx, r2.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            add r2.xyz, r1.xyzx, r5.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb0[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r0.w, r1.w, r0.w, r2.x
            add r2.xyz, r1.xyzx, r6.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r2.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r1.w, cb0[r1.w + 1].xyzx, r3.xyzx
            mad r0.w, r2.x, r1.w, r0.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r7.xyzx, r7.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb0[r1.x + 1].xyzx, r7.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            mul r1.xy, r0.wwww, l(16.000000, 32.000000, 0.000000, 0.000000)
            mad r0.z, r0.z, l(32.000000), r1.x
            mul r1.xzw, v0.xxyz, l(160.000000, 0.000000, 160.000000, 160.000000)
            dp3 r0.w, r1.xzwx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xzw, v0.xxyz, l(160.000000, 0.000000, 160.000000, 160.000000), r0.wwww
            round_ni r1.xzw, r1.xxzw
            dp3 r0.w, r1.xzwx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.xzwx
            mad r2.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.xzwx, cb0[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r2.w, r2.xyzx, r2.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            add r2.xyz, r1.xzwx, r5.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r5.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r5.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb0[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r0.w, r2.w, r0.w, r2.x
            add r2.xyz, r1.xzwx, r6.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb0[r2.x + 1].xyzx, r3.xyzx
            mad r0.w, r2.y, r2.x, r0.w
            add r1.xzw, r1.xxzw, l(1.000000, 0.000000, 1.000000, 1.000000)
            div r1.xzw, r1.xxzw, cb0[0].xxxx
            add r1.xz, r1.wwww, r1.xxzx
            sample_l r2.xyzw, r1.xzxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r2.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.z, r7.xyzx, r7.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.x, cb0[r1.x + 1].xyzx, r7.xyzx
            mad r0.w, r1.z, r1.x, r0.w
            mad r0.z, r0.w, l(8.000000), r0.z
            mad_sat r0.z, r0.z, l(0.571429), l(-0.500000)
            add r0.z, -r0.z, l(1.000000)
            mad r0.w, r0.w, l(16.000000), r1.y
            mul r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
            dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r1.xxxx
            round_ni r1.xyz, r1.xyzx
            dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r1.wwww, r1.xyzx
            mad r2.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.xyzx, cb0[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r8.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r2.xyzx, r2.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb0[r1.w + 1].xyzx, r2.xyzx
            add r2.xyz, r1.xyzx, r5.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r5.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r5.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb0[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r1.w, r2.w, r1.w, r2.x
            add r2.xyz, r1.xyzx, r6.xyzx
            div r2.xyz, r2.xyzx, cb0[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb0[r2.x + 1].xyzx, r3.xyzx
            mad r1.w, r2.y, r2.x, r1.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.x, r2.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r7.xyzx, r7.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb0[r1.x + 1].xyzx, r7.xyzx
            mad r1.x, r1.y, r1.x, r1.w
            mad r0.w, r1.x, l(8.000000), r0.w
            mul r1.xy, r0.wwww, l(0.000057, 0.000571, 0.000000, 0.000000)
            mad r0.z, r0.z, l(0.010000), r1.x
            mad r0.z, -r0.w, l(0.000571), r0.z
            mad r0.y, r0.y, r0.z, r1.y
            add r0.x, r0.x, r0.y
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad o0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 576 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullNone;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_immediateConstantBuffer { { 1.000000, 0.700000, -1.000000, 0.800000},
                                          { -0.500000, 0, -1.000000, 0.600000} }
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 10
            dp3 r0.x, v0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r0.xyz, r0.xxxx, v0.xyzx
            round_ni r0.xyz, r0.xyzx
            dp3 r0.w, r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, -r0.wwww, r0.xyzx
            add r1.xyz, -r1.xyzx, v0.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.xyzx, cb2[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r7.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r1.xyzx, r1.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r1.xyzx
            add r1.xyz, r0.xyzx, r4.xyzx
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r4.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r4.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r3.xyzx, r3.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r3.xyzx
            mul r1.x, r1.x, r1.y
            mad r0.w, r1.w, r0.w, r1.x
            add r1.xyz, r0.xyzx, r5.xyzx
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r2.xyzx, r2.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r2.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r0.xyzx, cb2[0].xxxx
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r1.xyzw, r0.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.x, r1.x, l(255.000000)
            ftou r0.x, r0.x
            and r0.x, r0.x, l(15)
            dp3 r0.y, r6.xyzx, r6.xyzx
            add r0.y, -r0.y, l(0.600000)
            max r0.y, r0.y, l(0.000000)
            mul r0.y, r0.y, r0.y
            mul r0.y, r0.y, r0.y
            dp3 r0.x, cb2[r0.x + 1].xyzx, r6.xyzx
            mad r0.x, r0.y, r0.x, r0.w
            mul r0.yzw, v0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.yzwy, cb2[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r7.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.x, cb2[r1.w + 1].xyzx, r1.xyzx
            add r1.yzw, r0.yyzw, r4.xxyz
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r4.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r4.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r3.xyzx
            mul r1.y, r1.y, r1.z
            mad r1.x, r2.w, r1.x, r1.y
            add r1.yzw, r0.yyzw, r5.xxyz
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r2.xyzx
            mad r1.x, r1.z, r1.y, r1.x
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb2[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r2.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r2.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.z, r6.xyzx, r6.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp3 r0.y, cb2[r0.y + 1].xyzx, r6.xyzx
            mad r0.y, r0.z, r0.y, r1.x
            mul r0.y, r0.y, l(19.200001)
            mad r0.x, r0.x, l(32.000000), r0.y
            mul r0.yzw, v0.xxyz, l(0.000000, 16.000000, 16.000000, 16.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 16.000000, 16.000000, 16.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r5.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r6.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r7.xyz, r0.yzwy, cb2[0].xxxx
            add r7.xy, r7.zzzz, r7.xyxx
            sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r7.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.x, cb2[r1.w + 1].xyzx, r1.xyzx
            add r1.yzw, r0.yyzw, r4.xxyz
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r4.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r4.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r3.xyzx
            mul r1.y, r1.y, r1.z
            mad r1.x, r2.w, r1.x, r1.y
            add r1.yzw, r0.yyzw, r5.xxyz
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r2.xyzx, r2.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r2.xyzx
            mad r1.x, r1.z, r1.y, r1.x
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb2[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r2.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r2.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.z, r6.xyzx, r6.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp3 r0.y, cb2[r0.y + 1].xyzx, r6.xyzx
            mad r0.y, r0.z, r0.y, r1.x
            mad r0.x, r0.y, l(11.520000), r0.x
            mov r1.z, l(-1.000000)
            mov r0.y, l(0)
            loop 
              uge r0.z, r0.y, l(2)
              breakc_nz r0.z
              mov r1.xy, icb[r0.y + 0].xyxx
              add r1.xyw, -r1.xyxz, v0.xyxz
              dp3 r0.z, r1.xywx, r1.xywx
              mad r0.z, r0.x, l(0.153061), r0.z
              mul r0.w, icb[r0.y + 0].w, icb[r0.y + 0].w
              lt r0.z, r0.z, r0.w
              discard_nz r0.z
              iadd r0.y, r0.y, l(1)
            endloop 
            mul r0.xyz, v0.xyzx, l(3.850000, 7.700000, 3.850000, 0.000000)
            round_ni r0.w, r0.y
            ftou r0.w, |r0.w|
            and r0.w, r0.w, l(1)
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.500000, 0.000000, 0.500000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            round_ni r2.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r0.xyz, r0.xyzx, -r2.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r0.xyz, -|r0.xyzx|, l(0.070000, 0.070000, 0.070000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(500.000000)
            min r0.x, r0.x, l(1.000000)
            log r0.y, r0.x
            mul r0.y, r0.y, l(16.000000)
            exp r0.y, r0.y
            mul r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000)
            dp3 r0.z, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), r0.zzzz
            round_ni r1.xyz, r1.xyzx
            dp3 r0.z, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r0.zzzz, r1.xyzx
            mad r3.xyz, v0.xyzx, l(40.000000, 40.000000, 40.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.xyzx, cb2[0].xxxx
            add r0.zw, r9.zzzz, r9.xxxy
            sample_l r9.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r9.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.w, r3.xyzx, r3.xyzx
            add r0.yw, -r0.yyyw, l(0.000000, 1.000000, 0.000000, 0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp3 r0.z, cb2[r0.z + 1].xyzx, r3.xyzx
            add r3.xyz, r1.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            mul r1.w, r1.w, r2.w
            mad r0.z, r0.w, r0.z, r1.w
            add r3.xyz, r1.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r4.xyzx, r4.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r4.xyzx
            mad r0.z, r1.w, r0.w, r0.z
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.x, r8.xyzx, r8.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp3 r0.w, cb2[r0.w + 1].xyzx, r8.xyzx
            mad r0.z, r1.x, r0.w, r0.z
            mul r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000)
            dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), r0.wwww
            round_ni r1.xyz, r1.xyzx
            dp3 r0.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r0.wwww, r1.xyzx
            mad r3.xyz, v0.xyzx, l(80.000000, 80.000000, 80.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.xyzx, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r9.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r3.xyzx
            add r3.xyz, r1.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r5.xyzx, r5.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            mul r2.w, r2.w, r3.x
            mad r0.w, r1.w, r0.w, r2.w
            add r3.xyz, r1.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            mad r0.w, r2.w, r1.w, r0.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r8.xyzx, r8.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
            mad r0.w, r1.y, r1.x, r0.w
            mul r1.x, r0.w, l(16.000000)
            mad r0.z, r0.z, l(32.000000), r1.x
            mul r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000)
            dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), r1.xxxx
            round_ni r1.xyz, r1.xyzx
            dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.wwww, r1.xyzx
            mad r3.xyz, v0.xyzx, l(160.000000, 160.000000, 160.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r9.xyz, r1.xyzx, cb2[0].xxxx
            add r9.xy, r9.zzzz, r9.xyxx
            sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r9.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
            add r3.xyz, r1.xyzx, r6.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(15)
            dp3 r3.y, r5.xyzx, r5.xyzx
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
            mul r3.x, r3.x, r3.y
            mad r1.w, r2.w, r1.w, r3.x
            add r3.xyz, r1.xyzx, r7.xyzx
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
            mad r1.w, r3.x, r2.w, r1.w
            add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r1.xyz, r1.xyzx, cb2[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r3.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r8.xyzx, r8.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
            mad r1.x, r1.y, r1.x, r1.w
            mad r0.z, r1.x, l(8.000000), r0.z
            mad_sat r0.z, r0.z, l(0.571429), l(-0.500000)
            add r0.z, -r0.z, l(1.000000)
            if_nz cb1[3].y
              add r0.x, -r0.x, l(1.000000)
              mul r1.x, r1.x, l(16.000000)
              mad r0.w, r0.w, l(32.000000), r1.x
              mul r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000)
              dp3 r1.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              mad r1.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), r1.xxxx
              round_ni r1.xyz, r1.xyzx
              dp3 r1.w, r1.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              add r3.xyz, -r1.wwww, r1.xyzx
              mad r3.xyz, v0.xyzx, l(320.000000, 320.000000, 320.000000, 0.000000), -r3.xyzx
              ge r4.xyz, r3.xyzx, r3.yzxy
              and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              lt r5.xyz, r4.zxyz, r4.xyzx
              and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              ge r4.xyz, r4.xyzx, r4.zxyz
              and r7.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
              movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r5.xyz, r3.xyzx, r5.xyzx
              add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
              movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
              add r4.xyz, r3.xyzx, r4.xyzx
              add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
              add r8.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
              div r9.xyz, r1.xyzx, cb2[0].xxxx
              add r9.xy, r9.zzzz, r9.xyxx
              sample_l r9.xyzw, r9.xyxx, t1.xyzw, s1, l(0.000000)
              mul r1.w, r9.x, l(255.000000)
              ftou r1.w, r1.w
              and r1.w, r1.w, l(15)
              dp3 r2.w, r3.xyzx, r3.xyzx
              add r2.w, -r2.w, l(0.600000)
              max r2.w, r2.w, l(0.000000)
              mul r2.w, r2.w, r2.w
              mul r2.w, r2.w, r2.w
              dp3 r1.w, cb2[r1.w + 1].xyzx, r3.xyzx
              add r3.xyz, r1.xyzx, r6.xyzx
              div r3.xyz, r3.xyzx, cb2[0].xxxx
              add r3.xy, r3.zzzz, r3.xyxx
              sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
              mul r3.x, r3.x, l(255.000000)
              ftou r3.x, r3.x
              and r3.x, r3.x, l(15)
              dp3 r3.y, r5.xyzx, r5.xyzx
              add r3.y, -r3.y, l(0.600000)
              max r3.y, r3.y, l(0.000000)
              mul r3.y, r3.y, r3.y
              mul r3.y, r3.y, r3.y
              dp3 r3.x, cb2[r3.x + 1].xyzx, r5.xyzx
              mul r3.x, r3.x, r3.y
              mad r1.w, r2.w, r1.w, r3.x
              add r3.xyz, r1.xyzx, r7.xyzx
              div r3.xyz, r3.xyzx, cb2[0].xxxx
              add r3.xy, r3.zzzz, r3.xyxx
              sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
              mul r2.w, r3.x, l(255.000000)
              ftou r2.w, r2.w
              and r2.w, r2.w, l(15)
              dp3 r3.x, r4.xyzx, r4.xyzx
              add r3.x, -r3.x, l(0.600000)
              max r3.x, r3.x, l(0.000000)
              mul r3.x, r3.x, r3.x
              mul r3.x, r3.x, r3.x
              dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
              mad r1.w, r3.x, r2.w, r1.w
              add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
              div r1.xyz, r1.xyzx, cb2[0].xxxx
              add r1.xy, r1.zzzz, r1.xyxx
              sample_l r3.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
              mul r1.x, r3.x, l(255.000000)
              ftou r1.x, r1.x
              and r1.x, r1.x, l(15)
              dp3 r1.y, r8.xyzx, r8.xyzx
              add r1.y, -r1.y, l(0.600000)
              max r1.y, r1.y, l(0.000000)
              mul r1.y, r1.y, r1.y
              mul r1.y, r1.y, r1.y
              dp3 r1.x, cb2[r1.x + 1].xyzx, r8.xyzx
              mad r1.x, r1.y, r1.x, r1.w
              mad r0.w, r1.x, l(8.000000), r0.w
              mul r1.xy, r0.wwww, l(0.000057, 0.000571, 0.000000, 0.000000)
              mad r1.x, r0.z, l(0.010000), r1.x
              mad r0.w, -r0.w, l(0.000571), r1.x
              mad r0.w, r0.y, r0.w, r1.y
              add r0.x, r0.x, r0.w
              mul r1.xyz, r0.xxxx, v2.yzxy
              mad r1.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), v0.yzxy
              deriv_rtx r3.xyz, r1.yzxy
              deriv_rty r1.xyz, r1.xyzx
              mul r4.xyz, r1.xyzx, r3.xyzx
              mad r1.xyz, r3.zxyz, r1.yzxy, -r4.xyzx
              dp3 r0.x, r1.xyzx, r1.xyzx
              rsq r0.x, r0.x
              mul r1.xyz, r0.xxxx, r1.xyzx
            else 
              div r0.xw, v4.xxxy, cb0[16].xxxy
              sample_l r1.xyzw, r0.xwxx, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.x, r1.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.100000)
            mul r1.xyz, r2.xyzx, l(0.003922, 0.003922, 0.039216, 0.000000)
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            log r0.z, r0.z
            mul r0.z, r0.z, l(16.000000)
            exp r0.z, r0.z
            mad r1.xyzw, r1.xxxx, l(0.450000, -0.010000, 0.040000, 0.000000), l(-0.150000, -0.270000, -0.290000, 0.000000)
            mad r1.xyzw, r0.zzzz, r1.xyzw, l(-0.300000, -0.400000, -0.400000, 0.000000)
            mad r1.xyzw, r0.yyyy, r1.xyzw, l(0.700000, 0.700000, 0.700000, 1.000000)
            mul o0.xyzw, r0.xxxx, r1.xyzw
            ret 
            // Approximately 603 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullNone;
    }

}

technique10 RenderWood
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xyz, v0.xyzx, l(3.800000, 1.140000, 3.800000, 0.000000)
            round_ni r1.xy, r0.xzxx
            ftou r1.xy, |r1.xyxx|
            and r1.xy, r1.xyxx, l(1, 1, 0, 0)
            iadd r0.w, r1.y, r1.x
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.040000, 0.030000, 0.040000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            round_ni r1.xyz, r0.xyzx
            add r0.xyz, r0.xyzx, -r1.xyzx
            add r0.xyz, -|r0.xyzx|, l(0.040000, 0.030000, 0.040000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(1000.000000)
            min r0.x, r0.x, l(1.000000)
            add r0.x, -r0.x, l(1.000000)
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 25 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 9
            mul r0.xyz, v0.xyzx, l(3.800000, 1.140000, 3.800000, 0.000000)
            round_ni r1.xy, r0.xzxx
            ftou r1.xy, |r1.xyxx|
            and r1.xy, r1.xyxx, l(1, 1, 0, 0)
            iadd r0.w, r1.y, r1.x
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            round_ni r2.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r0.xyz, r0.xyzx, -r2.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.040000, 0.030000, 0.040000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r0.xyz, -|r0.xyzx|, l(0.040000, 0.030000, 0.040000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(1000.000000)
            min r0.x, r0.x, l(1.000000)
            add r0.x, -r0.x, l(1.000000)
            if_nz cb1[3].y
              mul r0.yzw, r0.xxxx, v2.yyzx
              mad r0.yzw, r0.yyzw, l(0.000000, 0.010000, 0.010000, 0.010000), v0.yyzx
              deriv_rtx r1.xyz, r0.zwyz
              deriv_rty r0.yzw, r0.yyzw
              mul r3.xyz, r0.yzwy, r1.xyzx
              mad r0.yzw, r1.zzxy, r0.zzwy, -r3.xxyz
              dp3 r1.x, r0.yzwy, r0.yzwy
              rsq r1.x, r1.x
              mul r1.xyz, r0.yzwy, r1.xxxx
            else 
              div r0.yz, v4.xxyx, cb0[16].xxyx
              sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.y, r1.xyzx, cb0[0].xyzx
            mul r1.xyz, r2.xyzx, l(0.003922, 0.003922, 0.039216, 0.000000)
            add r0.zw, r1.zzzz, r1.xxxy
            sample_l r1.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            add r1.yzw, v0.xxyz, v0.xxyz
            dp3 r0.z, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, v0.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), r0.zzzz
            round_ni r1.yzw, r1.yyzw
            dp3 r0.z, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.zzzz, r1.yzwy
            mad r2.xyz, v0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.yzwy, cb2[0].xxxx
            add r0.zw, r8.zzzz, r8.xxxy
            sample_l r8.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r8.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.w, r2.xyzx, r2.xyzx
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp3 r0.z, cb2[r0.z + 1].xyzx, r2.xyzx
            add r2.xyz, r1.yzwy, r5.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r0.z, r0.w, r0.z, r2.x
            add r2.xyz, r1.yzwy, r6.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp3 r0.w, cb2[r0.w + 1].xyzx, r3.xyzx
            mad r0.z, r2.x, r0.w, r0.z
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.y, r7.xyzx, r7.xyzx
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r0.w, cb2[r0.w + 1].xyzx, r7.xyzx
            mad r0.z, r1.y, r0.w, r0.z
            mul r1.yzw, v0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
            dp3 r0.w, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.yzw, v0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r0.wwww
            round_ni r1.yzw, r1.yyzw
            dp3 r0.w, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r2.xyz, -r0.wwww, r1.yzwy
            mad r2.xyz, v0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r2.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r6.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r7.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            div r8.xyz, r1.yzwy, cb2[0].xxxx
            add r8.xy, r8.zzzz, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r2.w, r2.xyzx, r2.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r2.xyzx
            add r2.xyz, r1.yzwy, r5.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r5.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r5.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r4.xyzx, r4.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r4.xyzx
            mul r2.x, r2.x, r2.y
            mad r0.w, r2.w, r0.w, r2.x
            add r2.xyz, r1.yzwy, r6.xyzx
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp3 r2.x, cb2[r2.x + 1].xyzx, r3.xyzx
            mad r0.w, r2.y, r2.x, r0.w
            add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r1.yzw, r1.yyzw, cb2[0].xxxx
            add r1.yz, r1.wwww, r1.yyzy
            sample_l r2.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.z, r7.xyzx, r7.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp3 r1.y, cb2[r1.y + 1].xyzx, r7.xyzx
            mad r0.w, r1.z, r1.y, r0.w
            mul r0.w, r0.w, l(16.000000)
            mad r0.z, r0.z, l(32.000000), r0.w
            mad r2.xyzw, r0.zzzz, l(0.020000, 0.020000, 0.020000, 0.020000), v0.xzxz
            mul r0.z, r1.x, l(1.250000)
            mad r1.xyzw, r2.xyzw, l(2.150000, 2.150000, 2.150000, 2.150000), r0.zzzz
            round_pi r2.zw, r1.zzzw
            round_ni r2.xy, r1.zwzz
            add r3.xyzw, r1.zwzw, -r2.xyxw
            dp2 r0.z, r3.xyxx, r3.xyxx
            dp2 r0.w, r3.zwzz, r3.zwzz
            sqrt r0.zw, r0.zzzw
            add r1.xyzw, r1.xyzw, -r2.zyzw
            dp2 r1.x, r1.xyxx, r1.xyxx
            dp2 r1.y, r1.zwzz, r1.zwzz
            sqrt r1.xy, r1.xyxx
            min r0.z, r0.w, r0.z
            min r0.w, r1.y, r1.x
            min r0.z, r0.w, r0.z
            mul r1.xyz, r0.zzzz, l(12.000000, 24.000000, 48.000000, 0.000000)
            dp3 r0.w, r1.xxxx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.w, r0.z, l(12.000000), r0.w
            round_ni r0.w, r0.w
            dp3 r1.x, r0.wwww, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.x, r0.w, -r1.x
            mad r1.x, r0.z, l(12.000000), -r1.x
            add r2.xyz, r1.xxxx, l(0.166667, -0.666667, -0.500000, 0.000000)
            div r1.w, r0.w, cb2[0].x
            add r1.w, r1.w, r1.w
            sample_l r3.xyzw, r1.wwww, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r1.xxxx, r1.xxxx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.x, cb2[r1.w + 1].xyzx, r1.xxxx
            dp3 r3.x, r2.xxxx, r2.xxxx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r2.xxxx
            mul r1.w, r1.w, r3.x
            mad r1.x, r2.w, r1.x, r1.w
            add r0.w, r0.w, l(1.000000)
            div r0.w, r0.w, cb2[0].x
            add r0.w, r0.w, r0.w
            sample_l r3.xyzw, r0.wwww, t1.xyzw, s1, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r1.w, r2.yyyy, r2.yyyy
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r2.x, cb2[r0.w + 1].xyzx, r2.yyyy
            mad r1.x, r1.w, r2.x, r1.x
            dp3 r1.w, r2.zzzz, r2.zzzz
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r0.w, cb2[r0.w + 1].xyzx, r2.zzzz
            mad r0.w, r1.w, r0.w, r1.x
            dp3 r1.x, r1.yyyy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.x, r0.z, l(24.000000), r1.x
            round_ni r1.x, r1.x
            dp3 r1.y, r1.xxxx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.y, -r1.y, r1.x
            mad r1.y, r0.z, l(24.000000), -r1.y
            add r2.xyz, r1.yyyy, l(0.166667, -0.666667, -0.500000, 0.000000)
            div r1.w, r1.x, cb2[0].x
            add r1.w, r1.w, r1.w
            sample_l r3.xyzw, r1.wwww, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r2.w, r1.yyyy, r1.yyyy
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            dp3 r1.y, cb2[r1.w + 1].xyzx, r1.yyyy
            dp3 r3.x, r2.xxxx, r2.xxxx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp3 r1.w, cb2[r1.w + 1].xyzx, r2.xxxx
            mul r1.w, r1.w, r3.x
            mad r1.y, r2.w, r1.y, r1.w
            add r1.x, r1.x, l(1.000000)
            div r1.x, r1.x, cb2[0].x
            add r1.x, r1.x, r1.x
            sample_l r3.xyzw, r1.xxxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r3.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.w, r2.yyyy, r2.yyyy
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r2.x, cb2[r1.x + 1].xyzx, r2.yyyy
            mad r1.y, r1.w, r2.x, r1.y
            dp3 r1.w, r2.zzzz, r2.zzzz
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp3 r1.x, cb2[r1.x + 1].xyzx, r2.zzzz
            mad r1.x, r1.w, r1.x, r1.y
            mul r1.x, r1.x, l(16.000000)
            mad r0.w, r0.w, l(32.000000), r1.x
            dp3 r1.x, r1.zzzz, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r1.x, r0.z, l(48.000000), r1.x
            round_ni r1.x, r1.x
            dp3 r1.y, r1.xxxx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.y, -r1.y, r1.x
            mad r0.z, r0.z, l(48.000000), -r1.y
            add r1.yzw, r0.zzzz, l(0.000000, 0.166667, -0.666667, -0.500000)
            div r2.x, r1.x, cb2[0].x
            add r2.x, r2.x, r2.x
            sample_l r2.xyzw, r2.xxxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.y, r0.zzzz, r0.zzzz
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            dp3 r0.z, cb2[r2.x + 1].xyzx, r0.zzzz
            dp3 r2.z, r1.yyyy, r1.yyyy
            add r2.z, -r2.z, l(0.600000)
            max r2.z, r2.z, l(0.000000)
            mul r2.yz, r2.yyzy, r2.yyzy
            mul r2.z, r2.z, r2.z
            dp3 r1.y, cb2[r2.x + 1].xyzx, r1.yyyy
            mul r1.y, r1.y, r2.z
            mad r0.z, r2.y, r0.z, r1.y
            add r1.x, r1.x, l(1.000000)
            div r1.x, r1.x, cb2[0].x
            add r1.x, r1.x, r1.x
            sample_l r2.xyzw, r1.xxxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r2.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(15)
            dp3 r1.y, r1.zzzz, r1.zzzz
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.z, cb2[r1.x + 1].xyzx, r1.zzzz
            mad r0.z, r1.y, r1.z, r0.z
            dp3 r1.y, r1.wwww, r1.wwww
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp3 r1.x, cb2[r1.x + 1].xyzx, r1.wwww
            mad r0.z, r1.y, r1.x, r0.z
            mad r0.z, r0.z, l(8.000000), r0.w
            mul_sat r0.z, r0.z, l(0.571429)
            mad r1.xyzw, r0.zzzz, l(-0.300000, -0.300000, -0.300000, 0.000000), l(0.600000, 0.500000, 0.300000, 1.000000)
            mul r0.x, r0.x, r0.y
            mul o0.xyzw, r1.xyzw, r0.xxxx
            ret 
            // Approximately 358 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderGridColors
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v0.xyzx, l(3.800000, 3.800000, 3.800000, 0.000000)
            round_pi r1.xyz, r0.xyzx
            round_ni r0.xyz, r0.xyzx
            mad r1.xyz, v0.xyzx, l(3.800000, 3.800000, 3.800000, 0.000000), -r1.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.030000, 0.030000, 0.030000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            mad r1.xyz, v0.xyzx, l(3.800000, 3.800000, 3.800000, 0.000000), -r0.xyzx
            mul r0.xyz, r0.xyzx, l(0.003922, 0.003922, 0.039216, 0.000000)
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r2.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
            mad r2.xyzw, r2.xxxx, l(-1.000000, 0.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 1.000000)
            add r0.xyz, -|r1.xyzx|, l(0.030000, 0.030000, 0.030000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(500.000000)
            min r0.x, r0.x, l(1.000000)
            add r0.x, -r0.x, l(1.000000)
            mul o0.xyzw, r0.xxxx, r2.xyzw
            ret 
            // Approximately 21 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderStagGridColors
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xyz, v0.xyzx, l(3.800000, 3.800000, 3.800000, 0.000000)
            round_ni r1.xy, r0.xzxx
            ftou r1.xy, |r1.xyxx|
            and r1.xy, r1.xyxx, l(1, 1, 0, 0)
            iadd r0.w, r1.y, r1.x
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.030000, 0.030000, 0.030000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            round_ni r1.xyz, r0.xyzx
            add r0.xyz, r0.xyzx, -r1.xyzx
            mul r1.xyz, r1.xyzx, l(0.003922, 0.003922, 0.039216, 0.000000)
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mad r1.xyzw, r1.xxxx, l(-1.000000, 0.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 1.000000)
            add r0.xyz, -|r0.xyzx|, l(0.030000, 0.030000, 0.030000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(500.000000)
            min r0.x, r0.x, l(1.000000)
            add r0.x, -r0.x, l(1.000000)
            mul o0.xyzw, r0.xxxx, r1.xyzw
            ret 
            // Approximately 27 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderVoronoi3
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 6
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r0.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r1.z, r3.x, r2.y
              breakc_nz r1.z
              mov r1.z, r0.w
              mov r3.y, r2.z
              loop 
                ge r1.w, r3.y, r2.w
                breakc_nz r1.w
                mul r1.w, r3.y, r3.x
                mov r3.w, r1.z
                mov r3.z, r1.x
                loop 
                  ge r4.x, r3.z, r1.y
                  breakc_nz r4.x
                  div r4.x, r3.z, r3.y
                  mad r4.x, r4.x, r3.x, r1.w
                  mad r4.x, cb0[2].x, l(0.100000), r4.x
                  div r4.x, r4.x, cb1[0].y
                  sample_l r4.xyzw, r4.x, t0.xyzw, s0, l(0.000000)
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                  add r4.xyz, -r0.xyzx, r4.xyzx
                  dp3 r4.x, r4.xyzx, r4.xyzx
                  min r3.w, r3.w, r4.x
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r1.z, r3.w
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r0.w, r1.z
              add r3.x, r3.x, l(1.000000)
            endloop 
            mov o0.xyzw, r0.wwww
            ret 
            // Approximately 40 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderVoronoi3_2
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r1.zw, l(0,0,100.000000,100.000000)
            mov r3.x, r2.x
            loop 
              ge r0.w, r3.x, r2.y
              breakc_nz r0.w
              mov r4.xy, r1.zwzz
              mov r3.y, r2.z
              loop 
                ge r0.w, r3.y, r2.w
                breakc_nz r0.w
                mul r0.w, r3.y, r3.x
                mov r4.zw, r4.xxxy
                mov r3.z, r1.x
                loop 
                  ge r3.w, r3.z, r1.y
                  breakc_nz r3.w
                  div r3.w, r3.z, r3.y
                  mad r3.w, r3.w, r3.x, r0.w
                  mad r3.w, cb0[2].x, l(0.100000), r3.w
                  div r3.w, r3.w, cb1[0].y
                  sample_l r5.xyzw, r3.w, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  add r5.xyz, -r0.xyzx, r5.xyzx
                  dp3 r5.x, r5.xyzx, r5.xyzx
                  lt r3.w, r5.x, r4.z
                  min r5.z, r4.w, r5.x
                  mov r5.y, r4.z
                  movc r4.zw, r3.wwww, r5.xxxy, r5.yyyz
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r4.xy, r4.zwzz
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.zw, r4.xxxy
              add r3.x, r3.x, l(1.000000)
            endloop 
            mov o0.xyzw, r1.wwww
            ret 
            // Approximately 43 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderVoronoi3_2Bump
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r1.zw, l(0,0,100.000000,100.000000)
            mov r3.x, r2.x
            loop 
              ge r0.w, r3.x, r2.y
              breakc_nz r0.w
              mov r4.xy, r1.wzww
              mov r3.y, r2.z
              loop 
                ge r0.w, r3.y, r2.w
                breakc_nz r0.w
                mul r0.w, r3.y, r3.x
                mov r4.zw, r4.xxxy
                mov r3.z, r1.x
                loop 
                  ge r3.w, r3.z, r1.y
                  breakc_nz r3.w
                  div r3.w, r3.z, r3.y
                  mad r3.w, r3.w, r3.x, r0.w
                  mad r3.w, cb0[2].x, l(0.100000), r3.w
                  div r3.w, r3.w, cb1[0].y
                  sample_l r5.xyzw, r3.w, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  add r5.xyz, -r0.xyzx, r5.xyzx
                  dp3 r5.x, r5.xyzx, r5.xyzx
                  lt r3.w, r5.x, r4.z
                  min r5.z, r4.w, r5.x
                  mov r5.y, r4.z
                  movc r4.zw, r3.wwww, r5.xxxy, r5.yyyz
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r4.xy, r4.zwzz
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.zw, r4.yyyx
              add r3.x, r3.x, l(1.000000)
            endloop 
            mul r0.xyz, r1.zzzz, v2.xyzx
            mad o0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 45 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandVector                    texture  float4          1d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture1d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r1.zw, l(0,0,100.000000,100.000000)
            mov r3.x, r2.x
            loop 
              ge r0.w, r3.x, r2.y
              breakc_nz r0.w
              mov r4.xy, r1.wzww
              mov r3.y, r2.z
              loop 
                ge r0.w, r3.y, r2.w
                breakc_nz r0.w
                mul r0.w, r3.y, r3.x
                mov r4.zw, r4.xxxy
                mov r3.z, r1.x
                loop 
                  ge r3.w, r3.z, r1.y
                  breakc_nz r3.w
                  div r3.w, r3.z, r3.y
                  mad r3.w, r3.w, r3.x, r0.w
                  mad r3.w, cb0[2].x, l(0.100000), r3.w
                  div r3.w, r3.w, cb2[0].y
                  sample_l r5.xyzw, r3.w, t1.xyzw, s1, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  add r5.xyz, -r0.xyzx, r5.xyzx
                  dp3 r5.x, r5.xyzx, r5.xyzx
                  lt r3.w, r5.x, r4.z
                  min r5.z, r4.w, r5.x
                  mov r5.y, r4.z
                  movc r4.zw, r3.wwww, r5.xxxy, r5.yyyz
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r4.xy, r4.zwzz
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.zw, r4.yyyx
              add r3.x, r3.x, l(1.000000)
            endloop 
            if_nz cb1[3].y
              mul r0.xyz, r1.zzzz, v2.yzxy
              mad r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.yzxy
              deriv_rtx r1.xyz, r0.yzxy
              deriv_rty r0.xyz, r0.xyzx
              mul r2.xyz, r0.xyzx, r1.xyzx
              mad r0.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
              dp3 r0.w, r0.xyzx, r0.xyzx
              rsq r0.w, r0.w
              mul r0.xyz, r0.wwww, r0.xyzx
            else 
              div r1.xy, v4.xyxx, cb0[16].xyxx
              sample_l r0.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.x, r0.xyzx, cb0[0].xyzx
            add o0.xyzw, r0.xxxx, l(0.100000, 0.100000, 0.100000, 0.100000)
            ret 
            // Approximately 58 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderVoronoi2
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mad r1.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.500000, 100.500000, 100.500000, 0.000000)
            round_ni r1.xyz, r1.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 1.000000, -1.000000, 1.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov r0.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r1.z, r3.x, r2.y
              breakc_nz r1.z
              mov r1.z, r0.w
              mov r3.y, r2.z
              loop 
                ge r1.w, r3.y, r2.w
                breakc_nz r1.w
                mul r1.w, r3.y, r3.x
                mov r3.w, r1.z
                mov r3.z, r1.x
                loop 
                  ge r4.x, r3.z, r1.y
                  breakc_nz r4.x
                  div r4.x, r3.z, r3.y
                  mad r4.x, r4.x, r3.x, r1.w
                  add r4.yzw, r3.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
                  mov r5.x, r3.w
                  mov r5.y, l(0)
                  loop 
                    ige r5.z, r5.y, l(3)
                    breakc_nz r5.z
                    ishl r5.z, r5.y, l(2)
                    itof r5.z, r5.z
                    mad r5.z, cb0[2].x, l(0.100000), r5.z
                    add r5.z, r4.x, r5.z
                    div r5.z, r5.z, cb1[0].y
                    sample_l r6.xyzw, r5.z, t0.xyzw, s0, l(0.000000)
                    mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.yzwy
                    add r6.xyz, -r0.xyzx, r6.xyzx
                    dp3 r5.z, r6.xyzx, r6.xyzx
                    min r5.x, r5.z, r5.x
                    iadd r5.y, r5.y, l(1)
                  endloop 
                  mov r3.w, r5.x
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r1.z, r3.w
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r0.w, r1.z
              add r3.x, r3.x, l(1.000000)
            endloop 
            mov o0.xyzw, r0.wwww
            ret 
            // Approximately 52 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderVoronoi2_2
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 8
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mad r1.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.500000, 100.500000, 100.500000, 0.000000)
            round_ni r1.xyz, r1.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 1.000000, -1.000000, 1.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov r1.zw, l(0,0,100.000000,100.000000)
            mov r3.x, r2.x
            loop 
              ge r0.w, r3.x, r2.y
              breakc_nz r0.w
              mov r4.xy, r1.zwzz
              mov r3.y, r2.z
              loop 
                ge r0.w, r3.y, r2.w
                breakc_nz r0.w
                mul r0.w, r3.y, r3.x
                mov r4.zw, r4.xxxy
                mov r3.z, r1.x
                loop 
                  ge r3.w, r3.z, r1.y
                  breakc_nz r3.w
                  div r3.w, r3.z, r3.y
                  mad r3.w, r3.w, r3.x, r0.w
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mov r6.xy, r4.zwzz
                  mov r5.w, l(0)
                  loop 
                    ige r6.z, r5.w, l(3)
                    breakc_nz r6.z
                    ishl r6.z, r5.w, l(2)
                    itof r6.z, r6.z
                    mad r6.z, cb0[2].x, l(0.100000), r6.z
                    add r6.z, r3.w, r6.z
                    div r6.z, r6.z, cb1[0].y
                    sample_l r7.xyzw, r6.z, t0.xyzw, s0, l(0.000000)
                    mad r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                    add r7.xyz, -r0.xyzx, r7.xyzx
                    dp3 r7.x, r7.xyzx, r7.xyzx
                    lt r6.z, r7.x, r6.x
                    min r7.z, r6.y, r7.x
                    mov r7.y, r6.x
                    movc r6.xy, r6.zzzz, r7.xyxx, r7.yzyy
                    iadd r5.w, r5.w, l(1)
                  endloop 
                  mov r4.zw, r6.xxxy
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r4.xy, r4.zwzz
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.zw, r4.xxxy
              add r3.x, r3.x, l(1.000000)
            endloop 
            mov o0.xyzw, r1.wwww
            ret 
            // Approximately 55 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderVoronoi2_2Bump
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 8
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mad r1.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.500000, 100.500000, 100.500000, 0.000000)
            round_ni r1.xyz, r1.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 1.000000, -1.000000, 1.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov r1.zw, l(0,0,100.000000,100.000000)
            mov r3.x, r2.x
            loop 
              ge r0.w, r3.x, r2.y
              breakc_nz r0.w
              mov r4.xy, r1.wzww
              mov r3.y, r2.z
              loop 
                ge r0.w, r3.y, r2.w
                breakc_nz r0.w
                mul r0.w, r3.y, r3.x
                mov r4.zw, r4.xxxy
                mov r3.z, r1.x
                loop 
                  ge r3.w, r3.z, r1.y
                  breakc_nz r3.w
                  div r3.w, r3.z, r3.y
                  mad r3.w, r3.w, r3.x, r0.w
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mov r6.xy, r4.zwzz
                  mov r5.w, l(0)
                  loop 
                    ige r6.z, r5.w, l(3)
                    breakc_nz r6.z
                    ishl r6.z, r5.w, l(2)
                    itof r6.z, r6.z
                    mad r6.z, cb0[2].x, l(0.100000), r6.z
                    add r6.z, r3.w, r6.z
                    div r6.z, r6.z, cb1[0].y
                    sample_l r7.xyzw, r6.z, t0.xyzw, s0, l(0.000000)
                    mad r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                    add r7.xyz, -r0.xyzx, r7.xyzx
                    dp3 r7.x, r7.xyzx, r7.xyzx
                    lt r6.z, r7.x, r6.x
                    min r7.z, r6.y, r7.x
                    mov r7.y, r6.x
                    movc r6.xy, r6.zzzz, r7.xyxx, r7.yzyy
                    iadd r5.w, r5.w, l(1)
                  endloop 
                  mov r4.zw, r6.xxxy
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r4.xy, r4.zwzz
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.zw, r4.yyyx
              add r3.x, r3.x, l(1.000000)
            endloop 
            mul r0.xyz, r1.zzzz, v2.xyzx
            mad o0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 57 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandVector                    texture  float4          1d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture1d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 8
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mad r1.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.500000, 100.500000, 100.500000, 0.000000)
            round_ni r1.xyz, r1.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 1.000000, -1.000000, 1.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
            mov r1.zw, l(0,0,100.000000,100.000000)
            mov r3.x, r2.x
            loop 
              ge r0.w, r3.x, r2.y
              breakc_nz r0.w
              mov r4.xy, r1.wzww
              mov r3.y, r2.z
              loop 
                ge r0.w, r3.y, r2.w
                breakc_nz r0.w
                mul r0.w, r3.y, r3.x
                mov r4.zw, r4.xxxy
                mov r3.z, r1.x
                loop 
                  ge r3.w, r3.z, r1.y
                  breakc_nz r3.w
                  div r3.w, r3.z, r3.y
                  mad r3.w, r3.w, r3.x, r0.w
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mov r6.xy, r4.zwzz
                  mov r5.w, l(0)
                  loop 
                    ige r6.z, r5.w, l(3)
                    breakc_nz r6.z
                    ishl r6.z, r5.w, l(2)
                    itof r6.z, r6.z
                    mad r6.z, cb0[2].x, l(0.100000), r6.z
                    add r6.z, r3.w, r6.z
                    div r6.z, r6.z, cb2[0].y
                    sample_l r7.xyzw, r6.z, t1.xyzw, s1, l(0.000000)
                    mad r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                    add r7.xyz, -r0.xyzx, r7.xyzx
                    dp3 r7.x, r7.xyzx, r7.xyzx
                    lt r6.z, r7.x, r6.x
                    min r7.z, r6.y, r7.x
                    mov r7.y, r6.x
                    movc r6.xy, r6.zzzz, r7.xyxx, r7.yzyy
                    iadd r5.w, r5.w, l(1)
                  endloop 
                  mov r4.zw, r6.xxxy
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r4.xy, r4.zwzz
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.zw, r4.yyyx
              add r3.x, r3.x, l(1.000000)
            endloop 
            if_nz cb1[3].y
              mul r0.xyz, r1.zzzz, v2.yzxy
              mad r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.yzxy
              deriv_rtx r1.xyz, r0.yzxy
              deriv_rty r0.xyz, r0.xyzx
              mul r2.xyz, r0.xyzx, r1.xyzx
              mad r0.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
              dp3 r0.w, r0.xyzx, r0.xyzx
              rsq r0.w, r0.w
              mul r0.xyz, r0.wwww, r0.xyzx
            else 
              div r1.xy, v4.xyxx, cb0[16].xyxx
              sample_l r0.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.x, r0.xyzx, cb0[0].xyzx
            add o0.xyzw, r0.xxxx, l(0.100000, 0.100000, 0.100000, 0.100000)
            ret 
            // Approximately 70 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderFractalVoronoi
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r0.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r1.z, r3.x, r2.y
              breakc_nz r1.z
              mov r1.z, r0.w
              mov r3.y, r2.z
              loop 
                ge r1.w, r3.y, r2.w
                breakc_nz r1.w
                mul r1.w, r3.y, r3.x
                mov r3.w, r1.z
                mov r3.z, r1.x
                loop 
                  ge r4.x, r3.z, r1.y
                  breakc_nz r4.x
                  div r4.x, r3.z, r3.y
                  mad r4.x, r4.x, r3.x, r1.w
                  mad r4.x, cb0[2].x, l(0.100000), r4.x
                  div r4.x, r4.x, cb1[0].y
                  sample_l r4.xyzw, r4.x, t0.xyzw, s0, l(0.000000)
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                  add r4.xyz, -r0.xyzx, r4.xyzx
                  dp3 r4.x, r4.xyzx, r4.xyzx
                  min r3.w, r3.w, r4.x
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r1.z, r3.w
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r0.w, r1.z
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mov r1.x, cb0[2].x
            mul r1.yzw, r0.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.200000), r4.z
                  div r4.z, r4.z, cb1[0].y
                  sample_l r5.xyzw, r4.z, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.w, r1.w, l(0.500000), r0.w
            mul r1.yzw, r0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.400000), r4.z
                  div r4.z, r4.z, cb1[0].y
                  sample_l r5.xyzw, r4.z, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.w, r1.w, l(0.250000), r0.w
            mul r1.yzw, r0.xxyz, l(0.000000, 8.000000, 8.000000, 8.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.800000), r4.z
                  div r4.z, r4.z, cb1[0].y
                  sample_l r5.xyzw, r4.z, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.x, r1.w, l(0.125000), r0.w
            mul o0.xyzw, r0.xxxx, l(0.533333, 0.533333, 0.533333, 0.533333)
            ret 
            // Approximately 159 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderFractalVoronoiBump
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandVector                    texture  float4          1d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r0.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r1.z, r3.x, r2.y
              breakc_nz r1.z
              mov r1.z, r0.w
              mov r3.y, r2.z
              loop 
                ge r1.w, r3.y, r2.w
                breakc_nz r1.w
                mul r1.w, r3.y, r3.x
                mov r3.w, r1.z
                mov r3.z, r1.x
                loop 
                  ge r4.x, r3.z, r1.y
                  breakc_nz r4.x
                  div r4.x, r3.z, r3.y
                  mad r4.x, r4.x, r3.x, r1.w
                  mad r4.x, cb0[2].x, l(0.100000), r4.x
                  div r4.x, r4.x, cb1[0].y
                  sample_l r4.xyzw, r4.x, t0.xyzw, s0, l(0.000000)
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                  add r4.xyz, -r0.xyzx, r4.xyzx
                  dp3 r4.x, r4.xyzx, r4.xyzx
                  min r3.w, r3.w, r4.x
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r1.z, r3.w
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r0.w, r1.z
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mov r1.x, cb0[2].x
            mul r1.yzw, r0.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.200000), r4.z
                  div r4.z, r4.z, cb1[0].y
                  sample_l r5.xyzw, r4.z, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.w, r1.w, l(0.500000), r0.w
            mul r1.yzw, r0.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.400000), r4.z
                  div r4.z, r4.z, cb1[0].y
                  sample_l r5.xyzw, r4.z, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.w, r1.w, l(0.250000), r0.w
            mul r1.yzw, r0.xxyz, l(0.000000, 8.000000, 8.000000, 8.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.800000), r4.z
                  div r4.z, r4.z, cb1[0].y
                  sample_l r5.xyzw, r4.z, t0.xyzw, s0, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.x, r1.w, l(0.125000), r0.w
            mad r0.x, r0.x, l(0.533333), l(0.300000)
            min r0.x, r0.x, l(1.000000)
            mul r0.x, r0.x, r0.x
            mul r0.x, r0.x, r0.x
            mad r0.x, -r0.x, r0.x, l(1.000000)
            mul r0.xyz, r0.xxxx, v2.xyzx
            mad o0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 166 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52 [unused]
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4 [unused]
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandVector                    texture  float4          1d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[1], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture1d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            round_ni r1.xyz, r0.xyzx
            add r2.xyzw, r1.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.xy, r1.zzzz, l(-1.000000, 2.000000, 0.000000, 0.000000)
            mov r0.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r1.z, r3.x, r2.y
              breakc_nz r1.z
              mov r1.z, r0.w
              mov r3.y, r2.z
              loop 
                ge r1.w, r3.y, r2.w
                breakc_nz r1.w
                mul r1.w, r3.y, r3.x
                mov r3.w, r1.z
                mov r3.z, r1.x
                loop 
                  ge r4.x, r3.z, r1.y
                  breakc_nz r4.x
                  div r4.x, r3.z, r3.y
                  mad r4.x, r4.x, r3.x, r1.w
                  mad r4.x, cb0[2].x, l(0.100000), r4.x
                  div r4.x, r4.x, cb2[0].y
                  sample_l r4.xyzw, r4.x, t1.xyzw, s1, l(0.000000)
                  add r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
                  add r4.xyz, -r0.xyzx, r4.xyzx
                  dp3 r4.x, r4.xyzx, r4.xyzx
                  min r3.w, r3.w, r4.x
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r1.z, r3.w
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r0.w, r1.z
              add r3.x, r3.x, l(1.000000)
            endloop 
            mad r0.xyz, v0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(100.000000, 100.000000, 100.000000, 0.000000)
            mov r1.x, cb0[2].x
            mul r1.yzw, r0.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000)
            round_ni r1.yzw, r1.yyzw
            add r2.xyzw, r1.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r1.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r1.w, l(100.000000)
            mov r3.x, r2.x
            loop 
              ge r3.w, r3.x, r2.y
              breakc_nz r3.w
              mov r3.w, r1.w
              mov r3.y, r2.z
              loop 
                ge r4.x, r3.y, r2.w
                breakc_nz r4.x
                mul r4.x, r3.y, r3.x
                mov r4.y, r3.w
                mov r3.z, r1.y
                loop 
                  ge r4.z, r3.z, r1.z
                  breakc_nz r4.z
                  div r4.z, r3.z, r3.y
                  mad r4.z, r4.z, r3.x, r4.x
                  mad r4.z, r1.x, l(0.200000), r4.z
                  div r4.z, r4.z, cb2[0].y
                  sample_l r5.xyzw, r4.z, t1.xyzw, s1, l(0.000000)
                  add r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  min r4.y, r4.z, r4.y
                  add r3.z, r3.z, l(1.000000)
                endloop 
                mov r3.w, r4.y
                add r3.y, r3.y, l(1.000000)
              endloop 
              mov r1.w, r3.w
              add r3.x, r3.x, l(1.000000)
            endloop 
            mul r2.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
            round_ni r2.xyz, r2.xyzx
            add r3.xyzw, r2.xxyy, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r2.zzzz, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r2.x, l(100.000000)
            mov r4.x, r3.x
            loop 
              ge r2.y, r4.x, r3.y
              breakc_nz r2.y
              mov r2.y, r2.x
              mov r4.y, r3.z
              loop 
                ge r2.z, r4.y, r3.w
                breakc_nz r2.z
                mul r2.z, r4.y, r4.x
                mov r2.w, r2.y
                mov r4.z, r1.y
                loop 
                  ge r4.w, r4.z, r1.z
                  breakc_nz r4.w
                  div r4.w, r4.z, r4.y
                  mad r4.w, r4.w, r4.x, r2.z
                  mad r4.w, r1.x, l(0.400000), r4.w
                  div r4.w, r4.w, cb2[0].y
                  sample_l r5.xyzw, r4.w, t1.xyzw, s1, l(0.000000)
                  add r6.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r5.xyzx
                  dp3 r4.w, r5.xyzx, r5.xyzx
                  min r2.w, r2.w, r4.w
                  add r4.z, r4.z, l(1.000000)
                endloop 
                mov r2.y, r2.w
                add r4.y, r4.y, l(1.000000)
              endloop 
              mov r2.x, r2.y
              add r4.x, r4.x, l(1.000000)
            endloop 
            mul r2.yzw, r0.xxyz, l(0.000000, 8.000000, 8.000000, 8.000000)
            round_ni r2.yzw, r2.yyzw
            add r3.xyzw, r2.yyzz, l(-1.000000, 2.000000, -1.000000, 2.000000)
            add r1.yz, r2.wwww, l(0.000000, -1.000000, 2.000000, 0.000000)
            mov r2.y, l(100.000000)
            mov r4.x, r3.x
            loop 
              ge r2.z, r4.x, r3.y
              breakc_nz r2.z
              mov r2.z, r2.y
              mov r4.y, r3.z
              loop 
                ge r2.w, r4.y, r3.w
                breakc_nz r2.w
                mul r2.w, r4.y, r4.x
                mov r4.w, r2.z
                mov r4.z, r1.y
                loop 
                  ge r5.x, r4.z, r1.z
                  breakc_nz r5.x
                  div r5.x, r4.z, r4.y
                  mad r5.x, r5.x, r4.x, r2.w
                  mad r5.x, r1.x, l(0.800000), r5.x
                  div r5.x, r5.x, cb2[0].y
                  sample_l r5.xyzw, r5.x, t1.xyzw, s1, l(0.000000)
                  add r6.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                  mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
                  mad r5.xyz, -r0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), r5.xyzx
                  dp3 r5.x, r5.xyzx, r5.xyzx
                  min r4.w, r4.w, r5.x
                  add r4.z, r4.z, l(1.000000)
                endloop 
                mov r2.z, r4.w
                add r4.y, r4.y, l(1.000000)
              endloop 
              mov r2.y, r2.z
              add r4.x, r4.x, l(1.000000)
            endloop 
            if_nz cb1[3].y
              mad r0.x, r1.w, l(0.500000), r0.w
              mad r0.x, r2.x, l(0.250000), r0.x
              mad r0.x, r2.y, l(0.125000), r0.x
              mad r0.x, r0.x, l(0.533333), l(0.300000)
              min r0.x, r0.x, l(1.000000)
              mul r0.x, r0.x, r0.x
              mul r0.x, r0.x, r0.x
              mad r0.x, -r0.x, r0.x, l(1.000000)
              mul r0.xyz, r0.xxxx, v2.yzxy
              mad r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), v0.yzxy
              deriv_rtx r1.xyz, r0.yzxy
              deriv_rty r0.xyz, r0.xyzx
              mul r2.xyz, r0.xyzx, r1.xyzx
              mad r0.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
              dp3 r0.w, r0.xyzx, r0.xyzx
              rsq r0.w, r0.w
              mul r0.xyz, r0.wwww, r0.xyzx
            else 
              div r1.xy, v4.xyxx, cb0[16].xyxx
              sample_l r0.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            endif 
            dp3_sat r0.x, r0.xyzx, cb0[0].xyzx
            add o0.xyzw, r0.xxxx, l(0.100000, 0.100000, 0.100000, 0.100000)
            ret 
            // Approximately 179 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderGridTest
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 2
            mul r0.xyz, v0.xyzx, l(1.950000, 3.900000, 1.950000, 0.000000)
            round_ni r0.w, r0.y
            ftou r0.w, |r0.w|
            and r0.w, r0.w, l(1)
            utof r0.w, r0.w
            mad r0.xyz, r0.wwww, l(0.500000, 0.000000, 0.500000, 0.000000), r0.xyzx
            round_pi r1.xyz, r0.xyzx
            add r1.xyz, r0.xyzx, -r1.xyzx
            add r1.xyz, -|r1.xyzx|, l(0.040000, 0.040000, 0.040000, 0.000000)
            max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.w, r1.xyzx, r1.xyzx
            round_ni r1.xyz, r0.xyzx
            add r0.xyz, r0.xyzx, -r1.xyzx
            add r0.xyz, -|r0.xyzx|, l(0.040000, 0.040000, 0.040000, 0.000000)
            max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, r0.x, r0.w
            mul r0.x, r0.x, l(250.000000)
            min r0.x, r0.x, l(1.000000)
            add o0.xyzw, -r0.xxxx, l(1.000000, 1.000000, 1.000000, 1.000000)
            ret 
            // Approximately 21 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderNoiseTest
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float       
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_output o0.xyzw
            dcl_temps 5
            mul r0.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
            dp3 r0.x, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), r0.xxxx
            round_ni r0.xyz, r0.xyzx
            dp3 r0.w, r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, -r0.wwww, r0.xyzx
            mad r1.xyz, v0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.xyzx, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r4.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            mul r0.w, r0.w, r1.w
            div r3.xyz, r0.xyzx, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r1.xyzx
            dp3 r2.w, r1.xyzx, r1.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r1.w, r0.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.xyzx, r3.xyzx
            add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r0.xyz, r0.xyzx, cb0[0].xxxx
            add r0.xy, r0.zzzz, r0.xyxx
            sample_l r4.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.x, r4.x, l(255.000000)
            ftou r0.x, r0.x
            and r0.x, r0.x, l(15)
            dp3 r0.x, cb0[r0.x + 1].xyzx, r1.xyzx
            dp3 r0.y, r1.xyzx, r1.xyzx
            add r0.y, -r0.y, l(0.600000)
            max r0.y, r0.y, l(0.000000)
            mul r0.y, r0.y, r0.y
            mul r0.y, r0.y, r0.y
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.z, r1.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(15)
            dp3 r0.z, cb0[r0.z + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.z, r1.x, r0.z, r0.w
            mad r0.x, r0.y, r0.x, r0.z
            mul r0.yzw, v0.xxyz, l(0.000000, 32.000000, 32.000000, 32.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 32.000000, 32.000000, 32.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.yzwy, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r3.xyz, r0.yzwy, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb0[r2.w + 1].xyzx, r1.xyzx
            dp3 r3.x, r1.xyzx, r1.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r1.w, r3.x, r2.w, r1.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.yzwy, r3.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r1.xyzx
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.w, r1.x, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mul r0.xy, r0.xyxx, l(32.000000, 32.000000, 0.000000, 0.000000)
            mad r0.x, |r0.y|, l(0.500000), |r0.x|
            mul r0.yzw, v0.xxyz, l(0.000000, 64.000000, 64.000000, 64.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 64.000000, 64.000000, 64.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(64.000000, 64.000000, 64.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.yzwy, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r3.xyz, r0.yzwy, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb0[r2.w + 1].xyzx, r1.xyzx
            dp3 r3.x, r1.xyzx, r1.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r1.w, r3.x, r2.w, r1.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.yzwy, r3.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r1.xyzx
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.w, r1.x, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mul r0.y, r0.y, l(32.000000)
            mad r0.x, |r0.y|, l(0.250000), r0.x
            mul r0.yzw, v0.xxyz, l(0.000000, 128.000000, 128.000000, 128.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, v0.xxyz, l(0.000000, 128.000000, 128.000000, 128.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.x, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r1.xyz, r0.yzwy, -r1.xxxx
            mad r1.xyz, v0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), -r1.xyzx
            ge r2.xyz, r1.xyzx, r1.yzxy
            and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r3.xyz, r2.zxyz, r2.xyzx
            ge r2.xyz, r2.xyzx, r2.zxyz
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r3.xyz, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, r0.yzwy, r4.xyzx
            div r4.xyz, r4.xyzx, cb0[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb0[r1.w + 1].xyzx, r3.xyzx
            dp3 r2.w, r3.xyzx, r3.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r3.xyz, r0.yzwy, cb0[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb0[r2.w + 1].xyzx, r1.xyzx
            dp3 r3.x, r1.xyzx, r1.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r1.w, r3.x, r2.w, r1.w
            and r3.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r2.xyz, r1.xyzx, r2.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r2.xyz, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r3.xyz, r0.yzwy, r3.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb0[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb0[r0.y + 1].xyzx, r1.xyzx
            dp3 r0.z, r1.xyzx, r1.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r1.xyz, r3.xyzx, cb0[0].xxxx
            add r1.xy, r1.zzzz, r1.xyxx
            sample_l r3.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb0[r0.w + 1].xyzx, r2.xyzx
            dp3 r1.x, r2.xyzx, r2.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r0.w, r1.x, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mul r0.y, r0.y, l(32.000000)
            mad r0.x, |r0.y|, l(0.125000), r0.x
            mul o0.xyzw, r0.xxxx, l(0.533333, 0.533333, 0.533333, 0.533333)
            ret 
            // Approximately 308 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

technique10 RenderClouds
{
    pass NORMALPASS
    {
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4 [unused]
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[11], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[3].xyzw
            dp4 o0.y, v0.xyzw, cb0[4].xyzw
            dp4 o0.z, v0.xyzw, cb0[5].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[3].xyzx
            dp3 r0.y, v1.xyzx, cb0[4].xyzx
            dp3 r0.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xyzw, v2.xyxy
            dp4 o4.x, v0.xyzw, cb0[7].xyzw
            dp4 o4.y, v0.xyzw, cb0[8].xyzw
            dp4 o4.z, v0.xyzw, cb0[9].xyzw
            dp4 o4.w, v0.xyzw, cb0[10].xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512 [unused]
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float       
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[3], immediateIndexed
            dcl_constantbuffer CB2[17], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_output o0.xyzw
            dcl_temps 7
            mad r0.x, cb0[2].x, l(0.100000), v0.x
            mov r0.yz, v0.yyzy
            mul r0.w, cb1[0].x, l(8.000000)
            mul r1.xyz, r0.wwww, r0.xyzx
            dp3 r1.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r0.xyzx, r0.wwww, r1.wwww
            round_ni r2.xyz, r2.xyzx
            dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r1.wwww, r2.xyzx
            mad r3.xyz, r0.xyzx, r0.wwww, -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r6.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r5.xyz, r2.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r3.xyzx
            dp3 r3.w, r3.xyzx, r3.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb2[r2.x + 1].xyzx, r3.xyzx
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r2.zw, r3.zzzz, r3.xxxy
            sample_l r3.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb2[r2.z + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.yw, r2.yyyw, r2.yyyw
            mul r2.w, r2.w, r2.w
            mad r1.w, r2.w, r2.z, r1.w
            mad r1.w, r2.y, r2.x, r1.w
            add r2.xyz, r1.xyzx, r1.xyzx
            dp3 r2.x, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xxxx
            round_ni r2.xyz, r2.xyzx
            dp3 r2.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r2.wwww, r2.xyzx
            mad r3.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r6.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r5.xyz, r2.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r5.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb2[r3.w + 1].xyzx, r3.xyzx
            dp3 r4.w, r3.xyzx, r3.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r6.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r6.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb2[r2.x + 1].xyzx, r3.xyzx
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb2[r2.z + 1].xyzx, r4.xyzx
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r2.z, r3.x, r2.z, r2.w
            mad r2.x, r2.y, r2.x, r2.z
            mul r2.x, r2.x, l(16.000000)
            mad r1.w, r1.w, l(32.000000), r2.x
            mul r2.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
            dp3 r2.x, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xxxx
            round_ni r2.xyz, r2.xyzx
            dp3 r2.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r2.wwww, r2.xyzx
            mad r3.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r6.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r5.xyz, r2.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r5.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb2[r3.w + 1].xyzx, r3.xyzx
            dp3 r4.w, r3.xyzx, r3.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r6.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r6.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb2[r2.x + 1].xyzx, r3.xyzx
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb2[r2.z + 1].xyzx, r4.xyzx
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r2.z, r3.x, r2.z, r2.w
            mad r2.x, r2.y, r2.x, r2.z
            mad r1.w, r2.x, l(8.000000), r1.w
            mul r2.xyz, r1.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
            dp3 r2.x, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r1.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), r2.xxxx
            round_ni r2.xyz, r2.xyzx
            dp3 r2.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r2.wwww, r2.xyzx
            mad r3.xyz, r1.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r2.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r6.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r5.xyzx
            dp3 r3.w, r5.xyzx, r5.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r5.xyz, r2.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r5.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb2[r3.w + 1].xyzx, r3.xyzx
            dp3 r4.w, r3.xyzx, r3.xyzx
            add r4.w, -r4.w, l(0.600000)
            max r4.w, r4.w, l(0.000000)
            mul r4.w, r4.w, r4.w
            mul r4.w, r4.w, r4.w
            mad r2.w, r4.w, r3.w, r2.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r6.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r6.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb2[r2.x + 1].xyzx, r3.xyzx
            dp3 r2.y, r3.xyzx, r3.xyzx
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.z, r3.x, l(255.000000)
            ftou r2.z, r2.z
            and r2.z, r2.z, l(15)
            dp3 r2.z, cb2[r2.z + 1].xyzx, r4.xyzx
            dp3 r3.x, r4.xyzx, r4.xyzx
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mad r2.z, r3.x, r2.z, r2.w
            mad r2.x, r2.y, r2.x, r2.z
            mad r1.w, r2.x, l(4.000000), r1.w
            mul r2.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
            dp3 r2.x, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r2.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), r2.xxxx
            round_ni r2.xyz, r2.xyzx
            dp3 r2.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, -r2.wwww, r2.xyzx
            mad r1.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), -r3.xyzx
            ge r3.xyz, r1.xyzx, r1.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r1.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r2.xyzx, r5.xyzx
            div r5.xyz, r5.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r4.xyzx
            dp3 r3.w, r4.xyzx, r4.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mul r2.w, r2.w, r3.w
            div r4.xyz, r2.xyzx, cb2[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.w, r4.x, l(255.000000)
            ftou r3.w, r3.w
            and r3.w, r3.w, l(15)
            dp3 r3.w, cb2[r3.w + 1].xyzx, r1.xyzx
            dp3 r4.x, r1.xyzx, r1.xyzx
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            mad r2.w, r4.x, r3.w, r2.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r1.xyzx, r3.xyzx
            add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r2.xyz, r2.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r5.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r5.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(15)
            dp3 r2.x, cb2[r2.x + 1].xyzx, r1.xyzx
            dp3 r1.x, r1.xyzx, r1.xyzx
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            div r4.xyz, r4.xyzx, cb2[0].xxxx
            add r1.yz, r4.zzzz, r4.xxyx
            sample_l r4.xyzw, r1.yzyy, t0.xyzw, s0, l(0.000000)
            mul r1.y, r4.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(15)
            dp3 r1.y, cb2[r1.y + 1].xyzx, r3.xyzx
            dp3 r1.z, r3.xyzx, r3.xyzx
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.xz, r1.xxzx, r1.xxzx
            mul r1.z, r1.z, r1.z
            mad r1.y, r1.z, r1.y, r2.w
            mad r1.x, r1.x, r2.x, r1.y
            mad r1.x, r1.x, l(2.000000), r1.w
            mad r1.x, r1.x, l(0.258065), l(0.500000)
            mad_sat r1.x, -cb1[2].x, l(0.100000), r1.x
            mad r1.y, -cb1[2].x, l(0.100000), l(1.000000)
            div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
            mul r1.x, r1.z, r1.x
            mul r2.xyz, cb0[0].xyzx, cb1[1].xxxx
            mad r0.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r0.xyzx
            mul r2.xyz, r0.wwww, r0.xyzx
            dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r3.xyz, r0.xyzx, r0.wwww, r1.wwww
            round_ni r3.xyz, r3.xyzx
            dp3 r1.w, r3.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r4.xyz, -r1.wwww, r3.xyzx
            mad r0.xyz, r0.xyzx, r0.wwww, -r4.xyzx
            ge r4.xyz, r0.xyzx, r0.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r0.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r3.xyzx, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r6.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb2[r0.w + 1].xyzx, r5.xyzx
            dp3 r1.w, r5.xyzx, r5.xyzx
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.yw, r1.yyyw, r1.yyyw
            mul r1.w, r1.w, r1.w
            mul r0.w, r0.w, r1.w
            div r5.xyz, r3.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r5.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb2[r1.w + 1].xyzx, r0.xyzx
            dp3 r2.w, r0.xyzx, r0.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r1.w, r0.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r0.xyzx, r4.xyzx
            add r0.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            div r3.xyz, r3.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb2[r1.w + 1].xyzx, r0.xyzx
            dp3 r0.x, r0.xyzx, r0.xyzx
            add r0.x, -r0.x, l(0.600000)
            max r0.x, r0.x, l(0.000000)
            mul r0.x, r0.x, r0.x
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r0.yz, r3.zzzz, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb2[r0.y + 1].xyzx, r4.xyzx
            dp3 r0.z, r4.xyzx, r4.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.xz, r0.xxzx, r0.xxzx
            mul r0.z, r0.z, r0.z
            mad r0.y, r0.z, r0.y, r0.w
            mad r0.x, r0.x, r1.w, r0.y
            add r0.yzw, r2.xxyz, r2.xxyz
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, r2.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.w, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, r0.yzwy, -r1.wwww
            mad r3.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r0.yzwy, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r6.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r5.xyz, r0.yzwy, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r3.xyzx
            dp3 r3.w, r3.xyzx, r3.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r0.yzwy, r5.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb2[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r6.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r6.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb2[r0.y + 1].xyzx, r3.xyzx
            dp3 r0.z, r3.xyzx, r3.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb2[r0.w + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mul r0.y, r0.y, l(16.000000)
            mad r0.x, r0.x, l(32.000000), r0.y
            mul r0.yzw, r2.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, r2.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.w, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, r0.yzwy, -r1.wwww
            mad r3.xyz, r2.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r3.xyzx
            ge r4.xyz, r3.xyzx, r3.yzxy
            and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r5.xyz, r4.zxyz, r4.xyzx
            ge r4.xyz, r4.xyzx, r4.zxyz
            and r6.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r5.xyz, r5.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r5.xyz, r3.xyzx, r5.xyzx
            add r5.xyz, r5.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r6.xyz, r0.yzwy, r6.xyzx
            div r6.xyz, r6.xyzx, cb2[0].xxxx
            add r6.xy, r6.zzzz, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r6.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb2[r1.w + 1].xyzx, r5.xyzx
            dp3 r2.w, r5.xyzx, r5.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r5.xyz, r0.yzwy, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r3.xyzx
            dp3 r3.w, r3.xyzx, r3.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r3.xyzx, r4.xyzx
            add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r5.xyz, r0.yzwy, r5.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb2[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r6.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r6.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb2[r0.y + 1].xyzx, r3.xyzx
            dp3 r0.z, r3.xyzx, r3.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r3.xyz, r5.xyzx, cb2[0].xxxx
            add r3.xy, r3.zzzz, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb2[r0.w + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mad r0.w, r2.w, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mad r0.x, r0.y, l(8.000000), r0.x
            mul r0.yzw, r2.xxyz, l(0.000000, 8.000000, 8.000000, 8.000000)
            dp3 r0.y, r0.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
            mad r0.yzw, r2.xxyz, l(0.000000, 8.000000, 8.000000, 8.000000), r0.yyyy
            round_ni r0.yzw, r0.yyzw
            dp3 r1.w, r0.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r3.xyz, r0.yzwy, -r1.wwww
            mad r2.xyz, r2.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), -r3.xyzx
            ge r3.xyz, r2.xyzx, r2.yzxy
            and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            lt r4.xyz, r3.zxyz, r3.xyzx
            ge r3.xyz, r3.xyzx, r3.zxyz
            and r5.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r4.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r4.xyz, r2.xyzx, r4.xyzx
            add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
            add r5.xyz, r0.yzwy, r5.xyzx
            div r5.xyz, r5.xyzx, cb2[0].xxxx
            add r5.xy, r5.zzzz, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r1.w, r5.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(15)
            dp3 r1.w, cb2[r1.w + 1].xyzx, r4.xyzx
            dp3 r2.w, r4.xyzx, r4.xyzx
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r1.w, r1.w, r2.w
            div r4.xyz, r0.yzwy, cb2[0].xxxx
            add r4.xy, r4.zzzz, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(15)
            dp3 r2.w, cb2[r2.w + 1].xyzx, r2.xyzx
            dp3 r3.w, r2.xyzx, r2.xyzx
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.w, r3.w, r3.w
            mul r3.w, r3.w, r3.w
            mad r1.w, r3.w, r2.w, r1.w
            and r4.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
            movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
            add r3.xyz, r2.xyzx, r3.xyzx
            add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
            add r3.xyz, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
            add r4.xyz, r0.yzwy, r4.xyzx
            add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
            div r0.yzw, r0.yyzw, cb2[0].xxxx
            add r0.yz, r0.wwww, r0.yyzy
            sample_l r5.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r5.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(15)
            dp3 r0.y, cb2[r0.y + 1].xyzx, r2.xyzx
            dp3 r0.z, r2.xyzx, r2.xyzx
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            div r2.xyz, r4.xyzx, cb2[0].xxxx
            add r2.xy, r2.zzzz, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(15)
            dp3 r0.w, cb2[r0.w + 1].xyzx, r3.xyzx
            dp3 r2.x, r3.xyzx, r3.xyzx
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r0.w, r2.x, r0.w, r1.w
            mad r0.y, r0.z, r0.y, r0.w
            mad r0.x, r0.y, l(4.000000), r0.x
            mul r0.y, cb1[2].x, l(0.100000)
            mad r0.x, r0.x, l(0.266667), -r0.y
            add_sat r0.x, r0.x, l(0.500000)
            mul r0.x, r1.z, r0.x
            dp3 r0.y, v2.xyzx, v2.xyzx
            rsq r0.y, r0.y
            mul r0.yzw, r0.yyyy, v2.xxyz
            dp3 r0.y, -r0.yzwy, cb0[0].xyzx
            add_sat r0.y, -r0.y, l(1.000000)
            mul r0.x, r0.y, r0.x
            mad r0.y, -r1.y, r1.y, l(1.000000)
            mul r0.z, r1.y, r1.y
            mad r2.xyzw, r0.zzzz, l(0.300000, 0.300000, -0.300000, 0.000000), l(0.200000, 0.200000, 0.800000, 0.000000)
            mul r0.x, r0.y, r0.x
            mad r0.xyzw, r0.xxxx, l(-0.900000, -0.900000, -0.800000, 0.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
            add r0.xyzw, -r2.yyzw, r0.xyzw
            mad o0.xyzw, r1.xxxx, r0.xyzw, r2.xyzw
            ret 
            // Approximately 709 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullNone;
    }

}

technique10 RenderDisplaced
{
    pass NORMALPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[15], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 9
            dp4 r0.y, v0.xyzw, cb0[4].xyzw
            dp4 r1.x, v0.xyzw, cb0[3].xyzw
            dp4 r1.z, v0.xyzw, cb0[5].xyzw
            mov r0.xz, r1.xxzx
            mov o0.xyz, r0.xyzx
            mov o1.xyz, v0.xyzx
            dp3 r2.x, v1.xyzx, cb0[3].xyzx
            dp3 r2.y, v1.xyzx, cb0[4].xyzx
            dp3 r2.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o2.xyz, r2.xyzx
            mov o3.xzw, v2.xxxy
            mul r0.w, v2.y, cb0[4].y
            mov o3.y, r0.w
            mul r2.w, cb0[2].x, cb1[2].x
            mad r0.w, r2.w, l(0.100000), r0.w
            mad r1.y, cb1[3].x, l(0.200000), r0.w
            mov r1.w, cb0[2].x
            mul r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r0.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r0.w, cb2[r0.w + 17].xyzw, r5.xyzw
            dp4 r2.w, r5.xyzw, r5.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r0.w, r0.w, r2.w
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r5.x, r4.xyzw, r4.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r6.xyzw
            dp4 r5.x, r6.xyzw, r6.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r3.x, r4.xyzw, r4.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r0.w, r3.z, r3.y, r0.w
            mad r0.w, r3.x, r2.w, r0.w
            mul r0.w, r0.w, l(13.500000)
            mul r3.w, cb0[2].x, l(0.050000)
            add r3.xyz, r1.xyzx, r1.xyzx
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r4.xyzw, r2.wwww, r3.xyzw
            round_ni r4.xyzw, r4.xyzw
            dp4 r2.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r2.wwww, r4.xyzw
            add r3.xyzw, r3.xyzw, -r5.xyzw
            ge r5.xy, r3.yyyy, r3.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r3.xxxz, r3.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r4.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r3.xyzw
            dp4 r5.y, r3.xyzw, r3.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            add r6.xyzw, r3.xyzw, -r7.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r5.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            mad r2.w, r3.x, r4.x, r2.w
            mad r0.w, r2.w, l(27.000000), r0.w
            mul r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r4.xyzw
            dp4 r5.y, r4.xyzw, r4.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb2[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb2[r3.z + 17].xyzw, r6.xyzw
            dp4 r3.w, r6.xyzw, r6.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mad r0.w, r2.w, l(6.750000), r0.w
            mul r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r1.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r4.xyzw
            div r4.xyzw, r3.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r1.xyzw
            dp4 r4.x, r1.xyzw, r1.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            ge r4.yz, r1.yyyy, r1.zzwz
            movc r5.xy, r4.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r4.yz, r4.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r4.y, r4.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r1.xxxz, r1.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.zw, r5.xxxy, r7.yyyz
            add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r6.w, r4.z
            add r5.w, r7.w, r4.w
            add r5.y, r4.y, r7.x
            dp3 r5.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r6.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r1.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r4.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r8.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb2[r4.y + 17].xyzw, r6.xyzw
            dp4 r4.z, r6.xyzw, r6.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.xz, r4.xxzx, r4.xxzx
            mul r4.z, r4.z, r4.z
            mul r4.y, r4.y, r4.z
            mad r2.w, r4.x, r2.w, r4.y
            add r4.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r1.xyzw, -r7.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r6.xyzw
            dp4 r4.y, r6.xyzw, r6.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            mad r2.w, r4.y, r4.x, r2.w
            add r4.xyzw, r3.xyzw, r5.xyzw
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            add r5.xyzw, r1.xyzw, -r5.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.xy, r3.xyxx, l(31, 31, 0, 0)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r5.xyzw
            dp4 r3.z, r5.xyzw, r5.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            dp4 r3.x, cb2[r3.x + 17].xyzw, r1.xyzw
            dp4 r1.x, r1.xyzw, r1.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r1.x, r1.x, r3.x, r2.w
            mad r0.w, r1.x, l(3.375000), r0.w
            mul r0.w, r0.w, l(0.533333)
            mul r1.xyz, r0.wwww, r2.xyzx
            add r0.w, -v2.y, l(1.000000)
            mul r0.w, r0.w, l(0.800000)
            mul r1.xyz, r0.wwww, r1.xyzx
            mad r0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
            mov r0.w, l(1.000000)
            dp4 r1.x, r0.xyzw, cb0[11].xyzw
            dp4 r1.y, r0.xyzw, cb0[12].xyzw
            dp4 r1.z, r0.xyzw, cb0[13].xyzw
            dp4 r1.w, r0.xyzw, cb0[14].xyzw
            lt r0.x, v0.y, l(-0.100000)
            movc o4.xyzw, r0.xxxx, l(0,0,0,1.000000), r1.xyzw
            ret 
            // Approximately 438 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float    y  
            // TEXCOORD                 1     zw        3     NONE   float      w
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.y
            dcl_input_ps linear v3.w
            dcl_output o0.xyzw
            dcl_temps 8
            mul r0.w, cb0[2].x, l(0.050000)
            mul r1.x, cb0[2].x, cb1[2].x
            mad r1.x, r1.x, l(0.100000), v3.y
            mad r1.y, cb1[3].x, l(0.200000), r1.x
            mov r1.xz, v0.xxzx
            add r0.xyz, r1.xyzx, r1.xyzx
            dp4 r2.x, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r0.xyzw, r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            add r0.xyzw, r0.xyzw, -r3.xyzw
            ge r3.xy, r0.yyyy, r0.zwzz
            movc r3.zw, r3.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r3.x, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r0.xxxz, r0.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r3.yz, r3.zzwz, r5.yyzy
            add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r4.w, r3.y
            add r6.w, r5.w, r3.z
            add r6.y, r3.x, r5.x
            dp3 r6.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r3.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r4.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.w, r6.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, r3.xyzw
            add r3.xyzw, r0.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb2[0].xxxx
            mad r6.xy, r6.zzzz, r6.wwww, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r6.x, r6.x, l(255.000000)
            ftou r6.x, r6.x
            and r6.x, r6.x, l(31)
            dp4 r6.x, cb2[r6.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mul r3.x, r6.x, r3.x
            div r6.xyzw, r2.xyzw, cb2[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r0.xyzw
            dp4 r3.z, r0.xyzw, r0.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r6.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r0.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r6.xyzw, r6.xyzw, cb2[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r4.xyzw
            dp4 r3.z, r4.xyzw, r4.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r4.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r0.xyzw, -r5.xyzw
            add r0.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r0.xyzw
            dp4 r0.x, r0.xyzw, r0.xyzw
            add r0.x, -r0.x, l(0.600000)
            max r0.x, r0.x, l(0.000000)
            mul r0.x, r0.x, r0.x
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r0.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.xz, r0.xxzx, r0.xxzx
            mul r0.z, r0.z, r0.z
            mad r0.y, r0.z, r0.y, r3.x
            mad r0.x, r0.x, r2.x, r0.y
            mov r1.w, cb0[2].x
            mul r2.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(13.500000)
            mad r0.x, r0.x, l(27.000000), r0.y
            mul r2.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(6.750000), r0.x
            mul r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(3.375000), r0.x
            mul r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(1.687500), r0.x
            mul r2.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            div r3.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.zzzz, r2.xyzw
            mad r1.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), -r3.xyzw
            dp4 r0.y, cb2[r0.y + 17].xyzw, r1.xyzw
            ge r0.zw, r1.yyyy, r1.zzzw
            movc r3.xy, r0.zwzz, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.zw, r0.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
            dp2 r0.z, r0.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r1.xxxz, r1.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r3.xy, r3.xyxx, r5.yzyy
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r4.w, r3.x
            add r6.w, r5.w, r3.y
            add r6.y, r0.z, r5.x
            dp3 r6.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r3.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r4.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.w, r6.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, r3.xyzw
            add r3.xyzw, r1.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb2[0].xxxx
            mad r0.zw, r6.zzzz, r6.wwww, r6.xxxy
            sample_l r6.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r6.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mul r0.z, r0.z, r0.w
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.y, r0.z
            add r3.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r1.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r3.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r4.xyzw
            dp4 r0.w, r4.xyzw, r4.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            add r2.xyzw, r1.xyzw, -r5.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r2.xyzw, r2.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.zw, r0.zzzw, l(0, 0, 31, 31)
            dp4 r0.w, cb2[r0.w + 17].xyzw, r2.xyzw
            dp4 r2.x, r2.xyzw, r2.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r0.y, r2.x, r0.w, r0.y
            dp4 r0.z, cb2[r0.z + 17].xyzw, r1.xyzw
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(0.843750), r0.x
            mul r0.x, r0.x, l(0.507937)
            dp3 r0.y, v2.xyzx, v2.xyzx
            rsq r0.y, r0.y
            mul r0.yzw, r0.yyyy, v2.xxyz
            mul r0.xyz, r0.xxxx, r0.yzwy
            add r0.w, -v3.w, l(1.000000)
            mul r0.w, r0.w, l(0.800000)
            mul r0.xyz, r0.wwww, r0.xyzx
            mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 627 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[15], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 9
            dp4 r0.y, v0.xyzw, cb0[4].xyzw
            dp4 r1.x, v0.xyzw, cb0[3].xyzw
            dp4 r1.z, v0.xyzw, cb0[5].xyzw
            mov r0.xz, r1.xxzx
            mov o0.xyz, r0.xyzx
            mov o1.xyz, v0.xyzx
            dp3 r2.x, v1.xyzx, cb0[3].xyzx
            dp3 r2.y, v1.xyzx, cb0[4].xyzx
            dp3 r2.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o2.xyz, r2.xyzx
            mov o3.xzw, v2.xxxy
            mul r0.w, v2.y, cb0[4].y
            mov o3.y, r0.w
            mul r2.w, cb0[2].x, cb1[2].x
            mad r0.w, r2.w, l(0.100000), r0.w
            mad r1.y, cb1[3].x, l(0.200000), r0.w
            mov r1.w, cb0[2].x
            mul r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r0.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r0.w, cb2[r0.w + 17].xyzw, r5.xyzw
            dp4 r2.w, r5.xyzw, r5.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r0.w, r0.w, r2.w
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r5.x, r4.xyzw, r4.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r6.xyzw
            dp4 r5.x, r6.xyzw, r6.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r3.x, r4.xyzw, r4.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r0.w, r3.z, r3.y, r0.w
            mad r0.w, r3.x, r2.w, r0.w
            mul r0.w, r0.w, l(13.500000)
            mul r3.w, cb0[2].x, l(0.050000)
            add r3.xyz, r1.xyzx, r1.xyzx
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r4.xyzw, r2.wwww, r3.xyzw
            round_ni r4.xyzw, r4.xyzw
            dp4 r2.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r2.wwww, r4.xyzw
            add r3.xyzw, r3.xyzw, -r5.xyzw
            ge r5.xy, r3.yyyy, r3.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r3.xxxz, r3.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r4.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r3.xyzw
            dp4 r5.y, r3.xyzw, r3.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            add r6.xyzw, r3.xyzw, -r7.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r5.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            mad r2.w, r3.x, r4.x, r2.w
            mad r0.w, r2.w, l(27.000000), r0.w
            mul r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r4.xyzw
            dp4 r5.y, r4.xyzw, r4.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb2[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb2[r3.z + 17].xyzw, r6.xyzw
            dp4 r3.w, r6.xyzw, r6.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mad r0.w, r2.w, l(6.750000), r0.w
            mul r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r1.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r4.xyzw
            div r4.xyzw, r3.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r1.xyzw
            dp4 r4.x, r1.xyzw, r1.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            ge r4.yz, r1.yyyy, r1.zzwz
            movc r5.xy, r4.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r4.yz, r4.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r4.y, r4.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r1.xxxz, r1.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.zw, r5.xxxy, r7.yyyz
            add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r6.w, r4.z
            add r5.w, r7.w, r4.w
            add r5.y, r4.y, r7.x
            dp3 r5.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r6.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r1.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r4.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r8.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb2[r4.y + 17].xyzw, r6.xyzw
            dp4 r4.z, r6.xyzw, r6.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.xz, r4.xxzx, r4.xxzx
            mul r4.z, r4.z, r4.z
            mul r4.y, r4.y, r4.z
            mad r2.w, r4.x, r2.w, r4.y
            add r4.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r1.xyzw, -r7.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r6.xyzw
            dp4 r4.y, r6.xyzw, r6.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            mad r2.w, r4.y, r4.x, r2.w
            add r4.xyzw, r3.xyzw, r5.xyzw
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            add r5.xyzw, r1.xyzw, -r5.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.xy, r3.xyxx, l(31, 31, 0, 0)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r5.xyzw
            dp4 r3.z, r5.xyzw, r5.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            dp4 r3.x, cb2[r3.x + 17].xyzw, r1.xyzw
            dp4 r1.x, r1.xyzw, r1.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r1.x, r1.x, r3.x, r2.w
            mad r0.w, r1.x, l(3.375000), r0.w
            mul r0.w, r0.w, l(0.533333)
            mul r1.xyz, r0.wwww, r2.xyzx
            add r0.w, -v2.y, l(1.000000)
            mul r0.w, r0.w, l(0.800000)
            mul r1.xyz, r0.wwww, r1.xyzx
            mad r0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
            mov r0.w, l(1.000000)
            dp4 r1.x, r0.xyzw, cb0[11].xyzw
            dp4 r1.y, r0.xyzw, cb0[12].xyzw
            dp4 r1.z, r0.xyzw, cb0[13].xyzw
            dp4 r1.w, r0.xyzw, cb0[14].xyzw
            lt r0.x, v0.y, l(-0.100000)
            movc o4.xyzw, r0.xxxx, l(0,0,0,1.000000), r1.xyzw
            ret 
            // Approximately 438 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float    y  
            // TEXCOORD                 1     zw        3     NONE   float      w
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.y
            dcl_input_ps linear v3.w
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 12
            mul r0.x, cb0[2].x, l(0.100000)
            mad r0.x, r0.x, cb1[2].x, v3.y
            mad r0.y, cb1[3].x, l(0.200000), r0.x
            mov r0.xz, v0.xxzx
            add r1.xyz, r0.xyzx, r0.xyzx
            mul r1.w, cb0[2].x, l(0.050000)
            dp4 r2.x, r1.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r1.xyzw, r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            add r1.xyzw, r1.xyzw, -r3.xyzw
            ge r3.xyzw, r1.xxxz, r1.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r4.xy, r1.yyyy, r1.zwzz
            and r6.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.z, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r3.x, r4.z
            movc r4.xy, r4.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r3.xy, r3.yzyy, r4.xyxx
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.z, r4.w, r3.x
            add r3.w, r3.w, r3.y
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r1.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r1.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r1.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r2.xyzw, cb2[0].xxxx
            mad r10.xy, r10.zzzz, r10.wwww, r10.xyxx
            sample_l r10.xyzw, r10.xyxx, t1.xyzw, s1, l(0.000000)
            mul r10.x, r10.x, l(255.000000)
            ftou r10.x, r10.x
            and r10.x, r10.x, l(31)
            dp4 r10.y, r1.xyzw, r1.xyzw
            add r10.y, -r10.y, l(0.600000)
            max r10.y, r10.y, l(0.000000)
            mul r10.y, r10.y, r10.y
            mul r10.y, r10.y, r10.y
            dp4 r1.x, cb2[r10.x + 17].xyzw, r1.xyzw
            add r3.xyzw, r2.xyzw, r3.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r6.xyzw, r6.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r6.xyzw
            mul r1.y, r1.y, r1.z
            mad r1.x, r10.y, r1.x, r1.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r7.xyzw, r7.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r7.xyzw
            mad r1.x, r1.z, r1.y, r1.x
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r8.xyzw, r8.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r8.xyzw
            mad r1.x, r1.z, r1.y, r1.x
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r2.zzzz, r2.wwww, r2.xxyx
            sample_l r2.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r9.xyzw, r9.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r9.xyzw
            mad r1.x, r1.z, r1.y, r1.x
            mov r0.w, cb0[2].x
            mul r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r1.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r1.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.yyyy, r2.xyzw
            mad r3.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r3.yyyy, r3.zzwz
            and r5.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r4.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r5.w, r1.y
            add r4.w, r4.w, r1.z
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r11.zzzz, r11.wwww, r11.xxyx
            sample_l r11.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r11.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r3.xyzw, r3.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r3.x, r7.xyzw, r7.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r7.xyzw
            mul r1.w, r1.w, r3.x
            mad r1.y, r1.z, r1.y, r1.w
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r8.xyzw, r8.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r8.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mul r1.y, r1.y, l(13.500000)
            mad r1.x, r1.x, l(27.000000), r1.y
            mul r2.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r1.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r1.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.yyyy, r2.xyzw
            mad r3.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r3.yyyy, r3.zzwz
            and r5.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r4.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r5.w, r1.y
            add r4.w, r4.w, r1.z
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r11.zzzz, r11.wwww, r11.xxyx
            sample_l r11.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r11.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r3.xyzw, r3.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r3.x, r7.xyzw, r7.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r7.xyzw
            mul r1.w, r1.w, r3.x
            mad r1.y, r1.z, r1.y, r1.w
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r8.xyzw, r8.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r8.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(6.750000), r1.x
            mul r2.xyzw, r0.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r1.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r1.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.yyyy, r2.xyzw
            mad r3.xyzw, r0.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r3.yyyy, r3.zzwz
            and r5.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r4.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r5.w, r1.y
            add r4.w, r4.w, r1.z
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r11.zzzz, r11.wwww, r11.xxyx
            sample_l r11.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r11.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r3.xyzw, r3.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r3.x, r7.xyzw, r7.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r7.xyzw
            mul r1.w, r1.w, r3.x
            mad r1.y, r1.z, r1.y, r1.w
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r8.xyzw, r8.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r8.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(3.375000), r1.x
            mul r2.xyzw, r0.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000)
            dp4 r1.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), r1.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.yyyy, r2.xyzw
            mad r3.xyzw, r0.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r3.yyyy, r3.zzwz
            and r5.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r4.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r5.w, r1.y
            add r4.w, r4.w, r1.z
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r11.zzzz, r11.wwww, r11.xxyx
            sample_l r11.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r11.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r3.xyzw, r3.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r3.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r3.x, r7.xyzw, r7.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r7.xyzw
            mul r1.w, r1.w, r3.x
            mad r1.y, r1.z, r1.y, r1.w
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r8.xyzw, r8.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r8.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r2.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(1.687500), r1.x
            mul r2.xyzw, r0.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000)
            dp4 r1.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r0.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), r1.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r1.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r1.yyyy, r2.xyzw
            mad r0.xyzw, r0.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), -r3.xyzw
            ge r3.xyzw, r0.xxxz, r0.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r0.yyyy, r0.zzwz
            and r4.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r1.w, r3.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r3.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r5.z, r4.w, r1.y
            add r3.w, r3.w, r1.z
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r0.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r0.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r0.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r10.zzzz, r10.wwww, r10.xxyx
            sample_l r10.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r10.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r0.xyzw, r0.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r0.x, cb2[r1.y + 17].xyzw, r0.xyzw
            add r3.xyzw, r2.xyzw, r3.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r6.xyzw, r6.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r6.xyzw
            mul r0.y, r0.y, r0.z
            mad r0.x, r1.z, r0.x, r0.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r7.xyzw, r7.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r7.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r8.xyzw, r8.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r8.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.yz, r2.zzzz, r2.wwww, r2.xxyx
            sample_l r2.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r2.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r9.xyzw, r9.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r9.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            mad r0.x, r0.x, l(0.843750), r1.x
            if_nz cb1[3].y
              mul r0.y, r0.x, l(0.507937)
              add r0.z, -v3.w, l(1.000000)
              mul r0.z, r0.z, l(0.800000)
              dp3 r0.w, v2.xyzx, v2.xyzx
              rsq r0.w, r0.w
              mul r1.xyz, r0.wwww, v2.yzxy
              mul r1.xyz, r0.yyyy, r1.xyzx
              mul r0.yzw, r0.zzzz, r1.xxyz
              mad r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), v0.yyzx
              deriv_rtx r1.xyz, r0.zwyz
              deriv_rty r0.yzw, r0.yyzw
              mul r2.xyz, r0.yzwy, r1.xyzx
              mad r0.yzw, r1.zzxy, r0.zzwy, -r2.xxyz
              dp3 r1.x, r0.yzwy, r0.yzwy
              rsq r1.x, r1.x
              mul r1.xyz, r0.yzwy, r1.xxxx
            else 
              div r0.yz, v4.xxyx, cb0[16].xxyx
              sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            endif 
            dp3 r0.y, r1.xyzx, cb0[0].xyzx
            add r0.y, r0.y, l(0.200000)
            mul_sat r0.y, r0.y, l(0.833333)
            max r0.y, r0.y, l(0.100000)
            mul r1.xyz, v1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
            mul r1.w, cb0[2].x, l(0.300000)
            dp4 r0.z, r1.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r0.zzzz, r1.xyzw
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.z, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.zzzz, r2.xyzw
            add r1.xyzw, r1.xyzw, -r3.xyzw
            ge r3.xyzw, r1.xxxz, r1.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r0.zw, r1.yyyy, r1.zzzw
            and r4.xy, r0.zwzz, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.x, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r3.x, r4.x
            movc r0.zw, r0.zzzw, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            add r0.zw, r0.zzzw, r3.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r4.w, r0.z
            add r3.w, r3.w, r0.w
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r1.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r1.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r1.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r10.zzzz, r10.wwww, r10.xxxy
            sample_l r10.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r10.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp4 r0.z, cb2[r0.z + 17].xyzw, r1.xyzw
            add r1.xyzw, r2.xyzw, r3.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r6.xyzw, r6.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r6.xyzw
            mul r1.x, r1.x, r1.y
            mad r0.z, r0.w, r0.z, r1.x
            add r1.xyzw, r2.xyzw, r5.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r1.x, r7.xyzw, r7.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r7.xyzw
            mad r0.z, r1.x, r0.w, r0.z
            add r1.xyzw, r2.xyzw, r4.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r1.x, r8.xyzw, r8.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r8.xyzw
            mad r0.z, r1.x, r0.w, r0.z
            add r1.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r1.x, r9.xyzw, r9.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r9.xyzw
            mad r0.z, r1.x, r0.w, r0.z
            mov r1.xyz, v1.xyzx
            mov r1.w, cb0[2].x
            mul r2.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.600000)
            dp4 r0.w, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.600000), r0.wwww
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.w, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.wwww, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.600000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r3.yyyy, r3.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r0.w, r4.x
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r11.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r11.x, r3.xyzw, r3.xyzw
            add r11.x, -r11.x, l(0.600000)
            max r11.x, r11.x, l(0.000000)
            mul r11.x, r11.x, r11.x
            mul r11.x, r11.x, r11.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r7.xyzw, r7.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r7.xyzw
            mul r3.x, r3.x, r3.y
            mad r0.w, r11.x, r0.w, r3.x
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r8.xyzw, r8.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r8.xyzw
            mad r0.w, r3.y, r3.x, r0.w
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r9.xyzw, r9.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r9.xyzw
            mad r0.w, r3.y, r3.x, r0.w
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r10.xyzw, r10.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r10.xyzw
            mad r0.w, r2.y, r2.x, r0.w
            mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 27.000000, 27.000000)
            mad r0.z, |r0.w|, l(0.500000), |r0.z|
            mul r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 1.200000)
            dp4 r0.w, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 1.200000), r0.wwww
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.w, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.wwww, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 1.200000), -r3.xyzw
            ge r4.xyzw, r3.xxxz, r3.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r3.yyyy, r3.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r0.w, r4.x
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r3.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r3.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r3.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r2.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r11.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r11.x, r3.xyzw, r3.xyzw
            add r11.x, -r11.x, l(0.600000)
            max r11.x, r11.x, l(0.000000)
            mul r11.x, r11.x, r11.x
            mul r11.x, r11.x, r11.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r3.xyzw
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r7.xyzw, r7.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r7.xyzw
            mul r3.x, r3.x, r3.y
            mad r0.w, r11.x, r0.w, r3.x
            add r3.xyzw, r2.xyzw, r6.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r8.xyzw, r8.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r8.xyzw
            mad r0.w, r3.y, r3.x, r0.w
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r9.xyzw, r9.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r9.xyzw
            mad r0.w, r3.y, r3.x, r0.w
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r10.xyzw, r10.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r10.xyzw
            mad r0.w, r2.y, r2.x, r0.w
            mul r0.w, r0.w, l(27.000000)
            mad r0.z, |r0.w|, l(0.250000), r0.z
            mul r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 2.400000)
            dp4 r0.w, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 2.400000), r0.wwww
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.w, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.wwww, r2.xyzw
            mad r1.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 2.400000), -r3.xyzw
            ge r3.xyzw, r1.xxxz, r1.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r4.xy, r1.yyyy, r1.zwzz
            and r6.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r0.w, r3.x
            movc r4.xy, r4.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r3.xy, r3.yzyy, r4.xyxx
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.z, r4.w, r3.x
            add r3.w, r3.w, r3.y
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r1.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r1.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r1.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r2.xyzw, cb2[0].xxxx
            mad r10.xy, r10.zzzz, r10.wwww, r10.xyxx
            sample_l r10.xyzw, r10.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r10.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r10.x, r1.xyzw, r1.xyzw
            add r10.x, -r10.x, l(0.600000)
            max r10.x, r10.x, l(0.000000)
            mul r10.x, r10.x, r10.x
            mul r10.x, r10.x, r10.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r1.xyzw
            add r1.xyzw, r2.xyzw, r3.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r6.xyzw, r6.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r6.xyzw
            mul r1.x, r1.x, r1.y
            mad r0.w, r10.x, r0.w, r1.x
            add r1.xyzw, r2.xyzw, r5.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r7.xyzw, r7.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r7.xyzw
            mad r0.w, r1.y, r1.x, r0.w
            add r1.xyzw, r2.xyzw, r4.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r8.xyzw, r8.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r8.xyzw
            mad r0.w, r1.y, r1.x, r0.w
            add r1.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r9.xyzw, r9.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r9.xyzw
            mad r0.w, r1.y, r1.x, r0.w
            mul r0.w, r0.w, l(27.000000)
            mad r0.z, |r0.w|, l(0.125000), r0.z
            mad r1.xyzw, r0.zzzz, l(0.053333, -0.293333, 0.000000, -0.533333), l(0.900000, 0.550000, 0.000000, 1.000000)
            mov r2.xyz, v1.xyzx
            mul r2.w, cb0[2].x, l(0.100000)
            dp4 r0.z, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r3.xyzw, r0.zzzz, r2.xyzw
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.z, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.zzzz, r3.xyzw
            add r2.xyzw, r2.xyzw, -r4.xyzw
            ge r4.xyzw, r2.xxxz, r2.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r0.zw, r2.yyyy, r2.zzzw
            and r5.xy, r0.zwzz, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.x, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r4.x, r5.x
            movc r0.zw, r0.zzzw, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            add r0.zw, r0.zzzw, r4.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r6.z, r5.w, r0.z
            add r4.w, r4.w, r0.w
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r2.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r2.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.zw, r11.zzzz, r11.wwww, r11.xxxy
            sample_l r11.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r11.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.w, r2.xyzw, r2.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp4 r0.z, cb2[r0.z + 17].xyzw, r2.xyzw
            add r2.xyzw, r3.xyzw, r4.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r7.xyzw, r7.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r7.xyzw
            mul r2.x, r2.x, r2.y
            mad r0.z, r0.w, r0.z, r2.x
            add r2.xyzw, r3.xyzw, r6.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r2.x, r8.xyzw, r8.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r8.xyzw
            mad r0.z, r2.x, r0.w, r0.z
            add r2.xyzw, r3.xyzw, r5.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r2.x, r9.xyzw, r9.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r9.xyzw
            mad r0.z, r2.x, r0.w, r0.z
            add r2.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r2.x, r10.xyzw, r10.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r10.xyzw
            mad r0.z, r2.x, r0.w, r0.z
            mul r0.z, r0.z, l(27.000000)
            mad r0.x, r0.x, l(0.253968), l(0.500000)
            add r0.w, r0.x, r0.x
            mul r0.w, r0.w, r0.w
            mul r2.x, r0.w, r0.w
            mul r0.w, r0.w, r2.x
            min r0.w, r0.w, l(1.000000)
            mad r2.xyzw, |r0.zzzz|, l(0.100000, 0.000000, -0.100000, 0.000000), l(0.200000, 0.200000, 0.200000, 0.000000)
            mad r2.xyzw, r0.wwww, r2.xyzw, l(0.100000, 0.100000, 0.100000, 1.000000)
            div r0.x, r0.x, cb1[0].x
            add r0.z, -v1.y, l(0.700000)
            max r0.z, r0.z, l(0.000000)
            add r0.x, r0.z, r0.x
            log r0.x, r0.x
            mul r0.x, r0.x, cb1[1].x
            exp r0.x, r0.x
            min r0.x, r0.x, l(1.000000)
            mad r2.xyzw, r2.xyzw, r0.yyyy, -r1.xyzw
            mad o0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
            ret 
            // Approximately 1190 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass NORMALPASS2
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[15], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 9
            dp4 r0.y, v0.xyzw, cb0[4].xyzw
            dp4 r1.x, v0.xyzw, cb0[3].xyzw
            dp4 r1.z, v0.xyzw, cb0[5].xyzw
            mov r0.xz, r1.xxzx
            mov o0.xyz, r0.xyzx
            mov o1.xyz, v0.xyzx
            dp3 r2.x, v1.xyzx, cb0[3].xyzx
            dp3 r2.y, v1.xyzx, cb0[4].xyzx
            dp3 r2.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o2.xyz, r2.xyzx
            mov o3.xzw, v2.xxxy
            mul r0.w, v2.y, cb0[4].y
            mov o3.y, r0.w
            mul r2.w, cb0[2].x, cb1[2].x
            mad r0.w, r2.w, l(-0.100000), r0.w
            mad r1.y, cb1[3].x, l(-0.200000), r0.w
            mov r1.w, cb0[2].x
            mul r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r0.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r0.w, cb2[r0.w + 17].xyzw, r5.xyzw
            dp4 r2.w, r5.xyzw, r5.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r0.w, r0.w, r2.w
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r5.x, r4.xyzw, r4.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r6.xyzw
            dp4 r5.x, r6.xyzw, r6.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r3.x, r4.xyzw, r4.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r0.w, r3.z, r3.y, r0.w
            mad r0.w, r3.x, r2.w, r0.w
            mul r0.w, r0.w, l(13.500000)
            mul r3.w, cb0[2].x, l(0.050000)
            add r3.xyz, r1.xyzx, r1.xyzx
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r4.xyzw, r2.wwww, r3.xyzw
            round_ni r4.xyzw, r4.xyzw
            dp4 r2.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r2.wwww, r4.xyzw
            add r3.xyzw, r3.xyzw, -r5.xyzw
            ge r5.xy, r3.yyyy, r3.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r3.xxxz, r3.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r4.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r3.xyzw
            dp4 r5.y, r3.xyzw, r3.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            add r6.xyzw, r3.xyzw, -r7.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r5.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            mad r2.w, r3.x, r4.x, r2.w
            mad r0.w, r2.w, l(27.000000), r0.w
            mul r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r4.xyzw
            dp4 r5.y, r4.xyzw, r4.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb2[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb2[r3.z + 17].xyzw, r6.xyzw
            dp4 r3.w, r6.xyzw, r6.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mad r0.w, r2.w, l(6.750000), r0.w
            mul r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r1.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r4.xyzw
            div r4.xyzw, r3.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r1.xyzw
            dp4 r4.x, r1.xyzw, r1.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            ge r4.yz, r1.yyyy, r1.zzwz
            movc r5.xy, r4.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r4.yz, r4.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r4.y, r4.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r1.xxxz, r1.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.zw, r5.xxxy, r7.yyyz
            add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r6.w, r4.z
            add r5.w, r7.w, r4.w
            add r5.y, r4.y, r7.x
            dp3 r5.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r6.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r1.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r4.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r8.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb2[r4.y + 17].xyzw, r6.xyzw
            dp4 r4.z, r6.xyzw, r6.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.xz, r4.xxzx, r4.xxzx
            mul r4.z, r4.z, r4.z
            mul r4.y, r4.y, r4.z
            mad r2.w, r4.x, r2.w, r4.y
            add r4.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r1.xyzw, -r7.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r6.xyzw
            dp4 r4.y, r6.xyzw, r6.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            mad r2.w, r4.y, r4.x, r2.w
            add r4.xyzw, r3.xyzw, r5.xyzw
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            add r5.xyzw, r1.xyzw, -r5.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.xy, r3.xyxx, l(31, 31, 0, 0)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r5.xyzw
            dp4 r3.z, r5.xyzw, r5.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            dp4 r3.x, cb2[r3.x + 17].xyzw, r1.xyzw
            dp4 r1.x, r1.xyzw, r1.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r1.x, r1.x, r3.x, r2.w
            mad r0.w, r1.x, l(3.375000), r0.w
            mul r0.w, r0.w, l(0.533333)
            mul r1.xyz, r0.wwww, r2.xyzx
            mad r0.xyz, r1.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
            mov r0.w, l(1.000000)
            dp4 r1.x, r0.xyzw, cb0[11].xyzw
            dp4 r1.y, r0.xyzw, cb0[12].xyzw
            dp4 r1.z, r0.xyzw, cb0[13].xyzw
            dp4 r1.w, r0.xyzw, cb0[14].xyzw
            lt r0.x, v0.y, l(-0.100000)
            movc o4.xyzw, r0.xxxx, l(0,0,0,1.000000), r1.xyzw
            ret 
            // Approximately 435 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float       
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float    y  
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[3], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.y
            dcl_output o0.xyzw
            dcl_temps 8
            mul r0.w, cb0[2].x, l(0.050000)
            mul r1.x, cb0[2].x, cb1[2].x
            mad r1.x, r1.x, l(-0.100000), v3.y
            mad r1.y, cb1[3].x, l(-0.200000), r1.x
            mov r1.xz, v0.xxzx
            add r0.xyz, r1.xyzx, r1.xyzx
            dp4 r2.x, r0.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r0.xyzw, r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            add r0.xyzw, r0.xyzw, -r3.xyzw
            ge r3.xy, r0.yyyy, r0.zwzz
            movc r3.zw, r3.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r3.x, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r0.xxxz, r0.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r3.yz, r3.zzwz, r5.yyzy
            add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r4.w, r3.y
            add r6.w, r5.w, r3.z
            add r6.y, r3.x, r5.x
            dp3 r6.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r3.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r4.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.w, r6.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, r3.xyzw
            add r3.xyzw, r0.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb2[0].xxxx
            mad r6.xy, r6.zzzz, r6.wwww, r6.xyxx
            sample_l r6.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
            mul r6.x, r6.x, l(255.000000)
            ftou r6.x, r6.x
            and r6.x, r6.x, l(31)
            dp4 r6.x, cb2[r6.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            mul r3.x, r3.x, r3.x
            mul r3.x, r6.x, r3.x
            div r6.xyzw, r2.xyzw, cb2[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r0.xyzw
            dp4 r3.z, r0.xyzw, r0.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r6.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r0.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r6.xyzw, r6.xyzw, cb2[0].xxxx
            mad r3.yz, r6.zzzz, r6.wwww, r6.xxyx
            sample_l r6.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r6.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r4.xyzw
            dp4 r3.z, r4.xyzw, r4.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r3.x, r3.z, r3.y, r3.x
            add r4.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r0.xyzw, -r5.xyzw
            add r0.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r0.xyzw
            dp4 r0.x, r0.xyzw, r0.xyzw
            add r0.x, -r0.x, l(0.600000)
            max r0.x, r0.x, l(0.000000)
            mul r0.x, r0.x, r0.x
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r0.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.xz, r0.xxzx, r0.xxzx
            mul r0.z, r0.z, r0.z
            mad r0.y, r0.z, r0.y, r3.x
            mad r0.x, r0.x, r2.x, r0.y
            mov r1.w, cb0[2].x
            mul r2.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mul r0.y, r0.y, l(13.500000)
            mad r0.x, r0.x, l(27.000000), r0.y
            mul r2.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(6.750000), r0.x
            mul r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(3.375000), r0.x
            mul r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            dp4 r0.y, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.yyyy, r2.xyzw
            mad r3.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), -r3.xyzw
            ge r0.yz, r3.yyyy, r3.zzwz
            movc r4.xy, r0.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r0.y, r0.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r5.xyzw, r3.xxxz, r3.yzww
            movc r6.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r0.zw, r4.xxxy, r6.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r4.z, r5.w, r0.z
            add r4.w, r6.w, r0.w
            add r4.y, r0.y, r6.x
            dp3 r4.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.w, r4.w, l(1.000000)
            min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r7.xyzw, r7.xyzw, cb2[0].xxxx
            mad r0.yz, r7.zzzz, r7.wwww, r7.xxyx
            sample_l r7.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r7.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.y, cb2[r0.y + 17].xyzw, r5.xyzw
            dp4 r0.z, r5.xyzw, r5.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            mul r0.y, r0.y, r0.z
            div r5.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r0.zw, r5.zzzz, r5.wwww, r5.xxxy
            sample_l r5.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r5.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r6.xyzw
            dp4 r0.w, r6.xyzw, r6.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r5.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, -r4.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r4.xyzw, r4.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            div r2.xyzw, r5.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.x, cb2[r2.x + 17].xyzw, r4.xyzw
            dp4 r2.y, r4.xyzw, r4.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            mad r0.y, r2.y, r2.x, r0.y
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(1.687500), r0.x
            mul r2.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000)
            dp4 r0.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r2.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), r0.yyyy
            round_ni r2.xyzw, r2.xyzw
            div r3.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, -r0.zzzz, r2.xyzw
            mad r1.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), -r3.xyzw
            dp4 r0.y, cb2[r0.y + 17].xyzw, r1.xyzw
            ge r0.zw, r1.yyyy, r1.zzzw
            movc r3.xy, r0.zwzz, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r0.zw, r0.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
            dp2 r0.z, r0.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r4.xyzw, r1.xxxz, r1.yzww
            movc r5.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r3.xy, r3.xyxx, r5.yzyy
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r4.w, r3.x
            add r6.w, r5.w, r3.y
            add r6.y, r0.z, r5.x
            dp3 r6.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r3.xyzw, r6.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r4.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r6.w, r6.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r2.xyzw, r3.xyzw
            add r3.xyzw, r1.xyzw, -r3.xyzw
            add r3.xyzw, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r6.xyzw, r6.xyzw, cb2[0].xxxx
            mad r0.zw, r6.zzzz, r6.wwww, r6.xxxy
            sample_l r6.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r6.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, r3.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mul r0.z, r0.z, r0.w
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.y, r0.z
            add r3.xyzw, r2.xyzw, r4.xyzw
            add r4.xyzw, r1.xyzw, -r4.xyzw
            add r4.xyzw, r4.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r3.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.z, cb2[r0.z + 17].xyzw, r4.xyzw
            dp4 r0.w, r4.xyzw, r4.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r0.zw, r2.zzzz, r2.wwww, r2.xxxy
            sample_l r2.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
            mul r0.z, r2.x, l(255.000000)
            ftou r0.z, r0.z
            add r2.xyzw, r1.xyzw, -r5.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r2.xyzw, r2.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r3.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.zw, r0.zzzw, l(0, 0, 31, 31)
            dp4 r0.w, cb2[r0.w + 17].xyzw, r2.xyzw
            dp4 r2.x, r2.xyzw, r2.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            mad r0.y, r2.x, r0.w, r0.y
            dp4 r0.z, cb2[r0.z + 17].xyzw, r1.xyzw
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            mad r0.y, r0.w, r0.z, r0.y
            mad r0.x, r0.y, l(0.843750), r0.x
            mul r0.x, r0.x, l(0.507937)
            dp3 r0.y, v2.xyzx, v2.xyzx
            rsq r0.y, r0.y
            mul r0.yzw, r0.yyyy, v2.xxyz
            mul r0.xyz, r0.xxxx, r0.yzwy
            mad o0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), v0.xyzx
            mov o0.w, l(0)
            ret 
            // Approximately 624 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

    pass DIFFUSEPASS2
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12 [unused]
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16 [unused]
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4 [unused]
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samWrap                         sampler      NA          NA             s0      1 
            // g_txRandomByte                    texture   float          2d             t0      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TEXCOORD                 1     zw        3     NONE   float     zw
            // SV_POSITION              0   xyzw        4      POS   float   xyzw
            //
            vs_4_0
            dcl_constantbuffer CB0[15], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output o0.xyz
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o3.zw
            dcl_output_siv o4.xyzw, position
            dcl_temps 9
            dp4 r0.y, v0.xyzw, cb0[4].xyzw
            dp4 r1.x, v0.xyzw, cb0[3].xyzw
            dp4 r1.z, v0.xyzw, cb0[5].xyzw
            mov r0.xz, r1.xxzx
            mov o0.xyz, r0.xyzx
            mov o1.xyz, v0.xyzx
            dp3 r2.x, v1.xyzx, cb0[3].xyzx
            dp3 r2.y, v1.xyzx, cb0[4].xyzx
            dp3 r2.z, v1.xyzx, cb0[5].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            mov o2.xyz, r2.xyzx
            mov o3.xzw, v2.xxxy
            mul r0.w, v2.y, cb0[4].y
            mov o3.y, r0.w
            mul r2.w, cb0[2].x, cb1[2].x
            mad r0.w, r2.w, l(-0.100000), r0.w
            mad r1.y, cb1[3].x, l(-0.200000), r0.w
            mov r1.w, cb0[2].x
            mul r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r0.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r0.w, r8.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r0.w, cb2[r0.w + 17].xyzw, r5.xyzw
            dp4 r2.w, r5.xyzw, r5.xyzw
            add r2.w, -r2.w, l(0.600000)
            max r2.w, r2.w, l(0.000000)
            mul r2.w, r2.w, r2.w
            mul r2.w, r2.w, r2.w
            mul r0.w, r0.w, r2.w
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r5.x, r4.xyzw, r4.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r5.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r6.xyzw
            dp4 r5.x, r6.xyzw, r6.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mad r0.w, r5.x, r2.w, r0.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r3.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r4.xyzw
            dp4 r3.x, r4.xyzw, r4.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r0.w, r3.z, r3.y, r0.w
            mad r0.w, r3.x, r2.w, r0.w
            mul r0.w, r0.w, l(13.500000)
            mul r3.w, cb0[2].x, l(0.050000)
            add r3.xyz, r1.xyzx, r1.xyzx
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r4.xyzw, r2.wwww, r3.xyzw
            round_ni r4.xyzw, r4.xyzw
            dp4 r2.w, r4.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r5.xyzw, -r2.wwww, r4.xyzw
            add r3.xyzw, r3.xyzw, -r5.xyzw
            ge r5.xy, r3.yyyy, r3.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r3.xxxz, r3.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, r5.xyzw
            add r5.xyzw, r3.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r4.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r3.xyzw
            dp4 r5.y, r3.xyzw, r3.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r6.xyzw
            add r6.xyzw, r3.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r4.xyzw, r7.xyzw
            add r6.xyzw, r3.xyzw, -r7.xyzw
            add r3.xyzw, r3.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r3.xyzw
            dp4 r3.x, r3.xyzw, r3.xyzw
            add r3.x, -r3.x, l(0.600000)
            max r3.x, r3.x, l(0.000000)
            mul r3.x, r3.x, r3.x
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.yz, r5.zzzz, r5.wwww, r5.xxyx
            sample_l r5.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r5.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.y, r3.y, l(31)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r6.xyzw
            dp4 r3.z, r6.xyzw, r6.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.xz, r3.xxzx, r3.xxzx
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            mad r2.w, r3.x, r4.x, r2.w
            mad r0.w, r2.w, l(27.000000), r0.w
            mul r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r4.xyzw
            ge r5.xy, r4.yyyy, r4.zwzz
            movc r5.zw, r5.xxxy, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            and r5.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r2.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r4.xxxz, r4.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r5.xy, r5.zwzz, r7.yzyy
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r8.z, r6.w, r5.x
            add r8.w, r7.w, r5.y
            add r8.y, r2.w, r7.x
            dp3 r8.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r5.xyzw, r8.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r6.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r8.w, r8.w, l(1.000000)
            min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r5.xyzw
            add r5.xyzw, r4.xyzw, -r5.xyzw
            add r5.xyzw, r5.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r8.xy, r8.zzzz, r8.wwww, r8.xyxx
            sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r8.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r5.xyzw
            dp4 r5.x, r5.xyzw, r5.xyzw
            add r5.x, -r5.x, l(0.600000)
            max r5.x, r5.x, l(0.000000)
            mul r5.x, r5.x, r5.x
            mul r5.x, r5.x, r5.x
            mul r2.w, r2.w, r5.x
            div r5.xyzw, r3.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r4.xyzw
            dp4 r5.y, r4.xyzw, r4.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r4.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r5.xyzw, r5.xyzw, cb2[0].xxxx
            mad r5.xy, r5.zzzz, r5.wwww, r5.xyxx
            sample_l r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
            mul r5.x, r5.x, l(255.000000)
            ftou r5.x, r5.x
            and r5.x, r5.x, l(31)
            dp4 r5.x, cb2[r5.x + 17].xyzw, r6.xyzw
            dp4 r5.y, r6.xyzw, r6.xyzw
            add r5.y, -r5.y, l(0.600000)
            max r5.y, r5.y, l(0.000000)
            mul r5.y, r5.y, r5.y
            mul r5.y, r5.y, r5.y
            mad r2.w, r5.y, r5.x, r2.w
            add r5.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r4.xyzw, -r7.xyzw
            add r4.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r6.xyzw, r6.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.x, cb2[r3.x + 17].xyzw, r4.xyzw
            dp4 r3.y, r4.xyzw, r4.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            div r4.xyzw, r5.xyzw, cb2[0].xxxx
            mad r3.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
            mul r3.z, r4.x, l(255.000000)
            ftou r3.z, r3.z
            and r3.z, r3.z, l(31)
            dp4 r3.z, cb2[r3.z + 17].xyzw, r6.xyzw
            dp4 r3.w, r6.xyzw, r6.xyzw
            add r3.w, -r3.w, l(0.600000)
            max r3.w, r3.w, l(0.000000)
            mul r3.yw, r3.yyyw, r3.yyyw
            mul r3.w, r3.w, r3.w
            mad r2.w, r3.w, r3.z, r2.w
            mad r2.w, r3.y, r3.x, r2.w
            mad r0.w, r2.w, l(6.750000), r0.w
            mul r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r2.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r2.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r2.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r2.wwww, r3.xyzw
            mad r1.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r4.xyzw
            div r4.xyzw, r3.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r2.w, r4.x, l(255.000000)
            ftou r2.w, r2.w
            and r2.w, r2.w, l(31)
            dp4 r2.w, cb2[r2.w + 17].xyzw, r1.xyzw
            dp4 r4.x, r1.xyzw, r1.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            ge r4.yz, r1.yyyy, r1.zzwz
            movc r5.xy, r4.yzyy, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            and r4.yz, r4.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
            dp2 r4.y, r4.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r6.xyzw, r1.xxxz, r1.yzww
            movc r7.xyzw, r6.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            add r4.zw, r5.xxxy, r7.yyyz
            add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r5.z, r6.w, r4.z
            add r5.w, r7.w, r4.w
            add r5.y, r4.y, r7.x
            dp3 r5.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            add r6.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.w, r5.w, l(1.000000)
            min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r3.xyzw, r6.xyzw
            add r6.xyzw, r1.xyzw, -r6.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            div r8.xyzw, r8.xyzw, cb2[0].xxxx
            mad r4.yz, r8.zzzz, r8.wwww, r8.xxyx
            sample_l r8.xyzw, r4.yzyy, t0.xyzw, s0, l(0.000000)
            mul r4.y, r8.x, l(255.000000)
            ftou r4.y, r4.y
            and r4.y, r4.y, l(31)
            dp4 r4.y, cb2[r4.y + 17].xyzw, r6.xyzw
            dp4 r4.z, r6.xyzw, r6.xyzw
            add r4.z, -r4.z, l(0.600000)
            max r4.z, r4.z, l(0.000000)
            mul r4.xz, r4.xxzx, r4.xxzx
            mul r4.z, r4.z, r4.z
            mul r4.y, r4.y, r4.z
            mad r2.w, r4.x, r2.w, r4.y
            add r4.xyzw, r3.xyzw, r7.xyzw
            add r6.xyzw, r1.xyzw, -r7.xyzw
            add r6.xyzw, r6.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.x, cb2[r4.x + 17].xyzw, r6.xyzw
            dp4 r4.y, r6.xyzw, r6.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            mad r2.w, r4.y, r4.x, r2.w
            add r4.xyzw, r3.xyzw, r5.xyzw
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            add r5.xyzw, r1.xyzw, -r5.xyzw
            add r1.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            add r5.xyzw, r5.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r3.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
            mul r3.y, r4.x, l(255.000000)
            ftou r3.y, r3.y
            and r3.xy, r3.xyxx, l(31, 31, 0, 0)
            dp4 r3.y, cb2[r3.y + 17].xyzw, r5.xyzw
            dp4 r3.z, r5.xyzw, r5.xyzw
            add r3.z, -r3.z, l(0.600000)
            max r3.z, r3.z, l(0.000000)
            mul r3.z, r3.z, r3.z
            mul r3.z, r3.z, r3.z
            mad r2.w, r3.z, r3.y, r2.w
            dp4 r3.x, cb2[r3.x + 17].xyzw, r1.xyzw
            dp4 r1.x, r1.xyzw, r1.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            mad r1.x, r1.x, r3.x, r2.w
            mad r0.w, r1.x, l(3.375000), r0.w
            mul r0.w, r0.w, l(0.533333)
            mul r1.xyz, r0.wwww, r2.xyzx
            mad r0.xyz, r1.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
            mov r0.w, l(1.000000)
            dp4 r1.x, r0.xyzw, cb0[11].xyzw
            dp4 r1.y, r0.xyzw, cb0[12].xyzw
            dp4 r1.z, r0.xyzw, cb0[13].xyzw
            dp4 r1.w, r0.xyzw, cb0[14].xyzw
            lt r0.x, v0.y, l(-0.100000)
            movc o4.xyzw, r0.xxxx, l(0,0,0,1.000000), r1.xyzw
            ret 
            // Approximately 435 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbPerFrame
            // {
            //
            //   float3 g_vLightDir;                // Offset:    0 Size:    12
            //   float4 g_vLightDiffuse;            // Offset:   16 Size:    16 [unused]
            //   float g_fTime;                     // Offset:   32 Size:     4
            //   float4x4 g_mWorld;                 // Offset:   48 Size:    64 [unused]
            //   float4x4 g_mWorldViewProjection;   // Offset:  112 Size:    64 [unused]
            //   float4x4 g_mViewProjection;        // Offset:  176 Size:    64 [unused]
            //   float3 g_vEyePt;                   // Offset:  240 Size:    12 [unused]
            //   float4 g_vRenderTargetSize;        // Offset:  256 Size:    16
            //
            // }
            //
            // cbuffer cbPerUser
            // {
            //
            //   float g_fSliderVal[4];             // Offset:    0 Size:    52
            //   bool g_bUseDDXDDY;                 // Offset:   52 Size:     4
            //
            // }
            //
            // cbuffer cbCubeGradients
            // {
            //
            //   float g_TexDims;                   // Offset:    0 Size:     4
            //      = 0x43800000 
            //   float g_TexRandomDims;             // Offset:    4 Size:     4 [unused]
            //      = 0x44800000 
            //   float3 g_grad3[16];                // Offset:   16 Size:   252 [unused]
            //      = 0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 0x00000000 
            //        0x3f800000 0x00000000 0x3f800000 0x00000000 
            //        0xbf800000 0x00000000 0x3f800000 0x00000000 
            //        0x3f800000 0x00000000 0xbf800000 0x00000000 
            //        0xbf800000 0x00000000 0xbf800000 0x00000000 
            //        0x00000000 0x3f800000 0x3f800000 0x00000000 
            //        0x00000000 0xbf800000 0x3f800000 0x00000000 
            //        0x00000000 0x3f800000 0xbf800000 0x00000000 
            //        0x00000000 0xbf800000 0xbf800000 0x00000000 
            //        0x3f800000 0x3f800000 0x00000000 0x00000000 
            //        0xbf800000 0x3f800000 0x00000000 0x00000000 
            //        0x3f800000 0xbf800000 0x00000000 0x00000000 
            //        0xbf800000 0xbf800000 0x00000000 
            //   float4 g_grad4[32];                // Offset:  272 Size:   512
            //      = 0x00000000 0x3f800000 0x3f800000 0x3f800000 
            //        0x00000000 0x3f800000 0x3f800000 0xbf800000 
            //        0x00000000 0x3f800000 0xbf800000 0x3f800000 
            //        0x00000000 0x3f800000 0xbf800000 0xbf800000 
            //        0x00000000 0xbf800000 0x3f800000 0x3f800000 
            //        0x00000000 0xbf800000 0x3f800000 0xbf800000 
            //        0x00000000 0xbf800000 0xbf800000 0x3f800000 
            //        0x00000000 0xbf800000 0xbf800000 0xbf800000 
            //        0x3f800000 0x00000000 0x3f800000 0x3f800000 
            //        0x3f800000 0x00000000 0x3f800000 0xbf800000 
            //        0x3f800000 0x00000000 0xbf800000 0x3f800000 
            //        0x3f800000 0x00000000 0xbf800000 0xbf800000 
            //        0xbf800000 0x00000000 0x3f800000 0x3f800000 
            //        0xbf800000 0x00000000 0x3f800000 0xbf800000 
            //        0xbf800000 0x00000000 0xbf800000 0x3f800000 
            //        0xbf800000 0x00000000 0xbf800000 0xbf800000 
            //        0x3f800000 0x3f800000 0x00000000 0x3f800000 
            //        0x3f800000 0x3f800000 0x00000000 0xbf800000 
            //        0x3f800000 0xbf800000 0x00000000 0x3f800000 
            //        0x3f800000 0xbf800000 0x00000000 0xbf800000 
            //        0xbf800000 0x3f800000 0x00000000 0x3f800000 
            //        0xbf800000 0x3f800000 0x00000000 0xbf800000 
            //        0xbf800000 0xbf800000 0x00000000 0x3f800000 
            //        0xbf800000 0xbf800000 0x00000000 0xbf800000 
            //        0x3f800000 0x3f800000 0x3f800000 0x00000000 
            //        0x3f800000 0x3f800000 0xbf800000 0x00000000 
            //        0x3f800000 0xbf800000 0x3f800000 0x00000000 
            //        0x3f800000 0xbf800000 0xbf800000 0x00000000 
            //        0xbf800000 0x3f800000 0x3f800000 0x00000000 
            //        0xbf800000 0x3f800000 0xbf800000 0x00000000 
            //        0xbf800000 0xbf800000 0x3f800000 0x00000000 
            //        0xbf800000 0xbf800000 0xbf800000 0x00000000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samPoint                        sampler      NA          NA             s0      1 
            // g_samWrap                         sampler      NA          NA             s1      1 
            // g_NormalDepthTexture              texture  float4          2d             t0      1 
            // g_txRandomByte                    texture   float          2d             t1      1 
            // cbPerFrame                        cbuffer      NA          NA            cb0      1 
            // cbPerUser                         cbuffer      NA          NA            cb1      1 
            // cbCubeGradients                   cbuffer      NA          NA            cb2      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POS                      0   xyz         0     NONE   float   xyz 
            // OLDPOS                   0   xyz         1     NONE   float   xyz 
            // NORM                     0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float    y  
            // TEXCOORD                 1     zw        3     NONE   float       
            // SV_POSITION              0   xyzw        4      POS   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[17], immediateIndexed
            dcl_constantbuffer CB1[4], immediateIndexed
            dcl_constantbuffer CB2[49], dynamicIndexed
            dcl_sampler s0, mode_default
            dcl_sampler s1, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v0.xyz
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.y
            dcl_input_ps_siv linear noperspective v4.xy, position
            dcl_output o0.xyzw
            dcl_temps 13
            mul r0.x, cb0[2].x, cb1[2].x
            mad r0.x, r0.x, l(-0.100000), v3.y
            mad r0.y, cb1[3].x, l(-0.200000), r0.x
            mov r0.xz, v0.xxzx
            add r1.xyz, r0.xyzx, r0.xyzx
            mul r1.w, cb0[2].x, l(0.050000)
            dp4 r2.x, r1.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r2.xyzw, r1.xyzw, r2.xxxx
            round_ni r2.xyzw, r2.xyzw
            dp4 r3.x, r2.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r3.xyzw, r2.xyzw, -r3.xxxx
            add r1.xyzw, r1.xyzw, -r3.xyzw
            ge r3.xyzw, r1.xxxz, r1.yzww
            and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r5.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r3.xyzw, r3.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r4.xy, r1.yyyy, r1.zwzz
            and r6.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r4.z, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.y, r3.x, r4.z
            movc r4.xy, r4.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r3.xy, r3.yzyy, r4.xyxx
            add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r5.z, r4.w, r3.x
            add r3.w, r3.w, r3.y
            add r5.w, r3.w, l(1.000000)
            min r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r3.xyz, r5.xyzx
            add_sat r5.xyzw, r3.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r3.xyzw, r3.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r6.xyzw, r1.xyzw, -r3.xyzw
            add r6.xyzw, r6.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r7.xyzw, r1.xyzw, -r5.xyzw
            add r7.xyzw, r7.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r8.xyzw, r1.xyzw, -r4.xyzw
            add r8.xyzw, r8.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r9.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r10.xyzw, r2.xyzw, cb2[0].xxxx
            mad r10.xy, r10.zzzz, r10.wwww, r10.xyxx
            sample_l r10.xyzw, r10.xyxx, t1.xyzw, s1, l(0.000000)
            mul r10.x, r10.x, l(255.000000)
            ftou r10.x, r10.x
            and r10.x, r10.x, l(31)
            dp4 r10.y, r1.xyzw, r1.xyzw
            add r10.y, -r10.y, l(0.600000)
            max r10.y, r10.y, l(0.000000)
            mul r10.y, r10.y, r10.y
            mul r10.y, r10.y, r10.y
            dp4 r1.x, cb2[r10.x + 17].xyzw, r1.xyzw
            add r3.xyzw, r2.xyzw, r3.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r6.xyzw, r6.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r6.xyzw
            mul r1.y, r1.y, r1.z
            mad r1.x, r10.y, r1.x, r1.y
            add r3.xyzw, r2.xyzw, r5.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r7.xyzw, r7.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r7.xyzw
            mad r1.x, r1.z, r1.y, r1.x
            add r3.xyzw, r2.xyzw, r4.xyzw
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r3.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r8.xyzw, r8.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r8.xyzw
            mad r1.x, r1.z, r1.y, r1.x
            add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r1.yz, r2.zzzz, r2.wwww, r2.xxyx
            sample_l r2.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r2.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r9.xyzw, r9.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r9.xyzw
            mad r1.x, r1.z, r1.y, r1.x
            mov r0.w, cb0[2].x
            mul r2.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000)
            dp4 r1.y, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r0.xyzw, l(4.000000, 4.000000, 4.000000, 0.100000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r4.yyyy, r4.zzwz
            and r6.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r5.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r1.y
            add r5.w, r5.w, r1.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r12.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r4.xyzw, r4.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r4.x, r8.xyzw, r8.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r8.xyzw
            mul r1.w, r1.w, r4.x
            mad r1.y, r1.z, r1.y, r1.w
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r11.xyzw, r11.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r11.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mul r1.y, r1.y, l(13.500000)
            mad r1.x, r1.x, l(27.000000), r1.y
            mul r3.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r0.xyzw, l(8.000000, 8.000000, 8.000000, 0.200000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r4.yyyy, r4.zzwz
            and r6.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r5.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r1.y
            add r5.w, r5.w, r1.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r12.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r4.xyzw, r4.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r4.x, r8.xyzw, r8.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r8.xyzw
            mul r1.w, r1.w, r4.x
            mad r1.y, r1.z, r1.y, r1.w
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r11.xyzw, r11.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r11.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(6.750000), r1.x
            mul r3.xyzw, r0.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r0.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r0.xyzw, l(16.000000, 16.000000, 16.000000, 0.400000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r4.yyyy, r4.zzwz
            and r6.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r5.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r1.y
            add r5.w, r5.w, r1.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r12.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r4.xyzw, r4.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r4.x, r8.xyzw, r8.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r8.xyzw
            mul r1.w, r1.w, r4.x
            mad r1.y, r1.z, r1.y, r1.w
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r11.xyzw, r11.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r11.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(3.375000), r1.x
            mul r3.xyzw, r0.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r0.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r4.xyzw, r0.xyzw, l(32.000000, 32.000000, 32.000000, 0.800000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r4.yyyy, r4.zzwz
            and r6.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r1.w, r5.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r5.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r7.z, r6.w, r1.y
            add r5.w, r5.w, r1.z
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r12.zzzz, r12.wwww, r12.xxyx
            sample_l r12.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r12.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r4.xyzw, r4.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r1.y, cb2[r1.y + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.w, r4.x, l(255.000000)
            ftou r1.w, r1.w
            and r1.w, r1.w, l(31)
            dp4 r4.x, r8.xyzw, r8.xyzw
            add r4.x, -r4.x, l(0.600000)
            max r4.x, r4.x, l(0.000000)
            mul r4.x, r4.x, r4.x
            mul r4.x, r4.x, r4.x
            dp4 r1.w, cb2[r1.w + 17].xyzw, r8.xyzw
            mul r1.w, r1.w, r4.x
            mad r1.y, r1.z, r1.y, r1.w
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r9.xyzw, r9.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r9.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r1.zw, r4.zzzz, r4.wwww, r4.xxxy
            sample_l r4.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r4.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r10.xyzw, r10.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r10.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.zw, r3.zzzz, r3.wwww, r3.xxxy
            sample_l r3.xyzw, r1.zwzz, t1.xyzw, s1, l(0.000000)
            mul r1.z, r3.x, l(255.000000)
            ftou r1.z, r1.z
            and r1.z, r1.z, l(31)
            dp4 r1.w, r11.xyzw, r11.xyzw
            add r1.w, -r1.w, l(0.600000)
            max r1.w, r1.w, l(0.000000)
            mul r1.w, r1.w, r1.w
            mul r1.w, r1.w, r1.w
            dp4 r1.z, cb2[r1.z + 17].xyzw, r11.xyzw
            mad r1.y, r1.w, r1.z, r1.y
            mad r1.x, r1.y, l(1.687500), r1.x
            mul r3.xyzw, r0.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000)
            dp4 r1.y, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r0.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), r1.yyyy
            round_ni r3.xyzw, r3.xyzw
            dp4 r1.y, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r1.yyyy, r3.xyzw
            mad r0.xyzw, r0.xyzw, l(64.000000, 64.000000, 64.000000, 1.600000), -r4.xyzw
            ge r4.xyzw, r0.xxxz, r0.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r1.yz, r0.yyyy, r0.zzwz
            and r5.xy, r1.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r1.w, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r1.w, r4.x
            movc r1.yz, r1.yyzy, l(0,-1.000000,-1.000000,0), l(0,-0.000000,-0.000000,0)
            add r1.yz, r1.yyzy, r4.yyzy
            add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
            add r6.z, r5.w, r1.y
            add r4.w, r4.w, r1.z
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r0.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r0.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r0.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r0.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r1.yz, r11.zzzz, r11.wwww, r11.xxyx
            sample_l r11.xyzw, r1.yzyy, t1.xyzw, s1, l(0.000000)
            mul r1.y, r11.x, l(255.000000)
            ftou r1.y, r1.y
            and r1.y, r1.y, l(31)
            dp4 r1.z, r0.xyzw, r0.xyzw
            add r1.z, -r1.z, l(0.600000)
            max r1.z, r1.z, l(0.000000)
            mul r1.z, r1.z, r1.z
            mul r1.z, r1.z, r1.z
            dp4 r0.x, cb2[r1.y + 17].xyzw, r0.xyzw
            add r4.xyzw, r3.xyzw, r4.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r0.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r7.xyzw, r7.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r7.xyzw
            mul r0.y, r0.y, r0.z
            mad r0.x, r1.z, r0.x, r0.y
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r0.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r8.xyzw, r8.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r8.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r0.yz, r4.zzzz, r4.wwww, r4.xxyx
            sample_l r4.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r4.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r9.xyzw, r9.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r9.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.yz, r3.zzzz, r3.wwww, r3.xxyx
            sample_l r3.xyzw, r0.yzyy, t1.xyzw, s1, l(0.000000)
            mul r0.y, r3.x, l(255.000000)
            ftou r0.y, r0.y
            and r0.y, r0.y, l(31)
            dp4 r0.z, r10.xyzw, r10.xyzw
            add r0.z, -r0.z, l(0.600000)
            max r0.z, r0.z, l(0.000000)
            mul r0.z, r0.z, r0.z
            mul r0.z, r0.z, r0.z
            dp4 r0.y, cb2[r0.y + 17].xyzw, r10.xyzw
            mad r0.x, r0.z, r0.y, r0.x
            mad r0.x, r0.x, l(0.843750), r1.x
            if_nz cb1[3].y
              mul r0.y, r0.x, l(0.507937)
              dp3 r0.z, v2.xyzx, v2.xyzx
              rsq r0.z, r0.z
              mul r1.xyz, r0.zzzz, v2.yzxy
              mul r0.yzw, r0.yyyy, r1.xxyz
              mad r0.yzw, r0.yyzw, l(0.000000, 0.200000, 0.200000, 0.200000), v0.yyzx
              deriv_rtx r1.xyz, r0.zwyz
              deriv_rty r0.yzw, r0.yyzw
              mul r3.xyz, r0.yzwy, r1.xyzx
              mad r0.yzw, r1.zzxy, r0.zzwy, -r3.xxyz
              dp3 r1.x, r0.yzwy, r0.yzwy
              rsq r1.x, r1.x
              mul r1.xyz, r0.yzwy, r1.xxxx
            else 
              div r0.yz, v4.xxyx, cb0[16].xxyx
              sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
            endif 
            dp3 r0.y, r1.xyzx, cb0[0].xyzx
            add r0.y, r0.y, l(0.200000)
            mul_sat r0.y, r0.y, l(0.833333)
            max r0.y, r0.y, l(0.100000)
            mul r1.xyz, v1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
            mul r1.w, cb0[2].x, l(0.300000)
            dp4 r0.z, r1.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r3.xyzw, r0.zzzz, r1.xyzw
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.z, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.zzzz, r3.xyzw
            add r1.xyzw, r1.xyzw, -r4.xyzw
            ge r4.xyzw, r1.xxxz, r1.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r0.zw, r1.yyyy, r1.zzzw
            and r5.xy, r0.zwzz, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.x, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r4.x, r5.x
            movc r0.zw, r0.zzzw, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            add r0.zw, r0.zzzw, r4.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r6.z, r5.w, r0.z
            add r4.w, r4.w, r0.w
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r1.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r1.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r1.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.zw, r11.zzzz, r11.wwww, r11.xxxy
            sample_l r11.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r11.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.w, r1.xyzw, r1.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp4 r0.z, cb2[r0.z + 17].xyzw, r1.xyzw
            add r1.xyzw, r3.xyzw, r4.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r7.xyzw, r7.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r7.xyzw
            mul r1.x, r1.x, r1.y
            mad r0.z, r0.w, r0.z, r1.x
            add r1.xyzw, r3.xyzw, r6.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r1.x, r8.xyzw, r8.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r8.xyzw
            mad r0.z, r1.x, r0.w, r0.z
            add r1.xyzw, r3.xyzw, r5.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r1.x, r9.xyzw, r9.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r9.xyzw
            mad r0.z, r1.x, r0.w, r0.z
            add r1.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r1.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r1.x, r10.xyzw, r10.xyzw
            add r1.x, -r1.x, l(0.600000)
            max r1.x, r1.x, l(0.000000)
            mul r1.x, r1.x, r1.x
            mul r1.x, r1.x, r1.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r10.xyzw
            mad r0.z, r1.x, r0.w, r0.z
            mov r1.xyz, v1.xyzx
            mov r1.w, cb0[2].x
            mul r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.600000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.600000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 0.600000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r6.xy, r4.yyyy, r4.zwzz
            and r8.xy, r6.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r0.w, r5.x
            movc r6.xy, r6.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r5.xy, r5.yzyy, r6.xyxx
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.z, r6.w, r5.x
            add r5.w, r5.w, r5.y
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r12.xy, r12.zzzz, r12.wwww, r12.xyxx
            sample_l r12.xyzw, r12.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r12.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r12.x, r4.xyzw, r4.xyzw
            add r12.x, -r12.x, l(0.600000)
            max r12.x, r12.x, l(0.000000)
            mul r12.x, r12.x, r12.x
            mul r12.x, r12.x, r12.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r8.xyzw, r8.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r8.xyzw
            mul r4.x, r4.x, r4.y
            mad r0.w, r12.x, r0.w, r4.x
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r9.xyzw, r9.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r9.xyzw
            mad r0.w, r4.y, r4.x, r0.w
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r10.xyzw, r10.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r10.xyzw
            mad r0.w, r4.y, r4.x, r0.w
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r11.xyzw, r11.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r11.xyzw
            mad r0.w, r3.y, r3.x, r0.w
            mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 27.000000, 27.000000)
            mad r0.z, |r0.w|, l(0.500000), |r0.z|
            mul r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 1.200000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 1.200000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r4.xyzw, r1.xyzw, l(16.000000, 16.000000, 16.000000, 1.200000), -r4.xyzw
            ge r5.xyzw, r4.xxxz, r4.yzww
            and r6.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r7.x, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r5.xyzw, r5.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r6.xy, r4.yyyy, r4.zwzz
            and r8.xy, r6.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.y, r0.w, r5.x
            movc r6.xy, r6.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r5.xy, r5.yzyy, r6.xyxx
            add r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r7.z, r6.w, r5.x
            add r5.w, r5.w, r5.y
            add r7.w, r5.w, l(1.000000)
            min r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r5.xyz, r7.xyzx
            add_sat r7.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r5.xyzw, r5.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, r4.xyzw, -r5.xyzw
            add r8.xyzw, r8.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r9.xyzw, r4.xyzw, -r7.xyzw
            add r9.xyzw, r9.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r10.xyzw, r4.xyzw, -r6.xyzw
            add r10.xyzw, r10.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r11.xyzw, r4.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r12.xyzw, r3.xyzw, cb2[0].xxxx
            mad r12.xy, r12.zzzz, r12.wwww, r12.xyxx
            sample_l r12.xyzw, r12.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r12.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r12.x, r4.xyzw, r4.xyzw
            add r12.x, -r12.x, l(0.600000)
            max r12.x, r12.x, l(0.000000)
            mul r12.x, r12.x, r12.x
            mul r12.x, r12.x, r12.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r4.xyzw
            add r4.xyzw, r3.xyzw, r5.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r8.xyzw, r8.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r8.xyzw
            mul r4.x, r4.x, r4.y
            mad r0.w, r12.x, r0.w, r4.x
            add r4.xyzw, r3.xyzw, r7.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r9.xyzw, r9.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r9.xyzw
            mad r0.w, r4.y, r4.x, r0.w
            add r4.xyzw, r3.xyzw, r6.xyzw
            div r4.xyzw, r4.xyzw, cb2[0].xxxx
            mad r4.xy, r4.zzzz, r4.wwww, r4.xyxx
            sample_l r4.xyzw, r4.xyxx, t1.xyzw, s1, l(0.000000)
            mul r4.x, r4.x, l(255.000000)
            ftou r4.x, r4.x
            and r4.x, r4.x, l(31)
            dp4 r4.y, r10.xyzw, r10.xyzw
            add r4.y, -r4.y, l(0.600000)
            max r4.y, r4.y, l(0.000000)
            mul r4.y, r4.y, r4.y
            mul r4.y, r4.y, r4.y
            dp4 r4.x, cb2[r4.x + 17].xyzw, r10.xyzw
            mad r0.w, r4.y, r4.x, r0.w
            add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r3.xyzw, r3.xyzw, cb2[0].xxxx
            mad r3.xy, r3.zzzz, r3.wwww, r3.xyxx
            sample_l r3.xyzw, r3.xyxx, t1.xyzw, s1, l(0.000000)
            mul r3.x, r3.x, l(255.000000)
            ftou r3.x, r3.x
            and r3.x, r3.x, l(31)
            dp4 r3.y, r11.xyzw, r11.xyzw
            add r3.y, -r3.y, l(0.600000)
            max r3.y, r3.y, l(0.000000)
            mul r3.y, r3.y, r3.y
            mul r3.y, r3.y, r3.y
            dp4 r3.x, cb2[r3.x + 17].xyzw, r11.xyzw
            mad r0.w, r3.y, r3.x, r0.w
            mul r0.w, r0.w, l(27.000000)
            mad r0.z, |r0.w|, l(0.250000), r0.z
            mul r3.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 2.400000)
            dp4 r0.w, r3.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            mad r3.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 2.400000), r0.wwww
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.w, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.wwww, r3.xyzw
            mad r1.xyzw, r1.xyzw, l(32.000000, 32.000000, 32.000000, 2.400000), -r4.xyzw
            ge r4.xyzw, r1.xxxz, r1.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r5.xy, r1.yyyy, r1.zwzz
            and r7.xy, r5.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r0.w, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r0.w, r4.x
            movc r5.xy, r5.xyxx, l(-1.000000,-1.000000,0,0), l(-0.000000,-0.000000,0,0)
            add r4.xy, r4.yzyy, r5.xyxx
            add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.z, r5.w, r4.x
            add r4.w, r4.w, r4.y
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r1.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r1.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r1.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r1.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r11.xy, r11.zzzz, r11.wwww, r11.xyxx
            sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r11.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r11.x, r1.xyzw, r1.xyzw
            add r11.x, -r11.x, l(0.600000)
            max r11.x, r11.x, l(0.000000)
            mul r11.x, r11.x, r11.x
            mul r11.x, r11.x, r11.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r1.xyzw
            add r1.xyzw, r3.xyzw, r4.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r7.xyzw, r7.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r7.xyzw
            mul r1.x, r1.x, r1.y
            mad r0.w, r11.x, r0.w, r1.x
            add r1.xyzw, r3.xyzw, r6.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r8.xyzw, r8.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r8.xyzw
            mad r0.w, r1.y, r1.x, r0.w
            add r1.xyzw, r3.xyzw, r5.xyzw
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r9.xyzw, r9.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r9.xyzw
            mad r0.w, r1.y, r1.x, r0.w
            add r1.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r1.xyzw, r1.xyzw, cb2[0].xxxx
            mad r1.xy, r1.zzzz, r1.wwww, r1.xyxx
            sample_l r1.xyzw, r1.xyxx, t1.xyzw, s1, l(0.000000)
            mul r1.x, r1.x, l(255.000000)
            ftou r1.x, r1.x
            and r1.x, r1.x, l(31)
            dp4 r1.y, r10.xyzw, r10.xyzw
            add r1.y, -r1.y, l(0.600000)
            max r1.y, r1.y, l(0.000000)
            mul r1.y, r1.y, r1.y
            mul r1.y, r1.y, r1.y
            dp4 r1.x, cb2[r1.x + 17].xyzw, r10.xyzw
            mad r0.w, r1.y, r1.x, r0.w
            mul r0.w, r0.w, l(27.000000)
            mad r0.z, |r0.w|, l(0.125000), r0.z
            mad r1.xyzw, r0.zzzz, l(0.053333, -0.293333, 0.000000, -0.533333), l(0.900000, 0.550000, 0.000000, 1.000000)
            mov r2.xyz, v1.xyzx
            dp4 r0.z, r2.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
            add r3.xyzw, r0.zzzz, r2.xyzw
            round_ni r3.xyzw, r3.xyzw
            dp4 r0.z, r3.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r4.xyzw, -r0.zzzz, r3.xyzw
            add r2.xyzw, r2.xyzw, -r4.xyzw
            ge r4.xyzw, r2.xxxz, r2.yzww
            and r5.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
            dp3 r6.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
            movc r4.xyzw, r4.xyzw, l(0,0,0,-1.000000), l(1.000000,1.000000,1.000000,-0.000000)
            ge r0.zw, r2.yyyy, r2.zzzw
            and r5.xy, r0.zwzz, l(0x3f800000, 0x3f800000, 0, 0)
            dp2 r5.x, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
            add r6.y, r4.x, r5.x
            movc r0.zw, r0.zzzw, l(0,0,-1.000000,-1.000000), l(0,0,-0.000000,-0.000000)
            add r0.zw, r0.zzzw, r4.yyyz
            add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
            add r6.z, r5.w, r0.z
            add r4.w, r4.w, r0.w
            add r6.w, r4.w, l(1.000000)
            min r5.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            mov r4.xyz, r6.xyzx
            add_sat r6.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 0.000000)
            add r4.xyzw, r4.xyzw, l(-2.000000, -2.000000, -2.000000, -1.000000)
            max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r7.xyzw, r2.xyzw, -r4.xyzw
            add r7.xyzw, r7.xyzw, l(0.138197, 0.138197, 0.138197, 0.138197)
            add r8.xyzw, r2.xyzw, -r6.xyzw
            add r8.xyzw, r8.xyzw, l(0.276393, 0.276393, 0.276393, 0.276393)
            add r9.xyzw, r2.xyzw, -r5.xyzw
            add r9.xyzw, r9.xyzw, l(0.414590, 0.414590, 0.414590, 0.414590)
            add r10.xyzw, r2.xyzw, l(-0.447214, -0.447214, -0.447214, -0.447214)
            div r11.xyzw, r3.xyzw, cb2[0].xxxx
            mad r0.zw, r11.zzzz, r11.wwww, r11.xxxy
            sample_l r11.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
            mul r0.z, r11.x, l(255.000000)
            ftou r0.z, r0.z
            and r0.z, r0.z, l(31)
            dp4 r0.w, r2.xyzw, r2.xyzw
            add r0.w, -r0.w, l(0.600000)
            max r0.w, r0.w, l(0.000000)
            mul r0.w, r0.w, r0.w
            mul r0.w, r0.w, r0.w
            dp4 r0.z, cb2[r0.z + 17].xyzw, r2.xyzw
            add r2.xyzw, r3.xyzw, r4.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r2.x, r2.x, l(255.000000)
            ftou r2.x, r2.x
            and r2.x, r2.x, l(31)
            dp4 r2.y, r7.xyzw, r7.xyzw
            add r2.y, -r2.y, l(0.600000)
            max r2.y, r2.y, l(0.000000)
            mul r2.y, r2.y, r2.y
            mul r2.y, r2.y, r2.y
            dp4 r2.x, cb2[r2.x + 17].xyzw, r7.xyzw
            mul r2.x, r2.x, r2.y
            mad r0.z, r0.w, r0.z, r2.x
            add r2.xyzw, r3.xyzw, r6.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r2.x, r8.xyzw, r8.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r8.xyzw
            mad r0.z, r2.x, r0.w, r0.z
            add r2.xyzw, r3.xyzw, r5.xyzw
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r2.x, r9.xyzw, r9.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r9.xyzw
            mad r0.z, r2.x, r0.w, r0.z
            add r2.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
            div r2.xyzw, r2.xyzw, cb2[0].xxxx
            mad r2.xy, r2.zzzz, r2.wwww, r2.xyxx
            sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
            mul r0.w, r2.x, l(255.000000)
            ftou r0.w, r0.w
            and r0.w, r0.w, l(31)
            dp4 r2.x, r10.xyzw, r10.xyzw
            add r2.x, -r2.x, l(0.600000)
            max r2.x, r2.x, l(0.000000)
            mul r2.x, r2.x, r2.x
            mul r2.x, r2.x, r2.x
            dp4 r0.w, cb2[r0.w + 17].xyzw, r10.xyzw
            mad r0.z, r2.x, r0.w, r0.z
            mul r0.z, r0.z, l(27.000000)
            mad r0.x, r0.x, l(0.253968), l(0.500000)
            add r0.w, r0.x, r0.x
            mul r0.w, r0.w, r0.w
            mul r2.x, r0.w, r0.w
            mul r0.w, r0.w, r2.x
            min r0.w, r0.w, l(1.000000)
            mad r2.xyzw, |r0.zzzz|, l(0.100000, 0.000000, -0.100000, 0.000000), l(0.200000, 0.200000, 0.200000, 0.000000)
            mad r2.xyzw, r0.wwww, r2.xyzw, l(0.100000, 0.100000, 0.100000, 1.000000)
            div r0.x, r0.x, cb1[0].x
            log r0.x, r0.x
            mul r0.x, r0.x, cb1[1].x
            exp r0.x, r0.x
            min r0.x, r0.x, l(1.000000)
            mad r2.xyzw, r2.xyzw, r0.yyyy, -r1.xyzw
            mad o0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
            ret 
            // Approximately 1183 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = DisableBlending;
        RasterizerState = CullBack;
    }

}

