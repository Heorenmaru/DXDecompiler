//
// FX Version: fx_4_1
// Child effect (requires effect pool): false
//
// 1 local buffer(s)
//
cbuffer cb0
{
    float3  g_f3LightDir;               // Offset:    0, size:   12
    float3  g_f3EyePt;                  // Offset:   16, size:   12
    float   g_fTime;                    // Offset:   28, size:    4
    float4x4 g_f4x4World;               // Offset:   32, size:   64
    float4x4 g_f4x4View;                // Offset:   96, size:   64
    float4x4 g_f4x4WorldViewProjection; // Offset:  160, size:   64
    float4x4 g_f4x4InvProjection;       // Offset:  224, size:   64
    float2  g_f2RTSize;                 // Offset:  288, size:    8
    float   g_fHDAORejectRadius;        // Offset:  296, size:    4
    float   g_fHDAOIntensity;           // Offset:  300, size:    4
    float   g_fHDAOAcceptRadius;        // Offset:  304, size:    4
    float   g_fZFar;                    // Offset:  308, size:    4
    float   g_fZNear;                   // Offset:  312, size:    4
    float   g_fQ;                       // Offset:  316, size:    4
    float   g_fQTimesZNear;             // Offset:  320, size:    4
    float   g_fNormalScale;             // Offset:  324, size:    4
    float   g_fAcceptAngle;             // Offset:  328, size:    4
    float4  g_f4MaterialDiffuse;        // Offset:  336, size:   16
    float4  g_f4MaterialSpecular;       // Offset:  352, size:   16
    float   g_fTanH;                    // Offset:  368, size:    4
    float   g_fTanV;                    // Offset:  372, size:    4
}

//
// 13 local object(s)
//
Texture2D g_txScene;
Texture2D g_txNormals;
Texture2D g_txNormalsZ;
Texture2D g_txNormalsXY;
Texture2D g_txHDAO;
Texture2D g_txDepth;
Texture2D g_txDiffuse;
Texture2D g_txNormal;
SamplerState g_SamplePoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_SampleLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
DepthStencilState EnableDepthTestWrite
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
    StencilEnable = bool(FALSE /* 0 */);
};
DepthStencilState DisableDepthTestWrite
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
    StencilEnable = bool(FALSE /* 0 */);
    StencilReadMask = byte(0xff);
};
BlendState NoBlending
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(FALSE /* 0 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};

//
// 14 technique(s)
//
technique10 RenderScene_10_0
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyzw        1     NONE   float   xyzw
            // COLOR                    0   xyzw        2     NONE   float   xyzw
            // TEXTURE                  0   xy          3     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[23], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xyzw
            dcl_output o3.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[10].xyzw
            dp4 o0.y, r0.xyzw, cb0[11].xyzw
            dp4 o0.z, r0.xyzw, cb0[12].xyzw
            dp4 o0.w, r0.xyzw, cb0[13].xyzw
            dp3 r0.x, v1.xyzx, cb0[2].xyzx
            dp3 r0.y, v1.xyzx, cb0[3].xyzx
            dp3 r0.z, v1.xyzx, cb0[4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 o1.x, r0.xyzx, cb0[6].xyzx
            dp3 o1.y, r0.xyzx, cb0[7].xyzx
            dp3 o1.z, r0.xyzx, cb0[8].xyzx
            dp3 r0.x, r0.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.000000)
            mad r0.xyz, cb0[21].xyzx, r0.xxxx, cb0[22].xyzx
            add o2.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
            mov o1.w, l(0)
            mov o2.w, l(1.000000)
            mov o3.xy, v2.xyxx
            ret 
            // Approximately 23 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // NORMAL                   0   xyzw        1     NONE   float   xyzw
            // COLOR                    0   xyzw        2     NONE   float   xyzw
            // TEXTURE                  0   xy          3     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Target                1   xyzw        1   TARGET   float   xyzw
            //
            ps_4_0
            dcl_input_ps linear v1.xyzw
            dcl_input_ps linear v2.xyzw
            dcl_output o0.xyzw
            dcl_output o1.xyzw
            mov o0.xyzw, v2.xyzw
            mov o1.xyzw, v1.zxyw
            ret 
            // Approximately 3 instruction slots used
                    
        };
    }

}

technique10 RenderScene_10_1
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyzw        1     NONE   float   xyzw
            // COLOR                    0   xyzw        2     NONE   float   xyzw
            // TEXTURE                  0   xy          3     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[23], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xyzw
            dcl_output o3.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[10].xyzw
            dp4 o0.y, r0.xyzw, cb0[11].xyzw
            dp4 o0.z, r0.xyzw, cb0[12].xyzw
            dp4 o0.w, r0.xyzw, cb0[13].xyzw
            dp3 r0.x, v1.xyzx, cb0[2].xyzx
            dp3 r0.y, v1.xyzx, cb0[3].xyzx
            dp3 r0.z, v1.xyzx, cb0[4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 o1.x, r0.xyzx, cb0[6].xyzx
            dp3 o1.y, r0.xyzx, cb0[7].xyzx
            dp3 o1.z, r0.xyzx, cb0[8].xyzx
            dp3 r0.x, r0.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.000000)
            mad r0.xyz, cb0[21].xyzx, r0.xxxx, cb0[22].xyzx
            add o2.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
            mov o1.w, l(0)
            mov o2.w, l(1.000000)
            mov o3.xy, v2.xyxx
            ret 
            // Approximately 23 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // NORMAL                   0   xyzw        1     NONE   float   xyz 
            // COLOR                    0   xyzw        2     NONE   float   xyzw
            // TEXTURE                  0   xy          3     NONE   float       
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Target                1   x           1   TARGET   float   x   
            // SV_Target                2   xy          2   TARGET   float   xy  
            //
            ps_4_0
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyzw
            dcl_output o0.xyzw
            dcl_output o1.x
            dcl_output o2.xy
            mov o0.xyzw, v2.xyzw
            mov o1.x, v1.z
            mov o2.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
    }

}

technique10 RenderTexturedScene_10_0
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyzw        1     NONE   float   xyzw
            // COLOR                    0   xyzw        2     NONE   float   xyzw
            // TEXTURE                  0   xy          3     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[23], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xyzw
            dcl_output o3.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[10].xyzw
            dp4 o0.y, r0.xyzw, cb0[11].xyzw
            dp4 o0.z, r0.xyzw, cb0[12].xyzw
            dp4 o0.w, r0.xyzw, cb0[13].xyzw
            dp3 r0.x, v1.xyzx, cb0[2].xyzx
            dp3 r0.y, v1.xyzx, cb0[3].xyzx
            dp3 r0.z, v1.xyzx, cb0[4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 o1.x, r0.xyzx, cb0[6].xyzx
            dp3 o1.y, r0.xyzx, cb0[7].xyzx
            dp3 o1.z, r0.xyzx, cb0[8].xyzx
            dp3 r0.x, r0.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.000000)
            mad r0.xyz, cb0[21].xyzx, r0.xxxx, cb0[22].xyzx
            add o2.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
            mov o1.w, l(0)
            mov o2.w, l(1.000000)
            mov o3.xy, v2.xyxx
            ret 
            // Approximately 23 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SampleLinear                    sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // NORMAL                   0   xyzw        1     NONE   float   xyzw
            // COLOR                    0   xyzw        2     NONE   float       
            // TEXTURE                  0   xy          3     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Target                1   xyzw        1   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xyzw
            dcl_input_ps linear v3.xy
            dcl_output o0.xyzw
            dcl_output o1.xyzw
            sample o0.xyzw, v3.xyxx, t0.xyzw, s0
            mov o1.xyzw, v1.zxyw
            ret 
            // Approximately 3 instruction slots used
                    
        };
    }

}

technique10 RenderTexturedScene_10_1
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyzw        1     NONE   float   xyzw
            // COLOR                    0   xyzw        2     NONE   float   xyzw
            // TEXTURE                  0   xy          3     NONE   float   xy  
            //
            vs_4_0
            dcl_constantbuffer CB0[23], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xyzw
            dcl_output o3.xy
            dcl_temps 1
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[10].xyzw
            dp4 o0.y, r0.xyzw, cb0[11].xyzw
            dp4 o0.z, r0.xyzw, cb0[12].xyzw
            dp4 o0.w, r0.xyzw, cb0[13].xyzw
            dp3 r0.x, v1.xyzx, cb0[2].xyzx
            dp3 r0.y, v1.xyzx, cb0[3].xyzx
            dp3 r0.z, v1.xyzx, cb0[4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 o1.x, r0.xyzx, cb0[6].xyzx
            dp3 o1.y, r0.xyzx, cb0[7].xyzx
            dp3 o1.z, r0.xyzx, cb0[8].xyzx
            dp3 r0.x, r0.xyzx, cb0[0].xyzx
            max r0.x, r0.x, l(0.000000)
            mad r0.xyz, cb0[21].xyzx, r0.xxxx, cb0[22].xyzx
            add o2.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
            mov o1.w, l(0)
            mov o2.w, l(1.000000)
            mov o3.xy, v2.xyxx
            ret 
            // Approximately 23 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SampleLinear                    sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // NORMAL                   0   xyzw        1     NONE   float   xyz 
            // COLOR                    0   xyzw        2     NONE   float       
            // TEXTURE                  0   xy          3     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Target                1   x           1   TARGET   float   x   
            // SV_Target                2   xy          2   TARGET   float   xy  
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v3.xy
            dcl_output o0.xyzw
            dcl_output o1.x
            dcl_output o2.xy
            sample o0.xyzw, v3.xyxx, t0.xyzw, s0
            mov o1.x, v1.z
            mov o2.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
    }

}

technique10 RenderHQTexturedScene_10_0
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TEXCOORD                 1   xyz         3     NONE   float   xyz 
            // TEXCOORD                 2   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[14], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xy
            dcl_output o3.xyz
            dcl_output o4.xyz
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[10].xyzw
            dp4 o0.y, r0.xyzw, cb0[11].xyzw
            dp4 o0.z, r0.xyzw, cb0[12].xyzw
            dp4 o0.w, r0.xyzw, cb0[13].xyzw
            dp3 r1.x, v1.xyzx, cb0[2].xyzx
            dp3 r1.y, v1.xyzx, cb0[3].xyzx
            dp3 r1.z, v1.xyzx, cb0[4].xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul o1.xyz, r1.wwww, r1.xyzx
            mov o2.xy, v2.xyxx
            dp3 r1.x, v3.xyzx, cb0[2].xyzx
            dp3 r1.y, v3.xyzx, cb0[3].xyzx
            dp3 r1.z, v3.xyzx, cb0[4].xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul o3.xyz, r1.wwww, r1.xyzx
            dp4 o4.x, r0.xyzw, cb0[2].xyzw
            dp4 o4.y, r0.xyzw, cb0[3].xyzw
            dp4 o4.z, r0.xyzw, cb0[4].xyzw
            ret 
            // Approximately 23 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64 [unused]
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SampleLinear                    sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TEXCOORD                 1   xyz         3     NONE   float   xyz 
            // TEXCOORD                 2   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Target                1   xyzw        1   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[5], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xy
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_output o1.xyzw
            dcl_temps 6
            dp3 r0.x, l(-5.947000, -5.342000, -5.733000, 0.000000), cb0[2].xyzx
            dp3 r0.y, l(-5.947000, -5.342000, -5.733000, 0.000000), cb0[3].xyzx
            dp3 r0.z, l(-5.947000, -5.342000, -5.733000, 0.000000), cb0[4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v4.xyzx, cb0[1].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r1.xyzx, r0.wwww, r0.xyzx
            dp3 r1.w, r2.xyzx, r2.xyzx
            rsq r1.w, r1.w
            mul r2.xyz, r1.wwww, r2.xyzx
            mul r3.xyz, v1.yzxy, v3.xyzx
            mad r3.xyz, v1.xyzx, v3.yzxy, -r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            rsq r1.w, r1.w
            mul r3.xyz, r1.wwww, r3.xyzx
            sample r4.xyzw, v2.xyxx, t1.xyzw, s0
            mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r5.xyz, r4.yyyy, v3.zxyz
            mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
            mad r3.xyz, r4.zzzz, v1.zxyz, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            rsq r1.w, r1.w
            mul r3.xyz, r1.wwww, r3.xyzx
            dp3_sat r1.w, r2.zxyz, r3.xyzx
            log r1.w, r1.w
            mul r1.w, r1.w, l(32.000000)
            exp r1.w, r1.w
            mul r2.xyzw, r1.wwww, l(0.595000, 0.600000, 0.528000, 0.000000)
            dp3 r4.x, l(1.705000, 5.557000, -9.380000, 0.000000), cb0[2].xyzx
            dp3 r4.y, l(1.705000, 5.557000, -9.380000, 0.000000), cb0[3].xyzx
            dp3 r4.z, l(1.705000, 5.557000, -9.380000, 0.000000), cb0[4].xyzx
            dp3 r1.w, r4.xyzx, r4.xyzx
            rsq r1.w, r1.w
            mul r4.xyz, r1.wwww, r4.xyzx
            mad r1.xyz, r1.xyzx, r0.wwww, r4.xyzx
            dp3_sat r0.w, r3.yzxy, r4.xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul r1.xyz, r1.wwww, r1.xyzx
            dp3_sat r1.x, r1.zxyz, r3.xyzx
            log r1.x, r1.x
            mul r1.x, r1.x, l(32.000000)
            exp r1.x, r1.x
            mad r1.xyzw, r1.xxxx, l(0.992000, 1.000000, 0.880000, 0.000000), r2.xyzw
            sample r2.xyzw, v2.xyxx, t0.xyzw, s0
            mul r1.xyzw, r1.xyzw, r2.wwww
            dp3_sat r0.x, r3.yzxy, r0.xyzx
            mov o1.xyz, r3.xyzx
            mul r3.xyzw, r0.xxxx, l(0.595000, 0.600000, 0.528000, 0.000000)
            mad r0.xyzw, r0.wwww, l(0.992000, 1.000000, 0.880000, 0.000000), r3.xyzw
            add r0.xyzw, r0.xyzw, l(0.525000, 0.474000, 0.474000, 0.000000)
            mad o0.xyzw, r0.xyzw, r2.xyzw, r1.xyzw
            mov o1.w, l(0)
            ret 
            // Approximately 57 instruction slots used
                    
        };
    }

}

technique10 RenderHQTexturedScene_10_1
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepthTestWrite;
        AB_BlendFactor = float4(0, 0, 0, 0);
        AB_SampleMask = uint(0xffffffff);
        BlendState = NoBlending;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TEXCOORD                 1   xyz         3     NONE   float   xyz 
            // TEXCOORD                 2   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[14], immediateIndexed
            dcl_input v0.xyz
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xy
            dcl_output o3.xyz
            dcl_output o4.xyz
            dcl_temps 2
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            dp4 o0.x, r0.xyzw, cb0[10].xyzw
            dp4 o0.y, r0.xyzw, cb0[11].xyzw
            dp4 o0.z, r0.xyzw, cb0[12].xyzw
            dp4 o0.w, r0.xyzw, cb0[13].xyzw
            dp3 r1.x, v1.xyzx, cb0[2].xyzx
            dp3 r1.y, v1.xyzx, cb0[3].xyzx
            dp3 r1.z, v1.xyzx, cb0[4].xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul o1.xyz, r1.wwww, r1.xyzx
            mov o2.xy, v2.xyxx
            dp3 r1.x, v3.xyzx, cb0[2].xyzx
            dp3 r1.y, v3.xyzx, cb0[3].xyzx
            dp3 r1.z, v3.xyzx, cb0[4].xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul o3.xyz, r1.wwww, r1.xyzx
            dp4 o4.x, r0.xyzw, cb0[2].xyzw
            dp4 o4.y, r0.xyzw, cb0[3].xyzw
            dp4 o4.z, r0.xyzw, cb0[4].xyzw
            ret 
            // Approximately 23 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64 [unused]
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4 [unused]
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4 [unused]
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SampleLinear                    sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXTURE                  0   xy          2     NONE   float   xy  
            // TEXCOORD                 1   xyz         3     NONE   float   xyz 
            // TEXCOORD                 2   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            // SV_Target                1   x           1   TARGET   float   x   
            // SV_Target                2   xy          2   TARGET   float   xy  
            //
            ps_4_0
            dcl_constantbuffer CB0[5], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xy
            dcl_input_ps linear v3.xyz
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_output o1.x
            dcl_output o2.xy
            dcl_temps 6
            dp3 r0.x, l(-5.947000, -5.342000, -5.733000, 0.000000), cb0[2].xyzx
            dp3 r0.y, l(-5.947000, -5.342000, -5.733000, 0.000000), cb0[3].xyzx
            dp3 r0.z, l(-5.947000, -5.342000, -5.733000, 0.000000), cb0[4].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v4.xyzx, cb0[1].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r1.xyzx, r0.wwww, r0.xyzx
            dp3 r1.w, r2.xyzx, r2.xyzx
            rsq r1.w, r1.w
            mul r2.xyz, r1.wwww, r2.xyzx
            mul r3.xyz, v1.zxyz, v3.yzxy
            mad r3.xyz, v1.yzxy, v3.zxyz, -r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            rsq r1.w, r1.w
            mul r3.xyz, r1.wwww, r3.xyzx
            sample r4.xyzw, v2.xyxx, t1.xyzw, s0
            mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r5.xyz, r4.yyyy, v3.xyzx
            mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
            mad r3.xyz, r4.zzzz, v1.xyzx, r3.xyzx
            dp3 r1.w, r3.xyzx, r3.xyzx
            rsq r1.w, r1.w
            mul r3.xyz, r1.wwww, r3.xyzx
            dp3_sat r1.w, r2.xyzx, r3.xyzx
            log r1.w, r1.w
            mul r1.w, r1.w, l(32.000000)
            exp r1.w, r1.w
            mul r2.xyzw, r1.wwww, l(0.595000, 0.600000, 0.528000, 0.000000)
            dp3 r4.x, l(1.705000, 5.557000, -9.380000, 0.000000), cb0[2].xyzx
            dp3 r4.y, l(1.705000, 5.557000, -9.380000, 0.000000), cb0[3].xyzx
            dp3 r4.z, l(1.705000, 5.557000, -9.380000, 0.000000), cb0[4].xyzx
            dp3 r1.w, r4.xyzx, r4.xyzx
            rsq r1.w, r1.w
            mul r4.xyz, r1.wwww, r4.xyzx
            mad r1.xyz, r1.xyzx, r0.wwww, r4.xyzx
            dp3_sat r0.w, r3.xyzx, r4.xyzx
            dp3 r1.w, r1.xyzx, r1.xyzx
            rsq r1.w, r1.w
            mul r1.xyz, r1.wwww, r1.xyzx
            dp3_sat r1.x, r1.xyzx, r3.xyzx
            log r1.x, r1.x
            mul r1.x, r1.x, l(32.000000)
            exp r1.x, r1.x
            mad r1.xyzw, r1.xxxx, l(0.992000, 1.000000, 0.880000, 0.000000), r2.xyzw
            sample r2.xyzw, v2.xyxx, t0.xyzw, s0
            mul r1.xyzw, r1.xyzw, r2.wwww
            dp3_sat r0.x, r3.xyzx, r0.xyzx
            mul r4.xyzw, r0.xxxx, l(0.595000, 0.600000, 0.528000, 0.000000)
            mad r0.xyzw, r0.wwww, l(0.992000, 1.000000, 0.880000, 0.000000), r4.xyzw
            add r0.xyzw, r0.xyzw, l(0.525000, 0.474000, 0.474000, 0.000000)
            mad o0.xyzw, r0.xyzw, r2.xyzw, r1.xyzw
            mov o1.x, r3.z
            mov o2.xy, r3.xyxx
            ret 
            // Approximately 57 instruction slots used
                    
        };
    }

}

technique10 RenderHDAO_Normals_10_0
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64 [unused]
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64 [unused]
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4
            //   float g_fNormalScale;              // Offset:  324 Size:     4
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txNormals                       texture  float4          2d             t0      1 
            // g_txDepth                         texture  float4          2d             t1      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   x           0   TARGET   float   x   
            //
            ps_4_0
            dcl_immediateConstantBuffer { { 1, 8, 1.000000, -1.000000},
                                          { 8, -1, 0, 1.000000},
                                          { 5, 4, 0, 3.000000},
                                          { 4, -4, 2.000000, 1.000000},
                                          { 0, 0, 3.000000, -1.000000},
                                          { 0, 0, 1.000000, -3.000000},
                                          { 0, 0, 1.000000, -5.000000},
                                          { 0, 0, 3.000000, -3.000000},
                                          { 0, 0, 5.000000, -1.000000},
                                          { 0, 0, 4.000000, 1.000000},
                                          { 0, 0, 2.000000, 3.000000},
                                          { 0, 0, 0, 5.000000},
                                          { 0, 0, 0, 7.000000},
                                          { 0, 0, 2.000000, 5.000000},
                                          { 0, 0, 4.000000, 3.000000},
                                          { 0, 0, 6.000000, 1.000000},
                                          { 0, 0, 7.000000, -1.000000},
                                          { 0, 0, 5.000000, -3.000000},
                                          { 0, 0, 3.000000, -5.000000},
                                          { 0, 0, 1.000000, -7.000000},
                                          { 1.000000, 0.500000, 0.447210, 0.707110},
                                          { 0.500000, 0.447210, 0.707110, 1.000000},
                                          { 0.300000, 0.291040, 0.379470, 0.400000},
                                          { 0.424260, 0.332820, 0.379470, 0.536660},
                                          { 0.400000, 0.300000, 0.291040, 0.379470},
                                          { 0.536660, 0.424260, 0.332820, 0.379470},
                                          { 0.315300, 0.290690, 0.241400, 0.254950},
                                          { 0.360560, 0.290690, 0.260000, 0.306410},
                                          { 0.260000, 0.216670, 0.213720, 0.254950},
                                          { 0.290690, 0.241400, 0.254950, 0.315300},
                                          { 0.290690, 0.260000, 0.306410, 0.360560},
                                          { 0.216670, 0.213720, 0.254950, 0.260000},
                                          { 0.175000, 0.173650, 0.197990, 0.200000},
                                          { 0.221360, 0.208700, 0.240100, 0.259970},
                                          { 0.247490, 0.218640, 0.240100, 0.280000},
                                          { 0.221360, 0.192300, 0.197990, 0.230160},
                                          { 0.200000, 0.175000, 0.173650, 0.197990},
                                          { 0.259970, 0.221360, 0.208700, 0.240100},
                                          { 0.280000, 0.247490, 0.218640, 0.240100},
                                          { 0.230160, 0.221360, 0.192300, 0.197990} }
            dcl_constantbuffer CB0[21], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.x
            dcl_temps 15
            mul r0.xy, v1.xyxx, cb0[18].xyxx
            ftoi r0.zw, r0.xxxy
            add r1.xy, cb0[18].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
            mov r2.zw, l(0,0,0,0)
            mov r3.zw, l(0,0,0,0)
            mov r1.zw, l(0,0,0,0)
            loop 
              ige r4.x, r1.w, l(4)
              breakc_nz r4.x
              iadd r4.xy, r0.zwzz, -icb[r1.w + 0].xyxx
              iadd r4.zw, r0.zzzw, icb[r1.w + 0].xxxy
              iadd r4.xy, r4.xyxx, l(-1, -1, 0, 0)
              itof r4.xyzw, r4.xyzw
              min r4.xyzw, r1.xyxy, r4.xyzw
              ftoi r4.xyzw, r4.xyzw
              imax r2.xy, r4.zwzz, l(0, 0, 0, 0)
              imax r3.xy, r4.xyxx, l(0, 0, 0, 0)
              ld r4.xyzw, r2.xyzw, t0.xyzw
              ld r5.xyzw, r3.xyzw, t0.xyzw
              dp3 r2.x, r4.xyzx, r5.xyzx
              lt r2.y, cb0[20].z, r2.x
              mad r2.x, -|r2.x|, l(0.250000), l(1.000000)
              movc r2.x, r2.y, l(0), r2.x
              add r1.z, r1.z, r2.x
              iadd r1.w, r1.w, l(1)
            endloop 
            mad r0.z, r1.z, l(0.250000), l(0.500000)
            lt r0.w, l(0.500000), r0.z
            if_nz r0.w
              mul r1.xy, cb0[18].xyxx, l(0.000977, 0.001302, 0.000000, 0.000000)
              div r1.zw, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].xxxy
              mul r2.xy, r0.xyxx, r1.zwzz
              sample_l r3.xyzw, r2.xyxx, t1.xyzw, s0, l(0.000000)
              add r0.w, r3.x, -cb0[19].w
              div r0.w, -cb0[20].x, r0.w
              sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
              mad r2.x, r2.x, cb0[20].y, r0.w
              mov r3.xyzw, l(0,0,0,0)
              mov r2.y, l(0)
              loop 
                ige r2.z, r2.y, l(20)
                breakc_nz r2.z
                mad r2.zw, r1.xxxy, icb[r2.y + 0].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
                mad r4.xy, r1.xyxx, icb[r2.y + 0].zwzz, r0.xyxx
                mul r4.xy, r1.zwzz, r4.xyxx
                mad r2.zw, v1.xxxy, cb0[18].xxxy, -r2.zzzw
                mul r2.zw, r1.zzzw, r2.zzzw
                sample_l_aoffimmi(0,1,0) r5.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,1,0) r6.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,0,0) r7.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(0,0,0) r8.xyzw, r4.xyxx, t1.yzwx, s0, l(0.000000)
                mov r8.x, r5.x
                mov r8.y, r6.x
                mov r8.z, r7.x
                add r5.xyzw, r8.xyzw, -cb0[19].wwww
                div r5.xyzw, -cb0[20].xxxx, r5.xyzw
                sample_l_aoffimmi(0,1,0) r6.xyzw, r2.zwzz, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,1,0) r7.xyzw, r2.zwzz, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,0,0) r8.xyzw, r2.zwzz, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(0,0,0) r9.xyzw, r2.zwzz, t1.yxzw, s0, l(0.000000)
                mov r9.z, r6.x
                mov r9.w, r7.x
                mov r9.x, r8.x
                add r6.xyzw, r9.xyzw, -cb0[19].wwww
                div r6.xyzw, -cb0[20].xxxx, r6.xyzw
                add r7.xyzw, r0.wwww, -r5.xyzw
                lt r8.xyzw, r7.xyzw, cb0[18].zzzz
                and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                lt r7.xyzw, cb0[19].xxxx, r7.xyzw
                and r7.xyzw, r7.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                mul r7.xyzw, r7.xyzw, r8.xyzw
                add r8.xyzw, r0.wwww, -r6.xyzw
                lt r9.xyzw, r8.xyzw, cb0[18].zzzz
                and r9.xyzw, r9.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                lt r8.xyzw, cb0[19].xxxx, r8.xyzw
                and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                mul r8.xyzw, r8.xyzw, r9.xyzw
                mul r7.xyzw, r7.xyzw, r8.xyzw
                mul r7.xyzw, r7.xyzw, icb[r2.y + 20].xyzw
                mad r7.xyzw, r7.xyzw, r0.zzzz, r3.xyzw
                sample_l_aoffimmi(0,1,0) r8.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,1,0) r9.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,0,0) r10.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(0,0,0) r4.xyzw, r4.xyxx, t0.yzwx, s0, l(0.000000)
                sample_l_aoffimmi(0,1,0) r11.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,1,0) r12.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,0,0) r13.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(0,0,0) r14.xyzw, r2.zwzz, t0.yxzw, s0, l(0.000000)
                mov r4.x, r8.x
                mov r4.y, r9.x
                mov r4.z, r10.x
                mad r4.xyzw, r4.xyzw, cb0[20].yyyy, r5.xyzw
                mov r14.z, r11.x
                mov r14.w, r12.x
                mov r14.x, r13.x
                mad r5.xyzw, r14.xyzw, cb0[20].yyyy, r6.xyzw
                add r4.xyzw, r2.xxxx, -r4.xyzw
                lt r6.xyzw, r4.xyzw, cb0[18].zzzz
                and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                lt r4.xyzw, cb0[19].xxxx, r4.xyzw
                and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                mul r4.xyzw, r4.xyzw, r6.xyzw
                add r5.xyzw, r2.xxxx, -r5.xyzw
                lt r6.xyzw, r5.xyzw, cb0[18].zzzz
                and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                lt r5.xyzw, cb0[19].xxxx, r5.xyzw
                and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                mul r5.xyzw, r5.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, icb[r2.y + 20].xyzw
                mad r3.xyzw, r4.xyzw, r0.zzzz, r7.xyzw
                iadd r2.y, r2.y, l(1)
              endloop 
            else 
              mov r3.xyzw, l(0,0,0,0)
            endif 
            add r0.x, r3.y, r3.x
            add r0.x, r3.z, r0.x
            add r0.x, r3.w, r0.x
            mul r0.x, r0.x, cb0[18].w
            mul_sat r0.x, r0.x, l(0.013367)
            add o0.x, -r0.x, l(1.000000)
            ret 
            // Approximately 123 instruction slots used
                    
        };
    }

}

technique10 RenderHDAO_10_0
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64 [unused]
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64 [unused]
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txNormals                       texture  float4          2d             t0      1 
            // g_txDepth                         texture  float4          2d             t1      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   x           0   TARGET   float   x   
            //
            ps_4_0
            dcl_immediateConstantBuffer { { 1, 8, 1.000000, -1.000000},
                                          { 8, -1, 0, 1.000000},
                                          { 5, 4, 0, 3.000000},
                                          { 4, -4, 2.000000, 1.000000},
                                          { 0, 0, 3.000000, -1.000000},
                                          { 0, 0, 1.000000, -3.000000},
                                          { 0, 0, 1.000000, -5.000000},
                                          { 0, 0, 3.000000, -3.000000},
                                          { 0, 0, 5.000000, -1.000000},
                                          { 0, 0, 4.000000, 1.000000},
                                          { 0, 0, 2.000000, 3.000000},
                                          { 0, 0, 0, 5.000000},
                                          { 0, 0, 0, 7.000000},
                                          { 0, 0, 2.000000, 5.000000},
                                          { 0, 0, 4.000000, 3.000000},
                                          { 0, 0, 6.000000, 1.000000},
                                          { 0, 0, 7.000000, -1.000000},
                                          { 0, 0, 5.000000, -3.000000},
                                          { 0, 0, 3.000000, -5.000000},
                                          { 0, 0, 1.000000, -7.000000},
                                          { 1.000000, 0.500000, 0.447210, 0.707110},
                                          { 0.500000, 0.447210, 0.707110, 1.000000},
                                          { 0.300000, 0.291040, 0.379470, 0.400000},
                                          { 0.424260, 0.332820, 0.379470, 0.536660},
                                          { 0.400000, 0.300000, 0.291040, 0.379470},
                                          { 0.536660, 0.424260, 0.332820, 0.379470},
                                          { 0.315300, 0.290690, 0.241400, 0.254950},
                                          { 0.360560, 0.290690, 0.260000, 0.306410},
                                          { 0.260000, 0.216670, 0.213720, 0.254950},
                                          { 0.290690, 0.241400, 0.254950, 0.315300},
                                          { 0.290690, 0.260000, 0.306410, 0.360560},
                                          { 0.216670, 0.213720, 0.254950, 0.260000},
                                          { 0.175000, 0.173650, 0.197990, 0.200000},
                                          { 0.221360, 0.208700, 0.240100, 0.259970},
                                          { 0.247490, 0.218640, 0.240100, 0.280000},
                                          { 0.221360, 0.192300, 0.197990, 0.230160},
                                          { 0.200000, 0.175000, 0.173650, 0.197990},
                                          { 0.259970, 0.221360, 0.208700, 0.240100},
                                          { 0.280000, 0.247490, 0.218640, 0.240100},
                                          { 0.230160, 0.221360, 0.192300, 0.197990} }
            dcl_constantbuffer CB0[21], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.x
            dcl_temps 9
            mul r0.xy, v1.xyxx, cb0[18].xyxx
            ftoi r0.zw, r0.xxxy
            add r1.xy, cb0[18].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
            mov r2.zw, l(0,0,0,0)
            mov r3.zw, l(0,0,0,0)
            mov r1.zw, l(0,0,0,0)
            loop 
              ige r4.x, r1.w, l(4)
              breakc_nz r4.x
              iadd r4.xy, r0.zwzz, -icb[r1.w + 0].xyxx
              iadd r4.zw, r0.zzzw, icb[r1.w + 0].xxxy
              iadd r4.xy, r4.xyxx, l(-1, -1, 0, 0)
              itof r4.xyzw, r4.xyzw
              min r4.xyzw, r1.xyxy, r4.xyzw
              ftoi r4.xyzw, r4.xyzw
              imax r2.xy, r4.zwzz, l(0, 0, 0, 0)
              imax r3.xy, r4.xyxx, l(0, 0, 0, 0)
              ld r4.xyzw, r2.xyzw, t0.xyzw
              ld r5.xyzw, r3.xyzw, t0.xyzw
              dp3 r2.x, r4.xyzx, r5.xyzx
              lt r2.y, cb0[20].z, r2.x
              mad r2.x, -|r2.x|, l(0.250000), l(1.000000)
              movc r2.x, r2.y, l(0), r2.x
              add r1.z, r1.z, r2.x
              iadd r1.w, r1.w, l(1)
            endloop 
            mad r0.z, r1.z, l(0.250000), l(0.500000)
            lt r0.w, l(0.500000), r0.z
            if_nz r0.w
              mul r1.xy, cb0[18].xyxx, l(0.000977, 0.001302, 0.000000, 0.000000)
              div r1.zw, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].xxxy
              mul r2.xy, r0.xyxx, r1.zwzz
              sample_l r2.xyzw, r2.xyxx, t1.xyzw, s0, l(0.000000)
              add r0.w, r2.x, -cb0[19].w
              div r0.w, -cb0[20].x, r0.w
              mov r2.xyzw, l(0,0,0,0)
              mov r3.x, l(0)
              loop 
                ige r3.y, r3.x, l(20)
                breakc_nz r3.y
                mad r3.yz, r1.xxyx, icb[r3.x + 0].zzwz, l(0.000000, 1.000000, 1.000000, 0.000000)
                mad r4.xy, r1.xyxx, icb[r3.x + 0].zwzz, r0.xyxx
                mul r4.xy, r1.zwzz, r4.xyxx
                mad r3.yz, v1.xxyx, cb0[18].xxyx, -r3.yyzy
                mul r3.yz, r1.zzwz, r3.yyzy
                sample_l_aoffimmi(0,1,0) r5.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,1,0) r6.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,0,0) r7.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(0,0,0) r4.xyzw, r4.xyxx, t1.yzwx, s0, l(0.000000)
                mov r4.x, r5.x
                mov r4.y, r6.x
                mov r4.z, r7.x
                add r4.xyzw, r4.xyzw, -cb0[19].wwww
                div r4.xyzw, -cb0[20].xxxx, r4.xyzw
                sample_l_aoffimmi(0,1,0) r5.xyzw, r3.yzyy, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,1,0) r6.xyzw, r3.yzyy, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(1,0,0) r7.xyzw, r3.yzyy, t1.xyzw, s0, l(0.000000)
                sample_l_aoffimmi(0,0,0) r8.xyzw, r3.yzyy, t1.yxzw, s0, l(0.000000)
                mov r8.z, r5.x
                mov r8.w, r6.x
                mov r8.x, r7.x
                add r5.xyzw, r8.xyzw, -cb0[19].wwww
                div r5.xyzw, -cb0[20].xxxx, r5.xyzw
                add r4.xyzw, r0.wwww, -r4.xyzw
                lt r6.xyzw, r4.xyzw, cb0[18].zzzz
                and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                lt r4.xyzw, cb0[19].xxxx, r4.xyzw
                and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                mul r4.xyzw, r4.xyzw, r6.xyzw
                add r5.xyzw, r0.wwww, -r5.xyzw
                lt r6.xyzw, r5.xyzw, cb0[18].zzzz
                and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                lt r5.xyzw, cb0[19].xxxx, r5.xyzw
                and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                mul r5.xyzw, r5.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, icb[r3.x + 20].xyzw
                mad r2.xyzw, r4.xyzw, r0.zzzz, r2.xyzw
                iadd r3.x, r3.x, l(1)
              endloop 
            else 
              mov r2.xyzw, l(0,0,0,0)
            endif 
            add r0.x, r2.y, r2.x
            add r0.x, r2.z, r0.x
            add r0.x, r2.w, r0.x
            mul r0.x, r0.x, cb0[18].w
            mul_sat r0.x, r0.x, l(0.020051)
            add o0.x, -r0.x, l(1.000000)
            ret 
            // Approximately 90 instruction slots used
                    
        };
    }

}

technique10 RenderCombined
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txScene                         texture  float4          2d             t0      1 
            // g_txHDAO                          texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 2
            sample r0.xyzw, v1.xyxx, t1.xyzw, s0
            sample r1.xyzw, v1.xyxx, t0.xyzw, s0
            mul o0.xyzw, r0.xxxx, r1.xyzw
            ret 
            // Approximately 4 instruction slots used
                    
        };
    }

}

technique10 RenderHDAOBuffer
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txHDAO                          texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v1.xyxx, t0.xyzw, s0
            mov o0.xyzw, r0.xxxx
            ret 
            // Approximately 3 instruction slots used
                    
        };
    }

}

technique10 RenderCameraZ
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float3 g_f3LightDir;               // Offset:    0 Size:    12 [unused]
            //   float3 g_f3EyePt;                  // Offset:   16 Size:    12 [unused]
            //   float g_fTime;                     // Offset:   28 Size:     4 [unused]
            //   float4x4 g_f4x4World;              // Offset:   32 Size:    64 [unused]
            //   float4x4 g_f4x4View;               // Offset:   96 Size:    64 [unused]
            //   float4x4 g_f4x4WorldViewProjection;// Offset:  160 Size:    64 [unused]
            //   float4x4 g_f4x4InvProjection;      // Offset:  224 Size:    64 [unused]
            //   float2 g_f2RTSize;                 // Offset:  288 Size:     8 [unused]
            //   float g_fHDAORejectRadius;         // Offset:  296 Size:     4 [unused]
            //   float g_fHDAOIntensity;            // Offset:  300 Size:     4 [unused]
            //   float g_fHDAOAcceptRadius;         // Offset:  304 Size:     4 [unused]
            //   float g_fZFar;                     // Offset:  308 Size:     4 [unused]
            //   float g_fZNear;                    // Offset:  312 Size:     4 [unused]
            //   float g_fQ;                        // Offset:  316 Size:     4
            //   float g_fQTimesZNear;              // Offset:  320 Size:     4
            //   float g_fNormalScale;              // Offset:  324 Size:     4 [unused]
            //   float g_fAcceptAngle;              // Offset:  328 Size:     4 [unused]
            //   float4 g_f4MaterialDiffuse;        // Offset:  336 Size:    16 [unused]
            //   float4 g_f4MaterialSpecular;       // Offset:  352 Size:    16 [unused]
            //   float g_fTanH;                     // Offset:  368 Size:     4 [unused]
            //   float g_fTanV;                     // Offset:  372 Size:     4 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txDepth                         texture  float4          2d             t0      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[21], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
            add r0.x, r0.x, -cb0[19].w
            div r0.x, -cb0[20].x, r0.x
            mul o0.xyzw, r0.xxxx, l(0.005000, 0.005000, 0.005000, 0.005000)
            ret 
            // Approximately 5 instruction slots used
                    
        };
    }

}

technique10 RenderNormalsBuffer_10_0
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txNormals                       texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v1.xyxx, t0.xyzw, s0
            mov o0.xyz, r0.yzxy
            mov o0.w, l(0)
            ret 
            // Approximately 4 instruction slots used
                    
        };
    }

}

technique10 RenderNormalsBuffer_10_1
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txNormalsZ                      texture  float4          2d             t0      1 
            // g_txNormalsXY                     texture  float4          2d             t1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            dcl_temps 1
            sample r0.xyzw, v1.xyxx, t1.xyzw, s0
            mov o0.xy, r0.xyxx
            sample r0.xyzw, v1.xyxx, t0.xyzw, s0
            mov o0.z, r0.x
            mov o0.w, l(0)
            ret 
            // Approximately 6 instruction slots used
                    
        };
    }

}

technique10 RenderUnCombined
{
    pass P0
    {
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepthTestWrite;
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            vs_4_0
            dcl_input v0.xyz
            dcl_input v1.xy
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            mov o0.xyz, v0.xyzx
            mov o0.w, l(1.000000)
            mov o1.xy, v1.xyxx
            ret 
            // Approximately 4 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_SamplePoint                     sampler      NA          NA             s0      1 
            // g_txScene                         texture  float4          2d             t0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // TEXTURE                  0   xy          1     NONE   float   xy  
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_input_ps linear v1.xy
            dcl_output o0.xyzw
            sample o0.xyzw, v1.xyxx, t0.xyzw, s0
            ret 
            // Approximately 2 instruction slots used
                    
        };
    }

}

