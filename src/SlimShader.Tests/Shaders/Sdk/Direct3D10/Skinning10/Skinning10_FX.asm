//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 5 local buffer(s)
//
cbuffer cb0
{
    float4x4 g_mWorldViewProj;          // Offset:    0, size:   64
    float4x4 g_mWorld;                  // Offset:   64, size:   64
}

cbuffer cbUserChange
{
    float3  g_vLightPos;                // Offset:    0, size:   12
    float3  g_vEyePt;                   // Offset:   16, size:   12
}

cbuffer cbImmutable
{
    float4  g_directional = { 1 };      // Offset:    0, size:   16
    float4  g_ambient = { 0.100000001, 0.100000001, 0.100000001, 0 };// Offset:   16, size:   16
    float4  g_objectspeccolor = { 1 };  // Offset:   32, size:   16
}

cbuffer cbAnimMatrices
{
    float4x4 g_mConstBoneWorld[255];    // Offset:    0, size: 16320
}

tbuffer tbAnimMatrices
{
    float4x4 g_mTexBoneWorld[255];      // Offset:    0, size: 16320
}

//
// 16 local object(s)
//
Texture2D g_txDiffuse;
Texture2D g_txNormal;
Texture1D g_txTexBoneWorld;
Buffer  g_BufferBoneWorld;
SamplerState g_samLinear
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState g_samPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
DepthStencilState DisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState EnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
};
VertexShader vsConstantBuffer = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Buffer Definitions: 
        //
        // cbuffer cbAnimMatrices
        // {
        //
        //   float4x4 g_mConstBoneWorld[255];   // Offset:    0 Size: 16320
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // cbAnimMatrices                    cbuffer      NA          NA            cb0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_constantbuffer CB0[1020], dynamicIndexed
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 4
        mov r0.xyz, v0.xyzx
        mov r0.w, l(1.000000)
        ishl r1.xyzw, v2.xyzw, l(2)
        dp4 r2.x, r0.xyzw, cb0[r1.y + 0].xyzw
        dp4 r2.y, r0.xyzw, cb0[r1.y + 1].xyzw
        dp4 r2.z, r0.xyzw, cb0[r1.y + 2].xyzw
        dp4 r2.w, r0.xyzw, cb0[r1.y + 3].xyzw
        mul r2.xyzw, r2.xyzw, v1.yyyy
        dp4 r3.x, r0.xyzw, cb0[r1.x + 0].xyzw
        dp4 r3.y, r0.xyzw, cb0[r1.x + 1].xyzw
        dp4 r3.z, r0.xyzw, cb0[r1.x + 2].xyzw
        dp4 r3.w, r0.xyzw, cb0[r1.x + 3].xyzw
        mad r2.xyzw, v1.xxxx, r3.xyzw, r2.xyzw
        dp4 r3.x, r0.xyzw, cb0[r1.z + 0].xyzw
        dp4 r3.y, r0.xyzw, cb0[r1.z + 1].xyzw
        dp4 r3.z, r0.xyzw, cb0[r1.z + 2].xyzw
        dp4 r3.w, r0.xyzw, cb0[r1.z + 3].xyzw
        mad r2.xyzw, v1.zzzz, r3.xyzw, r2.xyzw
        dp4 r3.x, r0.xyzw, cb0[r1.w + 0].xyzw
        dp4 r3.y, r0.xyzw, cb0[r1.w + 1].xyzw
        dp4 r3.z, r0.xyzw, cb0[r1.w + 2].xyzw
        dp4 r3.w, r0.xyzw, cb0[r1.w + 3].xyzw
        mad o0.xyzw, v1.wwww, r3.xyzw, r2.xyzw
        dp3 r0.x, v3.xyzx, cb0[r1.y + 0].xyzx
        dp3 r0.y, v3.xyzx, cb0[r1.y + 1].xyzx
        dp3 r0.z, v3.xyzx, cb0[r1.y + 2].xyzx
        mul r0.xyz, r0.xyzx, v1.yyyy
        dp3 r2.x, v3.xyzx, cb0[r1.x + 0].xyzx
        dp3 r2.y, v3.xyzx, cb0[r1.x + 1].xyzx
        dp3 r2.z, v3.xyzx, cb0[r1.x + 2].xyzx
        mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
        dp3 r2.x, v3.xyzx, cb0[r1.z + 0].xyzx
        dp3 r2.y, v3.xyzx, cb0[r1.z + 1].xyzx
        dp3 r2.z, v3.xyzx, cb0[r1.z + 2].xyzx
        mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
        dp3 r2.x, v3.xyzx, cb0[r1.w + 0].xyzx
        dp3 r2.y, v3.xyzx, cb0[r1.w + 1].xyzx
        dp3 r2.z, v3.xyzx, cb0[r1.w + 2].xyzx
        mad o1.xyz, v1.wwww, r2.xyzx, r0.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.x, v5.xyzx, cb0[r1.y + 0].xyzx
        dp3 r0.y, v5.xyzx, cb0[r1.y + 1].xyzx
        dp3 r0.z, v5.xyzx, cb0[r1.y + 2].xyzx
        mul r0.xyz, r0.xyzx, v1.yyyy
        dp3 r2.x, v5.xyzx, cb0[r1.x + 0].xyzx
        dp3 r2.y, v5.xyzx, cb0[r1.x + 1].xyzx
        dp3 r2.z, v5.xyzx, cb0[r1.x + 2].xyzx
        mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
        dp3 r2.x, v5.xyzx, cb0[r1.z + 0].xyzx
        dp3 r2.y, v5.xyzx, cb0[r1.z + 1].xyzx
        dp3 r2.z, v5.xyzx, cb0[r1.z + 2].xyzx
        mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
        dp3 r1.x, v5.xyzx, cb0[r1.w + 0].xyzx
        dp3 r1.y, v5.xyzx, cb0[r1.w + 1].xyzx
        dp3 r1.z, v5.xyzx, cb0[r1.w + 2].xyzx
        mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
        dp3 r0.w, r0.xyzx, r0.xyzx
        rsq r0.w, r0.w
        mul o3.xyz, r0.wwww, r0.xyzx
        ret 
        // Approximately 60 instruction slots used
            
    };
GeometryShader vsConstantBufferSO = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Buffer Definitions: 
        //
        // cbuffer cbAnimMatrices
        // {
        //
        //   float4x4 g_mConstBoneWorld[255];   // Offset:    0 Size: 16320
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // cbAnimMatrices                    cbuffer      NA          NA            cb0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_constantbuffer CB0[1020], dynamicIndexed
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 4
        mov r0.xyz, v0.xyzx
        mov r0.w, l(1.000000)
        ishl r1.xyzw, v2.xyzw, l(2)
        dp4 r2.x, r0.xyzw, cb0[r1.y + 0].xyzw
        dp4 r2.y, r0.xyzw, cb0[r1.y + 1].xyzw
        dp4 r2.z, r0.xyzw, cb0[r1.y + 2].xyzw
        dp4 r2.w, r0.xyzw, cb0[r1.y + 3].xyzw
        mul r2.xyzw, r2.xyzw, v1.yyyy
        dp4 r3.x, r0.xyzw, cb0[r1.x + 0].xyzw
        dp4 r3.y, r0.xyzw, cb0[r1.x + 1].xyzw
        dp4 r3.z, r0.xyzw, cb0[r1.x + 2].xyzw
        dp4 r3.w, r0.xyzw, cb0[r1.x + 3].xyzw
        mad r2.xyzw, v1.xxxx, r3.xyzw, r2.xyzw
        dp4 r3.x, r0.xyzw, cb0[r1.z + 0].xyzw
        dp4 r3.y, r0.xyzw, cb0[r1.z + 1].xyzw
        dp4 r3.z, r0.xyzw, cb0[r1.z + 2].xyzw
        dp4 r3.w, r0.xyzw, cb0[r1.z + 3].xyzw
        mad r2.xyzw, v1.zzzz, r3.xyzw, r2.xyzw
        dp4 r3.x, r0.xyzw, cb0[r1.w + 0].xyzw
        dp4 r3.y, r0.xyzw, cb0[r1.w + 1].xyzw
        dp4 r3.z, r0.xyzw, cb0[r1.w + 2].xyzw
        dp4 r3.w, r0.xyzw, cb0[r1.w + 3].xyzw
        mad o0.xyzw, v1.wwww, r3.xyzw, r2.xyzw
        dp3 r0.x, v3.xyzx, cb0[r1.y + 0].xyzx
        dp3 r0.y, v3.xyzx, cb0[r1.y + 1].xyzx
        dp3 r0.z, v3.xyzx, cb0[r1.y + 2].xyzx
        mul r0.xyz, r0.xyzx, v1.yyyy
        dp3 r2.x, v3.xyzx, cb0[r1.x + 0].xyzx
        dp3 r2.y, v3.xyzx, cb0[r1.x + 1].xyzx
        dp3 r2.z, v3.xyzx, cb0[r1.x + 2].xyzx
        mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
        dp3 r2.x, v3.xyzx, cb0[r1.z + 0].xyzx
        dp3 r2.y, v3.xyzx, cb0[r1.z + 1].xyzx
        dp3 r2.z, v3.xyzx, cb0[r1.z + 2].xyzx
        mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
        dp3 r2.x, v3.xyzx, cb0[r1.w + 0].xyzx
        dp3 r2.y, v3.xyzx, cb0[r1.w + 1].xyzx
        dp3 r2.z, v3.xyzx, cb0[r1.w + 2].xyzx
        mad o1.xyz, v1.wwww, r2.xyzx, r0.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.x, v5.xyzx, cb0[r1.y + 0].xyzx
        dp3 r0.y, v5.xyzx, cb0[r1.y + 1].xyzx
        dp3 r0.z, v5.xyzx, cb0[r1.y + 2].xyzx
        mul r0.xyz, r0.xyzx, v1.yyyy
        dp3 r2.x, v5.xyzx, cb0[r1.x + 0].xyzx
        dp3 r2.y, v5.xyzx, cb0[r1.x + 1].xyzx
        dp3 r2.z, v5.xyzx, cb0[r1.x + 2].xyzx
        mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
        dp3 r2.x, v5.xyzx, cb0[r1.z + 0].xyzx
        dp3 r2.y, v5.xyzx, cb0[r1.z + 1].xyzx
        dp3 r2.z, v5.xyzx, cb0[r1.z + 2].xyzx
        mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
        dp3 r1.x, v5.xyzx, cb0[r1.w + 0].xyzx
        dp3 r1.y, v5.xyzx, cb0[r1.w + 1].xyzx
        dp3 r1.z, v5.xyzx, cb0[r1.w + 2].xyzx
        mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
        dp3 r0.w, r0.xyzx, r0.xyzx
        rsq r0.w, r0.w
        mul o3.xyz, r0.wwww, r0.xyzx
        ret 
        // Approximately 60 instruction slots used
            
    }
/* Stream out decl: "POSITION.xyzw; NORMAL.xyz; TEXCOORD.xy; TANGENT.xyz" */;
VertexShader vsTextureBuffer = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Buffer Definitions: 
        //
        // tbuffer tbAnimMatrices
        // {
        //
        //   float4x4 g_mTexBoneWorld[255];     // Offset:    0 Size: 16320
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // tbAnimMatrices                    tbuffer      NA          NA             t0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_resource_buffer (mixed,mixed,mixed,mixed) t0
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 15
        ishl r0.xyzw, v2.xyzw, l(2)
        iadd r1.xyzw, r0.xxxy, l(3, 2, 1, 3)
        ld r2.xyzw, r1.wwww, t0.xyzw
        mov r3.xyz, v0.xyzx
        mov r3.w, l(1.000000)
        dp4 r2.w, r3.xyzw, r2.xyzw
        iadd r4.xyzw, r0.yyzz, l(2, 1, 3, 2)
        ld r5.xyzw, r4.yyyy, t0.xyzw
        dp4 r2.y, r3.xyzw, r5.xyzw
        ld r6.xyzw, r4.xxxx, t0.xyzw
        dp4 r2.z, r3.xyzw, r6.xyzw
        ld r7.xyzw, r0.yyyy, t0.xyzw
        dp4 r2.x, r3.xyzw, r7.xyzw
        mul r2.xyzw, r2.xyzw, v1.yyyy
        ld r8.xyzw, r1.xxxx, t0.xyzw
        dp4 r8.w, r3.xyzw, r8.xyzw
        ld r9.xyzw, r1.zzzz, t0.xyzw
        ld r1.xyzw, r1.yyyy, t0.xyzw
        dp4 r8.y, r3.xyzw, r9.xyzw
        dp4 r8.z, r3.xyzw, r1.xyzw
        ld r10.xyzw, r0.xxxx, t0.xyzw
        dp4 r8.x, r3.xyzw, r10.xyzw
        mad r2.xyzw, v1.xxxx, r8.xyzw, r2.xyzw
        ld r8.xyzw, r4.zzzz, t0.xyzw
        ld r4.xyzw, r4.wwww, t0.xyzw
        dp4 r8.w, r3.xyzw, r8.xyzw
        iadd r11.xyzw, r0.zwww, l(1, 3, 2, 1)
        ld r12.xyzw, r11.xxxx, t0.xyzw
        dp4 r8.y, r3.xyzw, r12.xyzw
        dp4 r8.z, r3.xyzw, r4.xyzw
        ld r13.xyzw, r0.zzzz, t0.xyzw
        ld r0.xyzw, r0.wwww, t0.xyzw
        dp4 r8.x, r3.xyzw, r13.xyzw
        mad r2.xyzw, v1.zzzz, r8.xyzw, r2.xyzw
        ld r8.xyzw, r11.yyyy, t0.xyzw
        dp4 r8.w, r3.xyzw, r8.xyzw
        ld r14.xyzw, r11.wwww, t0.xyzw
        ld r11.xyzw, r11.zzzz, t0.xyzw
        dp4 r8.y, r3.xyzw, r14.xyzw
        dp4 r8.z, r3.xyzw, r11.xyzw
        dp4 r8.x, r3.xyzw, r0.xyzw
        mad o0.xyzw, v1.wwww, r8.xyzw, r2.xyzw
        dp3 r2.y, v3.xyzx, r5.xyzx
        dp3 r3.y, v5.xyzx, r5.xyzx
        dp3 r2.z, v3.xyzx, r6.xyzx
        dp3 r3.z, v5.xyzx, r6.xyzx
        dp3 r2.x, v3.xyzx, r7.xyzx
        dp3 r3.x, v5.xyzx, r7.xyzx
        mul r3.xyz, r3.xyzx, v1.yyyy
        mul r2.xyz, r2.xyzx, v1.yyyy
        dp3 r5.y, v3.xyzx, r9.xyzx
        dp3 r6.y, v5.xyzx, r9.xyzx
        dp3 r5.z, v3.xyzx, r1.xyzx
        dp3 r6.z, v5.xyzx, r1.xyzx
        dp3 r5.x, v3.xyzx, r10.xyzx
        dp3 r6.x, v5.xyzx, r10.xyzx
        mad r1.xyz, v1.xxxx, r6.xyzx, r3.xyzx
        mad r2.xyz, v1.xxxx, r5.xyzx, r2.xyzx
        dp3 r3.y, v3.xyzx, r12.xyzx
        dp3 r5.y, v5.xyzx, r12.xyzx
        dp3 r3.z, v3.xyzx, r4.xyzx
        dp3 r5.z, v5.xyzx, r4.xyzx
        dp3 r3.x, v3.xyzx, r13.xyzx
        dp3 r5.x, v5.xyzx, r13.xyzx
        mad r1.xyz, v1.zzzz, r5.xyzx, r1.xyzx
        mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
        dp3 r3.y, v3.xyzx, r14.xyzx
        dp3 r4.y, v5.xyzx, r14.xyzx
        dp3 r3.z, v3.xyzx, r11.xyzx
        dp3 r4.z, v5.xyzx, r11.xyzx
        dp3 r3.x, v3.xyzx, r0.xyzx
        dp3 r4.x, v5.xyzx, r0.xyzx
        mad r0.xyz, v1.wwww, r4.xyzx, r1.xyzx
        mad o1.xyz, v1.wwww, r3.xyzx, r2.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.w, r0.xyzx, r0.xyzx
        rsq r0.w, r0.w
        mul o3.xyz, r0.wwww, r0.xyzx
        ret 
        // Approximately 79 instruction slots used
            
    };
GeometryShader vsTextureBufferSO = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Buffer Definitions: 
        //
        // tbuffer tbAnimMatrices
        // {
        //
        //   float4x4 g_mTexBoneWorld[255];     // Offset:    0 Size: 16320
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // tbAnimMatrices                    tbuffer      NA          NA             t0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_resource_buffer (mixed,mixed,mixed,mixed) t0
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 15
        ishl r0.xyzw, v2.xyzw, l(2)
        iadd r1.xyzw, r0.xxxy, l(3, 2, 1, 3)
        ld r2.xyzw, r1.wwww, t0.xyzw
        mov r3.xyz, v0.xyzx
        mov r3.w, l(1.000000)
        dp4 r2.w, r3.xyzw, r2.xyzw
        iadd r4.xyzw, r0.yyzz, l(2, 1, 3, 2)
        ld r5.xyzw, r4.yyyy, t0.xyzw
        dp4 r2.y, r3.xyzw, r5.xyzw
        ld r6.xyzw, r4.xxxx, t0.xyzw
        dp4 r2.z, r3.xyzw, r6.xyzw
        ld r7.xyzw, r0.yyyy, t0.xyzw
        dp4 r2.x, r3.xyzw, r7.xyzw
        mul r2.xyzw, r2.xyzw, v1.yyyy
        ld r8.xyzw, r1.xxxx, t0.xyzw
        dp4 r8.w, r3.xyzw, r8.xyzw
        ld r9.xyzw, r1.zzzz, t0.xyzw
        ld r1.xyzw, r1.yyyy, t0.xyzw
        dp4 r8.y, r3.xyzw, r9.xyzw
        dp4 r8.z, r3.xyzw, r1.xyzw
        ld r10.xyzw, r0.xxxx, t0.xyzw
        dp4 r8.x, r3.xyzw, r10.xyzw
        mad r2.xyzw, v1.xxxx, r8.xyzw, r2.xyzw
        ld r8.xyzw, r4.zzzz, t0.xyzw
        ld r4.xyzw, r4.wwww, t0.xyzw
        dp4 r8.w, r3.xyzw, r8.xyzw
        iadd r11.xyzw, r0.zwww, l(1, 3, 2, 1)
        ld r12.xyzw, r11.xxxx, t0.xyzw
        dp4 r8.y, r3.xyzw, r12.xyzw
        dp4 r8.z, r3.xyzw, r4.xyzw
        ld r13.xyzw, r0.zzzz, t0.xyzw
        ld r0.xyzw, r0.wwww, t0.xyzw
        dp4 r8.x, r3.xyzw, r13.xyzw
        mad r2.xyzw, v1.zzzz, r8.xyzw, r2.xyzw
        ld r8.xyzw, r11.yyyy, t0.xyzw
        dp4 r8.w, r3.xyzw, r8.xyzw
        ld r14.xyzw, r11.wwww, t0.xyzw
        ld r11.xyzw, r11.zzzz, t0.xyzw
        dp4 r8.y, r3.xyzw, r14.xyzw
        dp4 r8.z, r3.xyzw, r11.xyzw
        dp4 r8.x, r3.xyzw, r0.xyzw
        mad o0.xyzw, v1.wwww, r8.xyzw, r2.xyzw
        dp3 r2.y, v3.xyzx, r5.xyzx
        dp3 r3.y, v5.xyzx, r5.xyzx
        dp3 r2.z, v3.xyzx, r6.xyzx
        dp3 r3.z, v5.xyzx, r6.xyzx
        dp3 r2.x, v3.xyzx, r7.xyzx
        dp3 r3.x, v5.xyzx, r7.xyzx
        mul r3.xyz, r3.xyzx, v1.yyyy
        mul r2.xyz, r2.xyzx, v1.yyyy
        dp3 r5.y, v3.xyzx, r9.xyzx
        dp3 r6.y, v5.xyzx, r9.xyzx
        dp3 r5.z, v3.xyzx, r1.xyzx
        dp3 r6.z, v5.xyzx, r1.xyzx
        dp3 r5.x, v3.xyzx, r10.xyzx
        dp3 r6.x, v5.xyzx, r10.xyzx
        mad r1.xyz, v1.xxxx, r6.xyzx, r3.xyzx
        mad r2.xyz, v1.xxxx, r5.xyzx, r2.xyzx
        dp3 r3.y, v3.xyzx, r12.xyzx
        dp3 r5.y, v5.xyzx, r12.xyzx
        dp3 r3.z, v3.xyzx, r4.xyzx
        dp3 r5.z, v5.xyzx, r4.xyzx
        dp3 r3.x, v3.xyzx, r13.xyzx
        dp3 r5.x, v5.xyzx, r13.xyzx
        mad r1.xyz, v1.zzzz, r5.xyzx, r1.xyzx
        mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
        dp3 r3.y, v3.xyzx, r14.xyzx
        dp3 r4.y, v5.xyzx, r14.xyzx
        dp3 r3.z, v3.xyzx, r11.xyzx
        dp3 r4.z, v5.xyzx, r11.xyzx
        dp3 r3.x, v3.xyzx, r0.xyzx
        dp3 r4.x, v5.xyzx, r0.xyzx
        mad r0.xyz, v1.wwww, r4.xyzx, r1.xyzx
        mad o1.xyz, v1.wwww, r3.xyzx, r2.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.w, r0.xyzx, r0.xyzx
        rsq r0.w, r0.w
        mul o3.xyz, r0.wwww, r0.xyzx
        ret 
        // Approximately 79 instruction slots used
            
    }
/* Stream out decl: "POSITION.xyzw; NORMAL.xyz; TEXCOORD.xy; TANGENT.xyz" */;
VertexShader vsTexture = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // g_txTexBoneWorld                  texture  float4          1d             t0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_resource_texture1d (float,float,float,float) t0
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 15
        mov r0.yzw, l(0,0,0,0)
        ishl r1.xyzw, v2.xyzw, l(2)
        iadd r2.xyzw, r1.xxxy, l(1, 2, 3, 1)
        utof r2.xyzw, r2.xyzw
        ftoi r0.x, r2.x
        ld r0.xyzw, r0.xyzw, t0.xyzw
        mul r3.xyzw, r0.xyzw, v0.yyyy
        mov r4.yzw, l(0,0,0,0)
        utof r5.xyzw, r1.xyzw
        ftoi r4.x, r5.x
        ld r4.xyzw, r4.xyzw, t0.xyzw
        mad r3.xyzw, v0.xxxx, r4.xyzw, r3.xyzw
        mov r6.yzw, l(0,0,0,0)
        ftoi r6.x, r2.y
        ld r6.xyzw, r6.xyzw, t0.xyzw
        mad r3.xyzw, v0.zzzz, r6.xyzw, r3.xyzw
        mov r7.yzw, l(0,0,0,0)
        ftoi r7.x, r2.z
        ftoi r2.x, r2.w
        ld r7.xyzw, r7.xyzw, t0.xyzw
        add r3.xyzw, r3.xyzw, r7.xyzw
        mov r2.yzw, l(0,0,0,0)
        ld r2.xyzw, r2.xyzw, t0.xyzw
        mul r7.xyzw, r2.xyzw, v0.yyyy
        mov r8.yzw, l(0,0,0,0)
        ftoi r8.x, r5.y
        ld r8.xyzw, r8.xyzw, t0.xyzw
        mad r7.xyzw, v0.xxxx, r8.xyzw, r7.xyzw
        mov r9.yzw, l(0,0,0,0)
        iadd r10.xyzw, r1.yyzz, l(2, 3, 1, 2)
        iadd r1.xyzw, r1.zwww, l(3, 1, 2, 3)
        utof r1.xyzw, r1.xyzw
        utof r10.xyzw, r10.xyzw
        ftoi r9.x, r10.x
        ld r9.xyzw, r9.xyzw, t0.xyzw
        mad r7.xyzw, v0.zzzz, r9.xyzw, r7.xyzw
        ftoi r11.x, r10.y
        mov r11.yzw, l(0,0,0,0)
        ld r11.xyzw, r11.xyzw, t0.xyzw
        add r7.xyzw, r7.xyzw, r11.xyzw
        mul r7.xyzw, r7.xyzw, v1.yyyy
        mad r3.xyzw, v1.xxxx, r3.xyzw, r7.xyzw
        ftoi r7.x, r10.z
        ftoi r10.x, r10.w
        mov r7.yzw, l(0,0,0,0)
        ld r7.xyzw, r7.xyzw, t0.xyzw
        mul r11.xyzw, r7.xyzw, v0.yyyy
        ftoi r12.x, r5.z
        ftoi r5.x, r5.w
        mov r12.yzw, l(0,0,0,0)
        ld r12.xyzw, r12.xyzw, t0.xyzw
        mad r11.xyzw, v0.xxxx, r12.xyzw, r11.xyzw
        mov r10.yzw, l(0,0,0,0)
        ld r10.xyzw, r10.xyzw, t0.xyzw
        mad r11.xyzw, v0.zzzz, r10.xyzw, r11.xyzw
        mov r13.yzw, l(0,0,0,0)
        ftoi r13.x, r1.x
        ld r13.xyzw, r13.xyzw, t0.xyzw
        add r11.xyzw, r11.xyzw, r13.xyzw
        mad r3.xyzw, v1.zzzz, r11.xyzw, r3.xyzw
        ftoi r11.x, r1.w
        mov r11.yzw, l(0,0,0,0)
        ld r11.xyzw, r11.xyzw, t0.xyzw
        mov r5.yzw, l(0,0,0,0)
        ld r5.xyzw, r5.xyzw, t0.xyzw
        ftoi r13.x, r1.y
        ftoi r1.x, r1.z
        mov r13.yzw, l(0,0,0,0)
        ld r13.xyzw, r13.xyzw, t0.xyzw
        mul r14.xyzw, r13.xyzw, v0.yyyy
        mad r14.xyzw, v0.xxxx, r5.xyzw, r14.xyzw
        mov r1.yzw, l(0,0,0,0)
        ld r1.xyzw, r1.xyzw, t0.xyzw
        mad r14.xyzw, v0.zzzz, r1.xyzw, r14.xyzw
        add r11.xyzw, r11.xyzw, r14.xyzw
        mad o0.xyzw, v1.wwww, r11.xyzw, r3.xyzw
        mul r3.xyz, r2.xyzx, v3.yyyy
        mul r2.xyz, r2.xyzx, v5.yyyy
        mad r2.xyz, v5.xxxx, r8.xyzx, r2.xyzx
        mad r3.xyz, v3.xxxx, r8.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r9.xyzx, r3.xyzx
        mad r2.xyz, v5.zzzz, r9.xyzx, r2.xyzx
        mul r2.xyz, r2.xyzx, v1.yyyy
        mul r3.xyz, r3.xyzx, v1.yyyy
        mul r8.xyz, r0.xyzx, v3.yyyy
        mul r0.xyz, r0.xyzx, v5.yyyy
        mad r0.xyz, v5.xxxx, r4.xyzx, r0.xyzx
        mad r4.xyz, v3.xxxx, r4.xyzx, r8.xyzx
        mad r4.xyz, v3.zzzz, r6.xyzx, r4.xyzx
        mad r0.xyz, v5.zzzz, r6.xyzx, r0.xyzx
        mad r0.xyz, v1.xxxx, r0.xyzx, r2.xyzx
        mad r2.xyz, v1.xxxx, r4.xyzx, r3.xyzx
        mul r3.xyz, r7.xyzx, v3.yyyy
        mul r4.xyz, r7.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r12.xyzx, r4.xyzx
        mad r3.xyz, v3.xxxx, r12.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r10.xyzx, r3.xyzx
        mad r4.xyz, v5.zzzz, r10.xyzx, r4.xyzx
        mad r0.xyz, v1.zzzz, r4.xyzx, r0.xyzx
        mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
        mul r3.xyz, r13.xyzx, v3.yyyy
        mul r4.xyz, r13.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r5.xyzx, r4.xyzx
        mad r3.xyz, v3.xxxx, r5.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r1.xyzx, r3.xyzx
        mad r1.xyz, v5.zzzz, r1.xyzx, r4.xyzx
        mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
        mad o1.xyz, v1.wwww, r3.xyzx, r2.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.w, r0.xyzx, r0.xyzx
        rsq r0.w, r0.w
        mul o3.xyz, r0.wwww, r0.xyzx
        ret 
        // Approximately 113 instruction slots used
            
    };
GeometryShader vsTextureSO = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // g_txTexBoneWorld                  texture  float4          1d             t0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_resource_texture1d (float,float,float,float) t0
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 15
        mov r0.yzw, l(0,0,0,0)
        ishl r1.xyzw, v2.xyzw, l(2)
        iadd r2.xyzw, r1.xxxy, l(1, 2, 3, 1)
        utof r2.xyzw, r2.xyzw
        ftoi r0.x, r2.x
        ld r0.xyzw, r0.xyzw, t0.xyzw
        mul r3.xyzw, r0.xyzw, v0.yyyy
        mov r4.yzw, l(0,0,0,0)
        utof r5.xyzw, r1.xyzw
        ftoi r4.x, r5.x
        ld r4.xyzw, r4.xyzw, t0.xyzw
        mad r3.xyzw, v0.xxxx, r4.xyzw, r3.xyzw
        mov r6.yzw, l(0,0,0,0)
        ftoi r6.x, r2.y
        ld r6.xyzw, r6.xyzw, t0.xyzw
        mad r3.xyzw, v0.zzzz, r6.xyzw, r3.xyzw
        mov r7.yzw, l(0,0,0,0)
        ftoi r7.x, r2.z
        ftoi r2.x, r2.w
        ld r7.xyzw, r7.xyzw, t0.xyzw
        add r3.xyzw, r3.xyzw, r7.xyzw
        mov r2.yzw, l(0,0,0,0)
        ld r2.xyzw, r2.xyzw, t0.xyzw
        mul r7.xyzw, r2.xyzw, v0.yyyy
        mov r8.yzw, l(0,0,0,0)
        ftoi r8.x, r5.y
        ld r8.xyzw, r8.xyzw, t0.xyzw
        mad r7.xyzw, v0.xxxx, r8.xyzw, r7.xyzw
        mov r9.yzw, l(0,0,0,0)
        iadd r10.xyzw, r1.yyzz, l(2, 3, 1, 2)
        iadd r1.xyzw, r1.zwww, l(3, 1, 2, 3)
        utof r1.xyzw, r1.xyzw
        utof r10.xyzw, r10.xyzw
        ftoi r9.x, r10.x
        ld r9.xyzw, r9.xyzw, t0.xyzw
        mad r7.xyzw, v0.zzzz, r9.xyzw, r7.xyzw
        ftoi r11.x, r10.y
        mov r11.yzw, l(0,0,0,0)
        ld r11.xyzw, r11.xyzw, t0.xyzw
        add r7.xyzw, r7.xyzw, r11.xyzw
        mul r7.xyzw, r7.xyzw, v1.yyyy
        mad r3.xyzw, v1.xxxx, r3.xyzw, r7.xyzw
        ftoi r7.x, r10.z
        ftoi r10.x, r10.w
        mov r7.yzw, l(0,0,0,0)
        ld r7.xyzw, r7.xyzw, t0.xyzw
        mul r11.xyzw, r7.xyzw, v0.yyyy
        ftoi r12.x, r5.z
        ftoi r5.x, r5.w
        mov r12.yzw, l(0,0,0,0)
        ld r12.xyzw, r12.xyzw, t0.xyzw
        mad r11.xyzw, v0.xxxx, r12.xyzw, r11.xyzw
        mov r10.yzw, l(0,0,0,0)
        ld r10.xyzw, r10.xyzw, t0.xyzw
        mad r11.xyzw, v0.zzzz, r10.xyzw, r11.xyzw
        mov r13.yzw, l(0,0,0,0)
        ftoi r13.x, r1.x
        ld r13.xyzw, r13.xyzw, t0.xyzw
        add r11.xyzw, r11.xyzw, r13.xyzw
        mad r3.xyzw, v1.zzzz, r11.xyzw, r3.xyzw
        ftoi r11.x, r1.w
        mov r11.yzw, l(0,0,0,0)
        ld r11.xyzw, r11.xyzw, t0.xyzw
        mov r5.yzw, l(0,0,0,0)
        ld r5.xyzw, r5.xyzw, t0.xyzw
        ftoi r13.x, r1.y
        ftoi r1.x, r1.z
        mov r13.yzw, l(0,0,0,0)
        ld r13.xyzw, r13.xyzw, t0.xyzw
        mul r14.xyzw, r13.xyzw, v0.yyyy
        mad r14.xyzw, v0.xxxx, r5.xyzw, r14.xyzw
        mov r1.yzw, l(0,0,0,0)
        ld r1.xyzw, r1.xyzw, t0.xyzw
        mad r14.xyzw, v0.zzzz, r1.xyzw, r14.xyzw
        add r11.xyzw, r11.xyzw, r14.xyzw
        mad o0.xyzw, v1.wwww, r11.xyzw, r3.xyzw
        mul r3.xyz, r2.xyzx, v3.yyyy
        mul r2.xyz, r2.xyzx, v5.yyyy
        mad r2.xyz, v5.xxxx, r8.xyzx, r2.xyzx
        mad r3.xyz, v3.xxxx, r8.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r9.xyzx, r3.xyzx
        mad r2.xyz, v5.zzzz, r9.xyzx, r2.xyzx
        mul r2.xyz, r2.xyzx, v1.yyyy
        mul r3.xyz, r3.xyzx, v1.yyyy
        mul r8.xyz, r0.xyzx, v3.yyyy
        mul r0.xyz, r0.xyzx, v5.yyyy
        mad r0.xyz, v5.xxxx, r4.xyzx, r0.xyzx
        mad r4.xyz, v3.xxxx, r4.xyzx, r8.xyzx
        mad r4.xyz, v3.zzzz, r6.xyzx, r4.xyzx
        mad r0.xyz, v5.zzzz, r6.xyzx, r0.xyzx
        mad r0.xyz, v1.xxxx, r0.xyzx, r2.xyzx
        mad r2.xyz, v1.xxxx, r4.xyzx, r3.xyzx
        mul r3.xyz, r7.xyzx, v3.yyyy
        mul r4.xyz, r7.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r12.xyzx, r4.xyzx
        mad r3.xyz, v3.xxxx, r12.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r10.xyzx, r3.xyzx
        mad r4.xyz, v5.zzzz, r10.xyzx, r4.xyzx
        mad r0.xyz, v1.zzzz, r4.xyzx, r0.xyzx
        mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
        mul r3.xyz, r13.xyzx, v3.yyyy
        mul r4.xyz, r13.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r5.xyzx, r4.xyzx
        mad r3.xyz, v3.xxxx, r5.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r1.xyzx, r3.xyzx
        mad r1.xyz, v5.zzzz, r1.xyzx, r4.xyzx
        mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
        mad o1.xyz, v1.wwww, r3.xyzx, r2.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.w, r0.xyzx, r0.xyzx
        rsq r0.w, r0.w
        mul o3.xyz, r0.wwww, r0.xyzx
        ret 
        // Approximately 113 instruction slots used
            
    }
/* Stream out decl: "POSITION.xyzw; NORMAL.xyz; TEXCOORD.xy; TANGENT.xyz" */;
VertexShader vsBuffer = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // g_BufferBoneWorld                 texture  float4         buf             t0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_resource_buffer (float,float,float,float) t0
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 15
        ishl r0.xyzw, v2.xyzw, l(2)
        iadd r1.xyzw, r0.xxxy, l(1, 2, 3, 1)
        ld r2.xyzw, r1.xxxx, t0.xyzw
        mul r3.xyzw, r2.xyzw, v0.yyyy
        ld r4.xyzw, r0.xxxx, t0.xyzw
        mad r3.xyzw, v0.xxxx, r4.xyzw, r3.xyzw
        ld r5.xyzw, r1.yyyy, t0.xyzw
        mad r3.xyzw, v0.zzzz, r5.xyzw, r3.xyzw
        ld r6.xyzw, r1.zzzz, t0.xyzw
        ld r1.xyzw, r1.wwww, t0.xyzw
        add r3.xyzw, r3.xyzw, r6.xyzw
        mul r6.xyzw, r1.xyzw, v0.yyyy
        ld r7.xyzw, r0.yyyy, t0.xyzw
        mad r6.xyzw, v0.xxxx, r7.xyzw, r6.xyzw
        iadd r8.xyzw, r0.yyzz, l(2, 3, 1, 2)
        ld r9.xyzw, r8.xxxx, t0.xyzw
        mad r6.xyzw, v0.zzzz, r9.xyzw, r6.xyzw
        ld r10.xyzw, r8.yyyy, t0.xyzw
        add r6.xyzw, r6.xyzw, r10.xyzw
        mul r6.xyzw, r6.xyzw, v1.yyyy
        mad r3.xyzw, v1.xxxx, r3.xyzw, r6.xyzw
        ld r6.xyzw, r8.zzzz, t0.xyzw
        ld r8.xyzw, r8.wwww, t0.xyzw
        mul r10.xyzw, r6.xyzw, v0.yyyy
        ld r11.xyzw, r0.zzzz, t0.xyzw
        mad r10.xyzw, v0.xxxx, r11.xyzw, r10.xyzw
        mad r10.xyzw, v0.zzzz, r8.xyzw, r10.xyzw
        iadd r12.xyzw, r0.zwww, l(3, 1, 2, 3)
        ld r0.xyzw, r0.wwww, t0.xyzw
        ld r13.xyzw, r12.xxxx, t0.xyzw
        add r10.xyzw, r10.xyzw, r13.xyzw
        mad r3.xyzw, v1.zzzz, r10.xyzw, r3.xyzw
        ld r10.xyzw, r12.wwww, t0.xyzw
        ld r13.xyzw, r12.yyyy, t0.xyzw
        ld r12.xyzw, r12.zzzz, t0.xyzw
        mul r14.xyzw, r13.xyzw, v0.yyyy
        mad r14.xyzw, v0.xxxx, r0.xyzw, r14.xyzw
        mad r14.xyzw, v0.zzzz, r12.xyzw, r14.xyzw
        add r10.xyzw, r10.xyzw, r14.xyzw
        mad o0.xyzw, v1.wwww, r10.xyzw, r3.xyzw
        mul r3.xyz, r1.xyzx, v3.yyyy
        mul r1.xyz, r1.xyzx, v5.yyyy
        mad r1.xyz, v5.xxxx, r7.xyzx, r1.xyzx
        mad r3.xyz, v3.xxxx, r7.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r9.xyzx, r3.xyzx
        mad r1.xyz, v5.zzzz, r9.xyzx, r1.xyzx
        mul r1.xyz, r1.xyzx, v1.yyyy
        mul r3.xyz, r3.xyzx, v1.yyyy
        mul r7.xyz, r2.xyzx, v3.yyyy
        mul r2.xyz, r2.xyzx, v5.yyyy
        mad r2.xyz, v5.xxxx, r4.xyzx, r2.xyzx
        mad r4.xyz, v3.xxxx, r4.xyzx, r7.xyzx
        mad r4.xyz, v3.zzzz, r5.xyzx, r4.xyzx
        mad r2.xyz, v5.zzzz, r5.xyzx, r2.xyzx
        mad r1.xyz, v1.xxxx, r2.xyzx, r1.xyzx
        mad r2.xyz, v1.xxxx, r4.xyzx, r3.xyzx
        mul r3.xyz, r6.xyzx, v3.yyyy
        mul r4.xyz, r6.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r11.xyzx, r4.xyzx
        mad r3.xyz, v3.xxxx, r11.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r8.xyzx, r3.xyzx
        mad r4.xyz, v5.zzzz, r8.xyzx, r4.xyzx
        mad r1.xyz, v1.zzzz, r4.xyzx, r1.xyzx
        mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
        mul r3.xyz, r13.xyzx, v3.yyyy
        mul r4.xyz, r13.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r0.xyzx, r4.xyzx
        mad r0.xyz, v3.xxxx, r0.xyzx, r3.xyzx
        mad r0.xyz, v3.zzzz, r12.xyzx, r0.xyzx
        mad r3.xyz, v5.zzzz, r12.xyzx, r4.xyzx
        mad r1.xyz, v1.wwww, r3.xyzx, r1.xyzx
        mad o1.xyz, v1.wwww, r0.xyzx, r2.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.x, r1.xyzx, r1.xyzx
        rsq r0.x, r0.x
        mul o3.xyz, r0.xxxx, r1.xyzx
        ret 
        // Approximately 77 instruction slots used
            
    };
GeometryShader vsBufferSO = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 10.1
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim      HLSL Bind  Count
        // ------------------------------ ---------- ------- ----------- -------------- ------
        // g_BufferBoneWorld                 texture  float4         buf             t0      1 
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyz         0     NONE   float   xyz 
        // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
        // BONES                    0   xyzw        2     NONE    uint   xyzw
        // NORMAL                   0   xyz         3     NONE   float   xyz 
        // TEXCOORD                 0   xy          4     NONE   float   xy  
        // TANGENT                  0   xyz         5     NONE   float   xyz 
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue  Format   Used
        // -------------------- ----- ------ -------- -------- ------- ------
        // POSITION                 0   xyzw        0     NONE   float   xyzw
        // NORMAL                   0   xyz         1     NONE   float   xyz 
        // TEXCOORD                 0   xy          2     NONE   float   xy  
        // TANGENT                  0   xyz         3     NONE   float   xyz 
        //
        vs_4_0
        dcl_resource_buffer (float,float,float,float) t0
        dcl_input v0.xyz
        dcl_input v1.xyzw
        dcl_input v2.xyzw
        dcl_input v3.xyz
        dcl_input v4.xy
        dcl_input v5.xyz
        dcl_output o0.xyzw
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o3.xyz
        dcl_temps 15
        ishl r0.xyzw, v2.xyzw, l(2)
        iadd r1.xyzw, r0.xxxy, l(1, 2, 3, 1)
        ld r2.xyzw, r1.xxxx, t0.xyzw
        mul r3.xyzw, r2.xyzw, v0.yyyy
        ld r4.xyzw, r0.xxxx, t0.xyzw
        mad r3.xyzw, v0.xxxx, r4.xyzw, r3.xyzw
        ld r5.xyzw, r1.yyyy, t0.xyzw
        mad r3.xyzw, v0.zzzz, r5.xyzw, r3.xyzw
        ld r6.xyzw, r1.zzzz, t0.xyzw
        ld r1.xyzw, r1.wwww, t0.xyzw
        add r3.xyzw, r3.xyzw, r6.xyzw
        mul r6.xyzw, r1.xyzw, v0.yyyy
        ld r7.xyzw, r0.yyyy, t0.xyzw
        mad r6.xyzw, v0.xxxx, r7.xyzw, r6.xyzw
        iadd r8.xyzw, r0.yyzz, l(2, 3, 1, 2)
        ld r9.xyzw, r8.xxxx, t0.xyzw
        mad r6.xyzw, v0.zzzz, r9.xyzw, r6.xyzw
        ld r10.xyzw, r8.yyyy, t0.xyzw
        add r6.xyzw, r6.xyzw, r10.xyzw
        mul r6.xyzw, r6.xyzw, v1.yyyy
        mad r3.xyzw, v1.xxxx, r3.xyzw, r6.xyzw
        ld r6.xyzw, r8.zzzz, t0.xyzw
        ld r8.xyzw, r8.wwww, t0.xyzw
        mul r10.xyzw, r6.xyzw, v0.yyyy
        ld r11.xyzw, r0.zzzz, t0.xyzw
        mad r10.xyzw, v0.xxxx, r11.xyzw, r10.xyzw
        mad r10.xyzw, v0.zzzz, r8.xyzw, r10.xyzw
        iadd r12.xyzw, r0.zwww, l(3, 1, 2, 3)
        ld r0.xyzw, r0.wwww, t0.xyzw
        ld r13.xyzw, r12.xxxx, t0.xyzw
        add r10.xyzw, r10.xyzw, r13.xyzw
        mad r3.xyzw, v1.zzzz, r10.xyzw, r3.xyzw
        ld r10.xyzw, r12.wwww, t0.xyzw
        ld r13.xyzw, r12.yyyy, t0.xyzw
        ld r12.xyzw, r12.zzzz, t0.xyzw
        mul r14.xyzw, r13.xyzw, v0.yyyy
        mad r14.xyzw, v0.xxxx, r0.xyzw, r14.xyzw
        mad r14.xyzw, v0.zzzz, r12.xyzw, r14.xyzw
        add r10.xyzw, r10.xyzw, r14.xyzw
        mad o0.xyzw, v1.wwww, r10.xyzw, r3.xyzw
        mul r3.xyz, r1.xyzx, v3.yyyy
        mul r1.xyz, r1.xyzx, v5.yyyy
        mad r1.xyz, v5.xxxx, r7.xyzx, r1.xyzx
        mad r3.xyz, v3.xxxx, r7.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r9.xyzx, r3.xyzx
        mad r1.xyz, v5.zzzz, r9.xyzx, r1.xyzx
        mul r1.xyz, r1.xyzx, v1.yyyy
        mul r3.xyz, r3.xyzx, v1.yyyy
        mul r7.xyz, r2.xyzx, v3.yyyy
        mul r2.xyz, r2.xyzx, v5.yyyy
        mad r2.xyz, v5.xxxx, r4.xyzx, r2.xyzx
        mad r4.xyz, v3.xxxx, r4.xyzx, r7.xyzx
        mad r4.xyz, v3.zzzz, r5.xyzx, r4.xyzx
        mad r2.xyz, v5.zzzz, r5.xyzx, r2.xyzx
        mad r1.xyz, v1.xxxx, r2.xyzx, r1.xyzx
        mad r2.xyz, v1.xxxx, r4.xyzx, r3.xyzx
        mul r3.xyz, r6.xyzx, v3.yyyy
        mul r4.xyz, r6.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r11.xyzx, r4.xyzx
        mad r3.xyz, v3.xxxx, r11.xyzx, r3.xyzx
        mad r3.xyz, v3.zzzz, r8.xyzx, r3.xyzx
        mad r4.xyz, v5.zzzz, r8.xyzx, r4.xyzx
        mad r1.xyz, v1.zzzz, r4.xyzx, r1.xyzx
        mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
        mul r3.xyz, r13.xyzx, v3.yyyy
        mul r4.xyz, r13.xyzx, v5.yyyy
        mad r4.xyz, v5.xxxx, r0.xyzx, r4.xyzx
        mad r0.xyz, v3.xxxx, r0.xyzx, r3.xyzx
        mad r0.xyz, v3.zzzz, r12.xyzx, r0.xyzx
        mad r3.xyz, v5.zzzz, r12.xyzx, r4.xyzx
        mad r1.xyz, v1.wwww, r3.xyzx, r1.xyzx
        mad o1.xyz, v1.wwww, r0.xyzx, r2.xyzx
        mov o2.xy, v4.xyxx
        dp3 r0.x, r1.xyzx, r1.xyzx
        rsq r0.x, r0.x
        mul o3.xyz, r0.xxxx, r1.xyzx
        ret 
        // Approximately 77 instruction slots used
            
    }
/* Stream out decl: "POSITION.xyzw; NORMAL.xyz; TEXCOORD.xy; TANGENT.xyz" */;

//
// 9 technique(s)
//
technique10 RenderConstantBuffer
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64
            //
            // }
            //
            // cbuffer cbAnimMatrices
            // {
            //
            //   float4x4 g_mConstBoneWorld[255];   // Offset:    0 Size: 16320
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            // cbAnimMatrices                    cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
            // BONES                    0   xyzw        2     NONE    uint   xyzw
            // NORMAL                   0   xyz         3     NONE   float   xyz 
            // TEXCOORD                 0   xy          4     NONE   float   xy  
            // TANGENT                  0   xyz         5     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[7], immediateIndexed
            dcl_constantbuffer CB1[1020], dynamicIndexed
            dcl_input v0.xyz
            dcl_input v1.xyzw
            dcl_input v2.xyzw
            dcl_input v3.xyz
            dcl_input v4.xy
            dcl_input v5.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o4.xyz
            dcl_temps 4
            mov r0.xyz, v0.xyzx
            mov r0.w, l(1.000000)
            ishl r1.xyzw, v2.xyzw, l(2)
            dp4 r2.x, r0.xyzw, cb1[r1.y + 0].xyzw
            dp4 r2.y, r0.xyzw, cb1[r1.y + 1].xyzw
            dp4 r2.z, r0.xyzw, cb1[r1.y + 2].xyzw
            dp4 r2.w, r0.xyzw, cb1[r1.y + 3].xyzw
            mul r2.xyzw, r2.xyzw, v1.yyyy
            dp4 r3.x, r0.xyzw, cb1[r1.x + 0].xyzw
            dp4 r3.y, r0.xyzw, cb1[r1.x + 1].xyzw
            dp4 r3.z, r0.xyzw, cb1[r1.x + 2].xyzw
            dp4 r3.w, r0.xyzw, cb1[r1.x + 3].xyzw
            mad r2.xyzw, v1.xxxx, r3.xyzw, r2.xyzw
            dp4 r3.x, r0.xyzw, cb1[r1.z + 0].xyzw
            dp4 r3.y, r0.xyzw, cb1[r1.z + 1].xyzw
            dp4 r3.z, r0.xyzw, cb1[r1.z + 2].xyzw
            dp4 r3.w, r0.xyzw, cb1[r1.z + 3].xyzw
            mad r2.xyzw, v1.zzzz, r3.xyzw, r2.xyzw
            dp4 r3.x, r0.xyzw, cb1[r1.w + 0].xyzw
            dp4 r3.y, r0.xyzw, cb1[r1.w + 1].xyzw
            dp4 r3.z, r0.xyzw, cb1[r1.w + 2].xyzw
            dp4 r3.w, r0.xyzw, cb1[r1.w + 3].xyzw
            mad r0.xyzw, v1.wwww, r3.xyzw, r2.xyzw
            dp4 o0.x, r0.xyzw, cb0[0].xyzw
            dp4 o0.y, r0.xyzw, cb0[1].xyzw
            dp4 o0.z, r0.xyzw, cb0[2].xyzw
            dp4 o0.w, r0.xyzw, cb0[3].xyzw
            dp4 o1.x, r0.xyzw, cb0[4].xyzw
            dp4 o1.y, r0.xyzw, cb0[5].xyzw
            dp4 o1.z, r0.xyzw, cb0[6].xyzw
            dp3 r0.x, v3.xyzx, cb1[r1.y + 0].xyzx
            dp3 r0.y, v3.xyzx, cb1[r1.y + 1].xyzx
            dp3 r0.z, v3.xyzx, cb1[r1.y + 2].xyzx
            mul r0.xyz, r0.xyzx, v1.yyyy
            dp3 r2.x, v3.xyzx, cb1[r1.x + 0].xyzx
            dp3 r2.y, v3.xyzx, cb1[r1.x + 1].xyzx
            dp3 r2.z, v3.xyzx, cb1[r1.x + 2].xyzx
            mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
            dp3 r2.x, v3.xyzx, cb1[r1.z + 0].xyzx
            dp3 r2.y, v3.xyzx, cb1[r1.z + 1].xyzx
            dp3 r2.z, v3.xyzx, cb1[r1.z + 2].xyzx
            mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
            dp3 r2.x, v3.xyzx, cb1[r1.w + 0].xyzx
            dp3 r2.y, v3.xyzx, cb1[r1.w + 1].xyzx
            dp3 r2.z, v3.xyzx, cb1[r1.w + 2].xyzx
            mad r0.xyz, v1.wwww, r2.xyzx, r0.xyzx
            dp3 r2.x, r0.xyzx, cb0[4].xyzx
            dp3 r2.y, r0.xyzx, cb0[5].xyzx
            dp3 r2.z, r0.xyzx, cb0[6].xyzx
            dp3 r0.x, r2.xyzx, r2.xyzx
            rsq r0.x, r0.x
            mul o2.xyz, r0.xxxx, r2.xyzx
            mov o3.xy, v4.xyxx
            dp3 r0.x, v5.xyzx, cb1[r1.y + 0].xyzx
            dp3 r0.y, v5.xyzx, cb1[r1.y + 1].xyzx
            dp3 r0.z, v5.xyzx, cb1[r1.y + 2].xyzx
            mul r0.xyz, r0.xyzx, v1.yyyy
            dp3 r2.x, v5.xyzx, cb1[r1.x + 0].xyzx
            dp3 r2.y, v5.xyzx, cb1[r1.x + 1].xyzx
            dp3 r2.z, v5.xyzx, cb1[r1.x + 2].xyzx
            mad r0.xyz, v1.xxxx, r2.xyzx, r0.xyzx
            dp3 r2.x, v5.xyzx, cb1[r1.z + 0].xyzx
            dp3 r2.y, v5.xyzx, cb1[r1.z + 1].xyzx
            dp3 r2.z, v5.xyzx, cb1[r1.z + 2].xyzx
            mad r0.xyz, v1.zzzz, r2.xyzx, r0.xyzx
            dp3 r1.x, v5.xyzx, cb1[r1.w + 0].xyzx
            dp3 r1.y, v5.xyzx, cb1[r1.w + 1].xyzx
            dp3 r1.z, v5.xyzx, cb1[r1.w + 2].xyzx
            mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
            dp3 r1.x, r0.xyzx, cb0[4].xyzx
            dp3 r1.y, r0.xyzx, cb0[5].xyzx
            dp3 r1.z, r0.xyzx, cb0[6].xyzx
            dp3 r0.x, r1.xyzx, r1.xyzx
            rsq r0.x, r0.x
            mul o4.xyz, r0.xxxx, r1.xyzx
            ret 
            // Approximately 76 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbUserChange
            // {
            //
            //   float3 g_vLightPos;                // Offset:    0 Size:    12
            //   float3 g_vEyePt;                   // Offset:   16 Size:    12
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_directional;              // Offset:    0 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //   float4 g_ambient;                  // Offset:   16 Size:    16
            //      = 0x3dcccccd 0x3dcccccd 0x3dcccccd 0x00000000 
            //   float4 g_objectspeccolor;          // Offset:   32 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cbUserChange                      cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_constantbuffer CB1[3], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xy
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v2.zxyz, v4.yzxy
            mad r0.xyz, v2.yzxy, v4.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v3.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r2.xyz, r1.yyyy, v4.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v2.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v1.xyzx, cb0[0].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            add r2.xyz, -v1.xyzx, cb0[1].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r2.xyzx, r0.wwww, r1.xyzx
            dp3_sat r0.w, r1.xyzx, r0.xyzx
            mad r1.xyzw, r0.wwww, cb1[0].xyzw, cb1[1].xyzw
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, l(64.000000)
            exp r0.x, r0.x
            mul r0.xyzw, r0.xxxx, cb1[2].xyzw
            sample r2.xyzw, v3.xyxx, t0.xyzw, s0
            mul r0.xyzw, r0.xyzw, r2.wwww
            mad o0.xyzw, r1.xyzw, r2.xyzw, r0.xyzw
            ret 
            // Approximately 35 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 RenderTextureBuffer
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64
            //
            // }
            //
            // tbuffer tbAnimMatrices
            // {
            //
            //   float4x4 g_mTexBoneWorld[255];     // Offset:    0 Size: 16320
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // tbAnimMatrices                    tbuffer      NA          NA             t0      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
            // BONES                    0   xyzw        2     NONE    uint   xyzw
            // NORMAL                   0   xyz         3     NONE   float   xyz 
            // TEXCOORD                 0   xy          4     NONE   float   xy  
            // TANGENT                  0   xyz         5     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[7], immediateIndexed
            dcl_resource_buffer (mixed,mixed,mixed,mixed) t0
            dcl_input v0.xyz
            dcl_input v1.xyzw
            dcl_input v2.xyzw
            dcl_input v3.xyz
            dcl_input v4.xy
            dcl_input v5.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o4.xyz
            dcl_temps 15
            ishl r0.xyzw, v2.xyzw, l(2)
            iadd r1.xyzw, r0.xxxy, l(3, 2, 1, 3)
            ld r2.xyzw, r1.wwww, t0.xyzw
            mov r3.xyz, v0.xyzx
            mov r3.w, l(1.000000)
            dp4 r2.w, r3.xyzw, r2.xyzw
            iadd r4.xyzw, r0.yyzz, l(2, 1, 3, 2)
            ld r5.xyzw, r4.yyyy, t0.xyzw
            dp4 r2.y, r3.xyzw, r5.xyzw
            ld r6.xyzw, r4.xxxx, t0.xyzw
            dp4 r2.z, r3.xyzw, r6.xyzw
            ld r7.xyzw, r0.yyyy, t0.xyzw
            dp4 r2.x, r3.xyzw, r7.xyzw
            mul r2.xyzw, r2.xyzw, v1.yyyy
            ld r8.xyzw, r1.xxxx, t0.xyzw
            dp4 r8.w, r3.xyzw, r8.xyzw
            ld r9.xyzw, r1.zzzz, t0.xyzw
            ld r1.xyzw, r1.yyyy, t0.xyzw
            dp4 r8.y, r3.xyzw, r9.xyzw
            dp4 r8.z, r3.xyzw, r1.xyzw
            ld r10.xyzw, r0.xxxx, t0.xyzw
            dp4 r8.x, r3.xyzw, r10.xyzw
            mad r2.xyzw, v1.xxxx, r8.xyzw, r2.xyzw
            ld r8.xyzw, r4.zzzz, t0.xyzw
            ld r4.xyzw, r4.wwww, t0.xyzw
            dp4 r8.w, r3.xyzw, r8.xyzw
            iadd r11.xyzw, r0.zwww, l(1, 3, 2, 1)
            ld r12.xyzw, r11.xxxx, t0.xyzw
            dp4 r8.y, r3.xyzw, r12.xyzw
            dp4 r8.z, r3.xyzw, r4.xyzw
            ld r13.xyzw, r0.zzzz, t0.xyzw
            ld r0.xyzw, r0.wwww, t0.xyzw
            dp4 r8.x, r3.xyzw, r13.xyzw
            mad r2.xyzw, v1.zzzz, r8.xyzw, r2.xyzw
            ld r8.xyzw, r11.yyyy, t0.xyzw
            dp4 r8.w, r3.xyzw, r8.xyzw
            ld r14.xyzw, r11.wwww, t0.xyzw
            ld r11.xyzw, r11.zzzz, t0.xyzw
            dp4 r8.y, r3.xyzw, r14.xyzw
            dp4 r8.z, r3.xyzw, r11.xyzw
            dp4 r8.x, r3.xyzw, r0.xyzw
            mad r2.xyzw, v1.wwww, r8.xyzw, r2.xyzw
            dp4 o0.x, r2.xyzw, cb0[0].xyzw
            dp4 o0.y, r2.xyzw, cb0[1].xyzw
            dp4 o0.z, r2.xyzw, cb0[2].xyzw
            dp4 o0.w, r2.xyzw, cb0[3].xyzw
            dp4 o1.x, r2.xyzw, cb0[4].xyzw
            dp4 o1.y, r2.xyzw, cb0[5].xyzw
            dp4 o1.z, r2.xyzw, cb0[6].xyzw
            dp3 r2.y, v3.xyzx, r5.xyzx
            dp3 r3.y, v5.xyzx, r5.xyzx
            dp3 r2.z, v3.xyzx, r6.xyzx
            dp3 r3.z, v5.xyzx, r6.xyzx
            dp3 r2.x, v3.xyzx, r7.xyzx
            dp3 r3.x, v5.xyzx, r7.xyzx
            mul r3.xyz, r3.xyzx, v1.yyyy
            mul r2.xyz, r2.xyzx, v1.yyyy
            dp3 r5.y, v3.xyzx, r9.xyzx
            dp3 r6.y, v5.xyzx, r9.xyzx
            dp3 r5.z, v3.xyzx, r1.xyzx
            dp3 r6.z, v5.xyzx, r1.xyzx
            dp3 r5.x, v3.xyzx, r10.xyzx
            dp3 r6.x, v5.xyzx, r10.xyzx
            mad r1.xyz, v1.xxxx, r6.xyzx, r3.xyzx
            mad r2.xyz, v1.xxxx, r5.xyzx, r2.xyzx
            dp3 r3.y, v3.xyzx, r12.xyzx
            dp3 r5.y, v5.xyzx, r12.xyzx
            dp3 r3.z, v3.xyzx, r4.xyzx
            dp3 r5.z, v5.xyzx, r4.xyzx
            dp3 r3.x, v3.xyzx, r13.xyzx
            dp3 r5.x, v5.xyzx, r13.xyzx
            mad r1.xyz, v1.zzzz, r5.xyzx, r1.xyzx
            mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
            dp3 r3.y, v3.xyzx, r14.xyzx
            dp3 r4.y, v5.xyzx, r14.xyzx
            dp3 r3.z, v3.xyzx, r11.xyzx
            dp3 r4.z, v5.xyzx, r11.xyzx
            dp3 r3.x, v3.xyzx, r0.xyzx
            dp3 r4.x, v5.xyzx, r0.xyzx
            mad r0.xyz, v1.wwww, r4.xyzx, r1.xyzx
            mad r1.xyz, v1.wwww, r3.xyzx, r2.xyzx
            dp3 r2.x, r1.xyzx, cb0[4].xyzx
            dp3 r2.y, r1.xyzx, cb0[5].xyzx
            dp3 r2.z, r1.xyzx, cb0[6].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r2.xyzx
            mov o3.xy, v4.xyxx
            dp3 r1.x, r0.xyzx, cb0[4].xyzx
            dp3 r1.y, r0.xyzx, cb0[5].xyzx
            dp3 r1.z, r0.xyzx, cb0[6].xyzx
            dp3 r0.x, r1.xyzx, r1.xyzx
            rsq r0.x, r0.x
            mul o4.xyz, r0.xxxx, r1.xyzx
            ret 
            // Approximately 95 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbUserChange
            // {
            //
            //   float3 g_vLightPos;                // Offset:    0 Size:    12
            //   float3 g_vEyePt;                   // Offset:   16 Size:    12
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_directional;              // Offset:    0 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //   float4 g_ambient;                  // Offset:   16 Size:    16
            //      = 0x3dcccccd 0x3dcccccd 0x3dcccccd 0x00000000 
            //   float4 g_objectspeccolor;          // Offset:   32 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cbUserChange                      cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_constantbuffer CB1[3], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xy
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v2.zxyz, v4.yzxy
            mad r0.xyz, v2.yzxy, v4.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v3.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r2.xyz, r1.yyyy, v4.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v2.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v1.xyzx, cb0[0].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            add r2.xyz, -v1.xyzx, cb0[1].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r2.xyzx, r0.wwww, r1.xyzx
            dp3_sat r0.w, r1.xyzx, r0.xyzx
            mad r1.xyzw, r0.wwww, cb1[0].xyzw, cb1[1].xyzw
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, l(64.000000)
            exp r0.x, r0.x
            mul r0.xyzw, r0.xxxx, cb1[2].xyzw
            sample r2.xyzw, v3.xyxx, t0.xyzw, s0
            mul r0.xyzw, r0.xyzw, r2.wwww
            mad o0.xyzw, r1.xyzw, r2.xyzw, r0.xyzw
            ret 
            // Approximately 35 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 RenderTexture
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_txTexBoneWorld                  texture  float4          1d             t0      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
            // BONES                    0   xyzw        2     NONE    uint   xyzw
            // NORMAL                   0   xyz         3     NONE   float   xyz 
            // TEXCOORD                 0   xy          4     NONE   float   xy  
            // TANGENT                  0   xyz         5     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[7], immediateIndexed
            dcl_resource_texture1d (float,float,float,float) t0
            dcl_input v0.xyz
            dcl_input v1.xyzw
            dcl_input v2.xyzw
            dcl_input v3.xyz
            dcl_input v4.xy
            dcl_input v5.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o4.xyz
            dcl_temps 15
            mov r0.yzw, l(0,0,0,0)
            ishl r1.xyzw, v2.xyzw, l(2)
            iadd r2.xyzw, r1.xxxy, l(1, 2, 3, 1)
            utof r2.xyzw, r2.xyzw
            ftoi r0.x, r2.x
            ld r0.xyzw, r0.xyzw, t0.xyzw
            mul r3.xyzw, r0.xyzw, v0.yyyy
            mov r4.yzw, l(0,0,0,0)
            utof r5.xyzw, r1.xyzw
            ftoi r4.x, r5.x
            ld r4.xyzw, r4.xyzw, t0.xyzw
            mad r3.xyzw, v0.xxxx, r4.xyzw, r3.xyzw
            mov r6.yzw, l(0,0,0,0)
            ftoi r6.x, r2.y
            ld r6.xyzw, r6.xyzw, t0.xyzw
            mad r3.xyzw, v0.zzzz, r6.xyzw, r3.xyzw
            mov r7.yzw, l(0,0,0,0)
            ftoi r7.x, r2.z
            ftoi r2.x, r2.w
            ld r7.xyzw, r7.xyzw, t0.xyzw
            add r3.xyzw, r3.xyzw, r7.xyzw
            mov r2.yzw, l(0,0,0,0)
            ld r2.xyzw, r2.xyzw, t0.xyzw
            mul r7.xyzw, r2.xyzw, v0.yyyy
            mov r8.yzw, l(0,0,0,0)
            ftoi r8.x, r5.y
            ld r8.xyzw, r8.xyzw, t0.xyzw
            mad r7.xyzw, v0.xxxx, r8.xyzw, r7.xyzw
            mov r9.yzw, l(0,0,0,0)
            iadd r10.xyzw, r1.yyzz, l(2, 3, 1, 2)
            iadd r1.xyzw, r1.zwww, l(3, 1, 2, 3)
            utof r1.xyzw, r1.xyzw
            utof r10.xyzw, r10.xyzw
            ftoi r9.x, r10.x
            ld r9.xyzw, r9.xyzw, t0.xyzw
            mad r7.xyzw, v0.zzzz, r9.xyzw, r7.xyzw
            ftoi r11.x, r10.y
            mov r11.yzw, l(0,0,0,0)
            ld r11.xyzw, r11.xyzw, t0.xyzw
            add r7.xyzw, r7.xyzw, r11.xyzw
            mul r7.xyzw, r7.xyzw, v1.yyyy
            mad r3.xyzw, v1.xxxx, r3.xyzw, r7.xyzw
            ftoi r7.x, r10.z
            ftoi r10.x, r10.w
            mov r7.yzw, l(0,0,0,0)
            ld r7.xyzw, r7.xyzw, t0.xyzw
            mul r11.xyzw, r7.xyzw, v0.yyyy
            ftoi r12.x, r5.z
            ftoi r5.x, r5.w
            mov r12.yzw, l(0,0,0,0)
            ld r12.xyzw, r12.xyzw, t0.xyzw
            mad r11.xyzw, v0.xxxx, r12.xyzw, r11.xyzw
            mov r10.yzw, l(0,0,0,0)
            ld r10.xyzw, r10.xyzw, t0.xyzw
            mad r11.xyzw, v0.zzzz, r10.xyzw, r11.xyzw
            mov r13.yzw, l(0,0,0,0)
            ftoi r13.x, r1.x
            ld r13.xyzw, r13.xyzw, t0.xyzw
            add r11.xyzw, r11.xyzw, r13.xyzw
            mad r3.xyzw, v1.zzzz, r11.xyzw, r3.xyzw
            ftoi r11.x, r1.w
            mov r11.yzw, l(0,0,0,0)
            ld r11.xyzw, r11.xyzw, t0.xyzw
            mov r5.yzw, l(0,0,0,0)
            ld r5.xyzw, r5.xyzw, t0.xyzw
            ftoi r13.x, r1.y
            ftoi r1.x, r1.z
            mov r13.yzw, l(0,0,0,0)
            ld r13.xyzw, r13.xyzw, t0.xyzw
            mul r14.xyzw, r13.xyzw, v0.yyyy
            mad r14.xyzw, v0.xxxx, r5.xyzw, r14.xyzw
            mov r1.yzw, l(0,0,0,0)
            ld r1.xyzw, r1.xyzw, t0.xyzw
            mad r14.xyzw, v0.zzzz, r1.xyzw, r14.xyzw
            add r11.xyzw, r11.xyzw, r14.xyzw
            mad r3.xyzw, v1.wwww, r11.xyzw, r3.xyzw
            dp4 o0.x, r3.xyzw, cb0[0].xyzw
            dp4 o0.y, r3.xyzw, cb0[1].xyzw
            dp4 o0.z, r3.xyzw, cb0[2].xyzw
            dp4 o0.w, r3.xyzw, cb0[3].xyzw
            dp4 o1.x, r3.xyzw, cb0[4].xyzw
            dp4 o1.y, r3.xyzw, cb0[5].xyzw
            dp4 o1.z, r3.xyzw, cb0[6].xyzw
            mul r3.xyz, r2.xyzx, v3.yyyy
            mul r2.xyz, r2.xyzx, v5.yyyy
            mad r2.xyz, v5.xxxx, r8.xyzx, r2.xyzx
            mad r3.xyz, v3.xxxx, r8.xyzx, r3.xyzx
            mad r3.xyz, v3.zzzz, r9.xyzx, r3.xyzx
            mad r2.xyz, v5.zzzz, r9.xyzx, r2.xyzx
            mul r2.xyz, r2.xyzx, v1.yyyy
            mul r3.xyz, r3.xyzx, v1.yyyy
            mul r8.xyz, r0.xyzx, v3.yyyy
            mul r0.xyz, r0.xyzx, v5.yyyy
            mad r0.xyz, v5.xxxx, r4.xyzx, r0.xyzx
            mad r4.xyz, v3.xxxx, r4.xyzx, r8.xyzx
            mad r4.xyz, v3.zzzz, r6.xyzx, r4.xyzx
            mad r0.xyz, v5.zzzz, r6.xyzx, r0.xyzx
            mad r0.xyz, v1.xxxx, r0.xyzx, r2.xyzx
            mad r2.xyz, v1.xxxx, r4.xyzx, r3.xyzx
            mul r3.xyz, r7.xyzx, v3.yyyy
            mul r4.xyz, r7.xyzx, v5.yyyy
            mad r4.xyz, v5.xxxx, r12.xyzx, r4.xyzx
            mad r3.xyz, v3.xxxx, r12.xyzx, r3.xyzx
            mad r3.xyz, v3.zzzz, r10.xyzx, r3.xyzx
            mad r4.xyz, v5.zzzz, r10.xyzx, r4.xyzx
            mad r0.xyz, v1.zzzz, r4.xyzx, r0.xyzx
            mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
            mul r3.xyz, r13.xyzx, v3.yyyy
            mul r4.xyz, r13.xyzx, v5.yyyy
            mad r4.xyz, v5.xxxx, r5.xyzx, r4.xyzx
            mad r3.xyz, v3.xxxx, r5.xyzx, r3.xyzx
            mad r3.xyz, v3.zzzz, r1.xyzx, r3.xyzx
            mad r1.xyz, v5.zzzz, r1.xyzx, r4.xyzx
            mad r0.xyz, v1.wwww, r1.xyzx, r0.xyzx
            mad r1.xyz, v1.wwww, r3.xyzx, r2.xyzx
            dp3 r2.x, r1.xyzx, cb0[4].xyzx
            dp3 r2.y, r1.xyzx, cb0[5].xyzx
            dp3 r2.z, r1.xyzx, cb0[6].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r2.xyzx
            mov o3.xy, v4.xyxx
            dp3 r1.x, r0.xyzx, cb0[4].xyzx
            dp3 r1.y, r0.xyzx, cb0[5].xyzx
            dp3 r1.z, r0.xyzx, cb0[6].xyzx
            dp3 r0.x, r1.xyzx, r1.xyzx
            rsq r0.x, r0.x
            mul o4.xyz, r0.xxxx, r1.xyzx
            ret 
            // Approximately 129 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbUserChange
            // {
            //
            //   float3 g_vLightPos;                // Offset:    0 Size:    12
            //   float3 g_vEyePt;                   // Offset:   16 Size:    12
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_directional;              // Offset:    0 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //   float4 g_ambient;                  // Offset:   16 Size:    16
            //      = 0x3dcccccd 0x3dcccccd 0x3dcccccd 0x00000000 
            //   float4 g_objectspeccolor;          // Offset:   32 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cbUserChange                      cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_constantbuffer CB1[3], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xy
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v2.zxyz, v4.yzxy
            mad r0.xyz, v2.yzxy, v4.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v3.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r2.xyz, r1.yyyy, v4.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v2.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v1.xyzx, cb0[0].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            add r2.xyz, -v1.xyzx, cb0[1].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r2.xyzx, r0.wwww, r1.xyzx
            dp3_sat r0.w, r1.xyzx, r0.xyzx
            mad r1.xyzw, r0.wwww, cb1[0].xyzw, cb1[1].xyzw
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, l(64.000000)
            exp r0.x, r0.x
            mul r0.xyzw, r0.xxxx, cb1[2].xyzw
            sample r2.xyzw, v3.xyxx, t0.xyzw, s0
            mul r0.xyzw, r0.xyzw, r2.wwww
            mad o0.xyzw, r1.xyzw, r2.xyzw, r0.xyzw
            ret 
            // Approximately 35 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 RenderBuffer
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_BufferBoneWorld                 texture  float4         buf             t0      1 
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyz         0     NONE   float   xyz 
            // WEIGHTS                  0   xyzw        1     NONE   float   xyzw
            // BONES                    0   xyzw        2     NONE    uint   xyzw
            // NORMAL                   0   xyz         3     NONE   float   xyz 
            // TEXCOORD                 0   xy          4     NONE   float   xy  
            // TANGENT                  0   xyz         5     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[7], immediateIndexed
            dcl_resource_buffer (float,float,float,float) t0
            dcl_input v0.xyz
            dcl_input v1.xyzw
            dcl_input v2.xyzw
            dcl_input v3.xyz
            dcl_input v4.xy
            dcl_input v5.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o4.xyz
            dcl_temps 15
            ishl r0.xyzw, v2.xyzw, l(2)
            iadd r1.xyzw, r0.xxxy, l(1, 2, 3, 1)
            ld r2.xyzw, r1.xxxx, t0.xyzw
            mul r3.xyzw, r2.xyzw, v0.yyyy
            ld r4.xyzw, r0.xxxx, t0.xyzw
            mad r3.xyzw, v0.xxxx, r4.xyzw, r3.xyzw
            ld r5.xyzw, r1.yyyy, t0.xyzw
            mad r3.xyzw, v0.zzzz, r5.xyzw, r3.xyzw
            ld r6.xyzw, r1.zzzz, t0.xyzw
            ld r1.xyzw, r1.wwww, t0.xyzw
            add r3.xyzw, r3.xyzw, r6.xyzw
            mul r6.xyzw, r1.xyzw, v0.yyyy
            ld r7.xyzw, r0.yyyy, t0.xyzw
            mad r6.xyzw, v0.xxxx, r7.xyzw, r6.xyzw
            iadd r8.xyzw, r0.yyzz, l(2, 3, 1, 2)
            ld r9.xyzw, r8.xxxx, t0.xyzw
            mad r6.xyzw, v0.zzzz, r9.xyzw, r6.xyzw
            ld r10.xyzw, r8.yyyy, t0.xyzw
            add r6.xyzw, r6.xyzw, r10.xyzw
            mul r6.xyzw, r6.xyzw, v1.yyyy
            mad r3.xyzw, v1.xxxx, r3.xyzw, r6.xyzw
            ld r6.xyzw, r8.zzzz, t0.xyzw
            ld r8.xyzw, r8.wwww, t0.xyzw
            mul r10.xyzw, r6.xyzw, v0.yyyy
            ld r11.xyzw, r0.zzzz, t0.xyzw
            mad r10.xyzw, v0.xxxx, r11.xyzw, r10.xyzw
            mad r10.xyzw, v0.zzzz, r8.xyzw, r10.xyzw
            iadd r12.xyzw, r0.zwww, l(3, 1, 2, 3)
            ld r0.xyzw, r0.wwww, t0.xyzw
            ld r13.xyzw, r12.xxxx, t0.xyzw
            add r10.xyzw, r10.xyzw, r13.xyzw
            mad r3.xyzw, v1.zzzz, r10.xyzw, r3.xyzw
            ld r10.xyzw, r12.wwww, t0.xyzw
            ld r13.xyzw, r12.yyyy, t0.xyzw
            ld r12.xyzw, r12.zzzz, t0.xyzw
            mul r14.xyzw, r13.xyzw, v0.yyyy
            mad r14.xyzw, v0.xxxx, r0.xyzw, r14.xyzw
            mad r14.xyzw, v0.zzzz, r12.xyzw, r14.xyzw
            add r10.xyzw, r10.xyzw, r14.xyzw
            mad r3.xyzw, v1.wwww, r10.xyzw, r3.xyzw
            dp4 o0.x, r3.xyzw, cb0[0].xyzw
            dp4 o0.y, r3.xyzw, cb0[1].xyzw
            dp4 o0.z, r3.xyzw, cb0[2].xyzw
            dp4 o0.w, r3.xyzw, cb0[3].xyzw
            dp4 o1.x, r3.xyzw, cb0[4].xyzw
            dp4 o1.y, r3.xyzw, cb0[5].xyzw
            dp4 o1.z, r3.xyzw, cb0[6].xyzw
            mul r3.xyz, r1.xyzx, v3.yyyy
            mul r1.xyz, r1.xyzx, v5.yyyy
            mad r1.xyz, v5.xxxx, r7.xyzx, r1.xyzx
            mad r3.xyz, v3.xxxx, r7.xyzx, r3.xyzx
            mad r3.xyz, v3.zzzz, r9.xyzx, r3.xyzx
            mad r1.xyz, v5.zzzz, r9.xyzx, r1.xyzx
            mul r1.xyz, r1.xyzx, v1.yyyy
            mul r3.xyz, r3.xyzx, v1.yyyy
            mul r7.xyz, r2.xyzx, v3.yyyy
            mul r2.xyz, r2.xyzx, v5.yyyy
            mad r2.xyz, v5.xxxx, r4.xyzx, r2.xyzx
            mad r4.xyz, v3.xxxx, r4.xyzx, r7.xyzx
            mad r4.xyz, v3.zzzz, r5.xyzx, r4.xyzx
            mad r2.xyz, v5.zzzz, r5.xyzx, r2.xyzx
            mad r1.xyz, v1.xxxx, r2.xyzx, r1.xyzx
            mad r2.xyz, v1.xxxx, r4.xyzx, r3.xyzx
            mul r3.xyz, r6.xyzx, v3.yyyy
            mul r4.xyz, r6.xyzx, v5.yyyy
            mad r4.xyz, v5.xxxx, r11.xyzx, r4.xyzx
            mad r3.xyz, v3.xxxx, r11.xyzx, r3.xyzx
            mad r3.xyz, v3.zzzz, r8.xyzx, r3.xyzx
            mad r4.xyz, v5.zzzz, r8.xyzx, r4.xyzx
            mad r1.xyz, v1.zzzz, r4.xyzx, r1.xyzx
            mad r2.xyz, v1.zzzz, r3.xyzx, r2.xyzx
            mul r3.xyz, r13.xyzx, v3.yyyy
            mul r4.xyz, r13.xyzx, v5.yyyy
            mad r4.xyz, v5.xxxx, r0.xyzx, r4.xyzx
            mad r0.xyz, v3.xxxx, r0.xyzx, r3.xyzx
            mad r0.xyz, v3.zzzz, r12.xyzx, r0.xyzx
            mad r3.xyz, v5.zzzz, r12.xyzx, r4.xyzx
            mad r1.xyz, v1.wwww, r3.xyzx, r1.xyzx
            mad r0.xyz, v1.wwww, r0.xyzx, r2.xyzx
            dp3 r2.x, r0.xyzx, cb0[4].xyzx
            dp3 r2.y, r0.xyzx, cb0[5].xyzx
            dp3 r2.z, r0.xyzx, cb0[6].xyzx
            dp3 r0.x, r2.xyzx, r2.xyzx
            rsq r0.x, r0.x
            mul o2.xyz, r0.xxxx, r2.xyzx
            mov o3.xy, v4.xyxx
            dp3 r0.x, r1.xyzx, cb0[4].xyzx
            dp3 r0.y, r1.xyzx, cb0[5].xyzx
            dp3 r0.z, r1.xyzx, cb0[6].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o4.xyz, r0.wwww, r0.xyzx
            ret 
            // Approximately 93 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbUserChange
            // {
            //
            //   float3 g_vLightPos;                // Offset:    0 Size:    12
            //   float3 g_vEyePt;                   // Offset:   16 Size:    12
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_directional;              // Offset:    0 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //   float4 g_ambient;                  // Offset:   16 Size:    16
            //      = 0x3dcccccd 0x3dcccccd 0x3dcccccd 0x00000000 
            //   float4 g_objectspeccolor;          // Offset:   32 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cbUserChange                      cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_constantbuffer CB1[3], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xy
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v2.zxyz, v4.yzxy
            mad r0.xyz, v2.yzxy, v4.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v3.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r2.xyz, r1.yyyy, v4.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v2.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v1.xyzx, cb0[0].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            add r2.xyz, -v1.xyzx, cb0[1].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r2.xyzx, r0.wwww, r1.xyzx
            dp3_sat r0.w, r1.xyzx, r0.xyzx
            mad r1.xyzw, r0.wwww, cb1[0].xyzw, cb1[1].xyzw
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, l(64.000000)
            exp r0.x, r0.x
            mul r0.xyzw, r0.xxxx, cb1[2].xyzw
            sample r2.xyzw, v3.xyxx, t0.xyzw, s0
            mul r0.xyzw, r0.xyzw, r2.wwww
            mad o0.xyzw, r1.xyzw, r2.xyzw, r0.xyzw
            ret 
            // Approximately 35 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

technique10 RenderConstantBuffer_SO
{
    pass P0
    {
        VertexShader = vsConstantBuffer;
        GeometryShader = vsConstantBufferSO;
        PixelShader = NULL;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 RenderTextureBuffer_SO
{
    pass P0
    {
        VertexShader = vsTextureBuffer;
        GeometryShader = vsTextureBufferSO;
        PixelShader = NULL;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 RenderTexture_SO
{
    pass P0
    {
        VertexShader = vsTexture;
        GeometryShader = vsTextureSO;
        PixelShader = NULL;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 RenderBuffer_SO
{
    pass P0
    {
        VertexShader = vsBuffer;
        GeometryShader = vsBufferSO;
        PixelShader = NULL;
        DS_StencilRef = uint(0);
        DepthStencilState = DisableDepth;
    }

}

technique10 RenderPostTransformed
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cb0
            // {
            //
            //   float4x4 g_mWorldViewProj;         // Offset:    0 Size:    64
            //   float4x4 g_mWorld;                 // Offset:   64 Size:    64
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // cb0                               cbuffer      NA          NA            cb0      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // POSITION                 0   xyzw        0     NONE   float   xyzw
            // NORMAL                   0   xyz         1     NONE   float   xyz 
            // TEXCOORD                 0   xy          2     NONE   float   xy  
            // TANGENT                  0   xyz         3     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float   xyzw
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            vs_4_0
            dcl_constantbuffer CB0[7], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xyz
            dcl_input v2.xy
            dcl_input v3.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyz
            dcl_output o2.xyz
            dcl_output o3.xy
            dcl_output o4.xyz
            dcl_temps 1
            dp4 o0.x, v0.xyzw, cb0[0].xyzw
            dp4 o0.y, v0.xyzw, cb0[1].xyzw
            dp4 o0.z, v0.xyzw, cb0[2].xyzw
            dp4 o0.w, v0.xyzw, cb0[3].xyzw
            mov o1.xyz, v0.xyzx
            dp3 r0.x, v1.xyzx, cb0[4].xyzx
            dp3 r0.y, v1.xyzx, cb0[5].xyzx
            dp3 r0.z, v1.xyzx, cb0[6].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r0.xyzx
            mov o3.xy, v2.xyxx
            dp3 r0.x, v3.xyzx, cb0[4].xyzx
            dp3 r0.y, v3.xyzx, cb0[5].xyzx
            dp3 r0.z, v3.xyzx, cb0[6].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o4.xyz, r0.wwww, r0.xyzx
            ret 
            // Approximately 19 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer cbUserChange
            // {
            //
            //   float3 g_vLightPos;                // Offset:    0 Size:    12
            //   float3 g_vEyePt;                   // Offset:   16 Size:    12
            //
            // }
            //
            // cbuffer cbImmutable
            // {
            //
            //   float4 g_directional;              // Offset:    0 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //   float4 g_ambient;                  // Offset:   16 Size:    16
            //      = 0x3dcccccd 0x3dcccccd 0x3dcccccd 0x00000000 
            //   float4 g_objectspeccolor;          // Offset:   32 Size:    16
            //      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim      HLSL Bind  Count
            // ------------------------------ ---------- ------- ----------- -------------- ------
            // g_samLinear                       sampler      NA          NA             s0      1 
            // g_txDiffuse                       texture  float4          2d             t0      1 
            // g_txNormal                        texture  float4          2d             t1      1 
            // cbUserChange                      cbuffer      NA          NA            cb0      1 
            // cbImmutable                       cbuffer      NA          NA            cb1      1 
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Position              0   xyzw        0      POS   float       
            // POSWORLD                 0   xyz         1     NONE   float   xyz 
            // NORMAL                   0   xyz         2     NONE   float   xyz 
            // TEXCOORD                 0   xy          3     NONE   float   xy  
            // TANGENT                  0   xyz         4     NONE   float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue  Format   Used
            // -------------------- ----- ------ -------- -------- ------- ------
            // SV_Target                0   xyzw        0   TARGET   float   xyzw
            //
            ps_4_0
            dcl_constantbuffer CB0[2], immediateIndexed
            dcl_constantbuffer CB1[3], immediateIndexed
            dcl_sampler s0, mode_default
            dcl_resource_texture2d (float,float,float,float) t0
            dcl_resource_texture2d (float,float,float,float) t1
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xy
            dcl_input_ps linear v4.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            mul r0.xyz, v2.zxyz, v4.yzxy
            mad r0.xyz, v2.yzxy, v4.zxyz, -r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            sample r1.xyzw, v3.xyxx, t1.xyzw, s0
            mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
            mul r2.xyz, r1.yyyy, v4.xyzx
            mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
            mad r0.xyz, r1.zzzz, v2.xyzx, r0.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            add r1.xyz, -v1.xyzx, cb0[0].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            add r2.xyz, -v1.xyzx, cb0[1].xyzx
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mad r2.xyz, r2.xyzx, r0.wwww, r1.xyzx
            dp3_sat r0.w, r1.xyzx, r0.xyzx
            mad r1.xyzw, r0.wwww, cb1[0].xyzw, cb1[1].xyzw
            dp3 r0.w, r2.xyzx, r2.xyzx
            rsq r0.w, r0.w
            mul r2.xyz, r0.wwww, r2.xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, l(64.000000)
            exp r0.x, r0.x
            mul r0.xyzw, r0.xxxx, cb1[2].xyzw
            sample r2.xyzw, v3.xyxx, t0.xyzw, s0
            mul r0.xyzw, r0.xyzw, r2.wwww
            mad o0.xyzw, r1.xyzw, r2.xyzw, r0.xyzw
            ret 
            // Approximately 35 instruction slots used
                    
        };
        DS_StencilRef = uint(0);
        DepthStencilState = EnableDepth;
    }

}

