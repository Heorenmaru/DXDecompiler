
//listing of all techniques and passes with embedded asm listings 

technique RenderScene
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   int index;
            //   
            //   struct
            //   {
            //       float4 Member1;
            //       float2 Member2;
            //
            //   } simpleArr[5];
            //   
            //   struct
            //   {
            //       float4 Member1;
            //       float2 Member2;
            //
            //   } simpleStruct;
            //   
            //   struct
            //   {
            //       int Member1;
            //       
            //       struct
            //       {
            //           float4 Member1;
            //           float2 Member2;
            //
            //       } Member2;
            //       
            //       float2 Member3[2];
            //       float4 Member4;
            //       float4x4 Member5;
            //       float4x4 Member6;
            //
            //   } testStruct;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   simpleArr    c0      10
            //   testStruct   c10     10
            //   simpleStruct c20      2
            //   index        c22      1
            //
            
                preshader
                add r0.x, c22.x, c22.x
                add c1.x, c21.x, c0[r0.x].x
                add c1.y, c21.y, c0[r0.x].y
                add c1.z, c21.y, c0[r0.x].z
                add c1.w, c21.x, c0[r0.x].w
                add r0, c20, c2
                add r1, c10.x, r0
                add r0, r1, c11
                add r1, r0, c15
                add r0.x, r1.x, c16.x
                add c0.x, r0.x, c16.y
                add r0.x, r1.y, c17.x
                add c0.y, r0.x, c17.y
                add r0.x, r1.z, c18.x
                add r0.y, r1.w, c19.x
                add c0.w, r0.y, c19.y
                add c0.z, r0.x, c18.y
                add r0.x, c22.x, (2)
                add r1.x, r0.x, r0.x
                mov c2.xy, c0[r1.x].xy
            
            // approximately 20 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                vs_2_0
                mov oD0, c0
                mov oPos, c1
                mov oT0.xy, c2
            
            // approximately 3 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   struct
            //   {
            //       float4 Member1;
            //       float2 Member2;
            //
            //   } simpleArr[5];
            //   
            //   struct
            //   {
            //       float4 Member1;
            //       float2 Member2;
            //
            //   } simpleStruct;
            //   
            //   struct
            //   {
            //       int Member1;
            //       
            //       struct
            //       {
            //           float4 Member1;
            //           float2 Member2;
            //
            //       } Member2;
            //       
            //       float2 Member3[2];
            //       float4 Member4;
            //       float4x4 Member5;
            //       float4x4 Member6;
            //
            //   } testStruct;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   testStruct   c0      10
            //   simpleArr    c10      3
            //   simpleStruct c13      1
            //
            
                preshader
                add r0, c13, c12
                add r1, c0.x, r0
                add r0, r1, c1
                add r1, r0, c5
                add r0.x, r1.x, c6.x
                add c0.x, r0.x, c6.y
                add r0.x, r1.y, c7.x
                add c0.y, r0.x, c7.y
                add r0.x, r1.z, c8.x
                add r0.y, r1.w, c9.x
                add c0.w, r0.y, c9.y
                add c0.z, r0.x, c8.y
            
            // approximately 12 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                mov oC0, c0
            
            // approximately 1 instruction slot used
            };
    }
}

