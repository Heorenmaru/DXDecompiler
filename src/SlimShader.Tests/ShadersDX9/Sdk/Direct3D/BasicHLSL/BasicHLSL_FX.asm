
//listing of all techniques and passes with embedded asm listings 

technique RenderSceneWithTexture1Light
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightAmbient;
            //   float4 g_MaterialAmbientColor;
            //   float g_fTime;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_MaterialAmbientColor c0       1
            //   g_LightAmbient         c1       1
            //   g_fTime                c2       1
            //
            
                preshader
                add r0.x, c2.x, (5.5)
                mul r1.x, r0.x, (0.159154943)
                add r0.x, r1.x, (0.5)
                frc r1.x, r0.x
                mul r0.x, r1.x, (6.28318531)
                add r1.x, r0.x, (-3.14159265)
                sin r0.y, r1.x
                add c7.x, r0.y, (0.5)
                mul c9.xyz, c0.xyz, c1.xyz
            
            // approximately 9 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightDiffuse[3];
            //   float3 g_LightDir[3];
            //   float4 g_MaterialDiffuseColor;
            //   float4x4 g_mWorld;
            //   float4x4 g_mWorldViewProjection;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_mWorldViewProjection c0       4
            //   g_mWorld               c4       3
            //   g_MaterialDiffuseColor c10      1
            //   g_LightDir             c11      1
            //   g_LightDiffuse         c12      1
            //
            
                vs_2_0
                def c13, 5, 0, 1, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mul r0.xyz, v1, c7.x
                mad r0.xyz, r0, c13.x, v0
                mov r0.w, v0.w
                dp4 oPos.x, r0, c0
                dp4 oPos.y, r0, c1
                dp4 oPos.z, r0, c2
                dp4 oPos.w, r0, c3
                dp3 r0.x, v1, c4
                dp3 r0.y, v1, c5
                dp3 r0.z, v1, c6
                nrm r1.xyz, r0
                dp3 r0.x, r1, c11
                max r0.x, r0.x, c13.y
                mul r0.xyz, r0.x, c12
                mov r1.xyz, c10
                mad oD0.xyz, r1, r0, c9
                mov oD0.w, c13.z
                mov oT0.xy, v2
            
            // approximately 20 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D MeshTextureSampler;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   MeshTextureSampler s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
}

technique RenderSceneWithTexture2Light
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightAmbient;
            //   float4 g_MaterialAmbientColor;
            //   float g_fTime;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_MaterialAmbientColor c0       1
            //   g_LightAmbient         c1       1
            //   g_fTime                c2       1
            //
            
                preshader
                add r0.x, c2.x, (5.5)
                mul r1.x, r0.x, (0.159154943)
                add r0.x, r1.x, (0.5)
                frc r1.x, r0.x
                mul r0.x, r1.x, (6.28318531)
                add r1.x, r0.x, (-3.14159265)
                sin r0.y, r1.x
                add c7.x, r0.y, (0.5)
                mul c9.xyz, c0.xyz, c1.xyz
            
            // approximately 9 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightDiffuse[3];
            //   float3 g_LightDir[3];
            //   float4 g_MaterialDiffuseColor;
            //   float4x4 g_mWorld;
            //   float4x4 g_mWorldViewProjection;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_mWorldViewProjection c0       4
            //   g_mWorld               c4       3
            //   g_LightDir             c10      2
            //   g_LightDiffuse         c12      2
            //   g_MaterialDiffuseColor c14      1
            //
            
                vs_2_0
                def c15, 5, 0, 1, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mul r0.xyz, v1, c7.x
                mad r0.xyz, r0, c15.x, v0
                mov r0.w, v0.w
                dp4 oPos.x, r0, c0
                dp4 oPos.y, r0, c1
                dp4 oPos.z, r0, c2
                dp4 oPos.w, r0, c3
                dp3 r0.x, v1, c4
                dp3 r0.y, v1, c5
                dp3 r0.z, v1, c6
                nrm r1.xyz, r0
                dp3 r0.x, r1, c11
                dp3 r0.y, r1, c10
                max r0.xy, r0, c15.y
                mul r0.xzw, r0.x, c13.xyyz
                mad r0.xyz, c12, r0.y, r0.xzww
                mov r1.xyz, c14
                mad oD0.xyz, r1, r0, c9
                mov oD0.w, c15.z
                mov oT0.xy, v2
            
            // approximately 22 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D MeshTextureSampler;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   MeshTextureSampler s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
}

technique RenderSceneWithTexture3Light
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightAmbient;
            //   float4 g_MaterialAmbientColor;
            //   float g_fTime;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_MaterialAmbientColor c0       1
            //   g_LightAmbient         c1       1
            //   g_fTime                c2       1
            //
            
                preshader
                add r0.x, c2.x, (5.5)
                mul r1.x, r0.x, (0.159154943)
                add r0.x, r1.x, (0.5)
                frc r1.x, r0.x
                mul r0.x, r1.x, (6.28318531)
                add r1.x, r0.x, (-3.14159265)
                sin r0.y, r1.x
                add c13.x, r0.y, (0.5)
                mul c15.xyz, c0.xyz, c1.xyz
            
            // approximately 9 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightDiffuse[3];
            //   float3 g_LightDir[3];
            //   float4 g_MaterialDiffuseColor;
            //   float4x4 g_mWorld;
            //   float4x4 g_mWorldViewProjection;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_mWorldViewProjection c0       4
            //   g_LightDir             c4       3
            //   g_LightDiffuse         c7       3
            //   g_mWorld               c10      3
            //   g_MaterialDiffuseColor c16      1
            //
            
                vs_2_0
                def c17, 5, 0, 1, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mul r0.xyz, v1, c13.x
                mad r0.xyz, r0, c17.x, v0
                mov r0.w, v0.w
                dp4 oPos.x, r0, c0
                dp4 oPos.y, r0, c1
                dp4 oPos.z, r0, c2
                dp4 oPos.w, r0, c3
                dp3 r0.x, v1, c10
                dp3 r0.y, v1, c11
                dp3 r0.z, v1, c12
                nrm r1.xyz, r0
                dp3 r0.x, r1, c5
                max r0.x, r0.x, c17.y
                mul r0.xyz, r0.x, c8
                dp3 r0.w, r1, c4
                dp3 r1.x, r1, c6
                max r1.x, r1.x, c17.y
                max r0.w, r0.w, c17.y
                mad r0.xyz, c7, r0.w, r0
                mad r0.xyz, c9, r1.x, r0
                mov r1.xyz, c16
                mad oD0.xyz, r1, r0, c15
                mov oD0.w, c17.z
                mov oT0.xy, v2
            
            // approximately 26 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D MeshTextureSampler;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   MeshTextureSampler s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
}

technique RenderSceneNoTexture
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightAmbient;
            //   float4 g_MaterialAmbientColor;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_MaterialAmbientColor c0       1
            //   g_LightAmbient         c1       1
            //
            
                preshader
                mul c10.xyz, c0.xyz, c1.xyz
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 g_LightDiffuse[3];
            //   float3 g_LightDir[3];
            //   float4 g_MaterialDiffuseColor;
            //   float4x4 g_mWorld;
            //   float4x4 g_mWorldViewProjection;
            //
            //
            // Registers:
            //
            //   Name                   Reg   Size
            //   ---------------------- ----- ----
            //   g_mWorldViewProjection c0       4
            //   g_mWorld               c4       3
            //   g_MaterialDiffuseColor c7       1
            //   g_LightDir             c8       1
            //   g_LightDiffuse         c9       1
            //
            
                vs_2_0
                def c11, 0, 1, 0, 0
                dcl_position v0
                dcl_normal v1
                dp4 oPos.x, v0, c0
                dp4 oPos.y, v0, c1
                dp4 oPos.z, v0, c2
                dp4 oPos.w, v0, c3
                dp3 r0.x, v1, c4
                dp3 r0.y, v1, c5
                dp3 r0.z, v1, c6
                nrm r1.xyz, r0
                dp3 r0.x, r1, c8
                max r0.x, r0.x, c11.x
                mul r0.xyz, r0.x, c9
                mov r1.xyz, c7
                mad oD0.xyz, r1, r0, c10
                mov oD0.w, c11.y
                mov oT0.xy, c11.x
            
            // approximately 17 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                dcl v0
                mov oC0, v0
            
            // approximately 1 instruction slot used
            };
    }
}

