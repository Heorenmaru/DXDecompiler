
//listing of all techniques and passes with embedded asm listings 

technique PostProcess
{
    pass p0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float Luminance;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   Luminance    c0       1
            //
            
                preshader
                add r0.x, c0.x, (0.00100000005)
                rcp r1.x, r0.x
                mul c0.x, r1.x, (0.180000007)
            
            // approximately 3 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D g_samSrcColor;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   g_samSrcColor s0       1
            //
            
                ps_2_0
                def c1, 1.5625, 1, -5, 0
                def c2, 10, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0.xyz, r0, c0.x
                mad r1.xyz, r0, c1.x, c1.y
                mad r0.xyz, r0, r1, c1.z
                max r1.xyz, r0, c1.w
                add r0.xyz, r1, c2.x
                rcp r2.x, r0.x
                rcp r2.y, r0.y
                rcp r2.z, r0.z
                mul r0.xyz, r1, r2
                mov r0.w, c1.y
                mov oC0, r0
            
            // approximately 12 instruction slots used (1 texture, 11 arithmetic)
            };
    }
}

