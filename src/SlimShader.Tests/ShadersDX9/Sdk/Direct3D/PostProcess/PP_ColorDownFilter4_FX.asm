
//listing of all techniques and passes with embedded asm listings 

technique PostProcess
{
    pass p0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float2 TexelCoordsDownFilter[16];
            //   sampler2D g_samSrcColor;
            //
            //
            // Registers:
            //
            //   Name                  Reg   Size
            //   --------------------- ----- ----
            //   TexelCoordsDownFilter c0      16
            //   g_samSrcColor         s0       1
            //
            
                ps_2_0
                def c16, 0.0625, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                add r0.xy, t0, c0
                add r1.xy, t0, c1
                add r2.xy, t0, c2
                add r3.xy, t0, c3
                add r4.xy, t0, c4
                add r5.xy, t0, c5
                add r6.xy, t0, c6
                add r7.xy, t0, c7
                add r8.xy, t0, c8
                add r9.xy, t0, c9
                add r10.xy, t0, c10
                texld r0, r0, s0
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r4, r4, s0
                texld r5, r5, s0
                texld r6, r6, s0
                texld r7, r7, s0
                texld r8, r8, s0
                texld r9, r9, s0
                texld r10, r10, s0
                add r0, r0, r1
                add r0, r2, r0
                add r0, r3, r0
                add r0, r4, r0
                add r0, r5, r0
                add r0, r6, r0
                add r0, r7, r0
                add r0, r8, r0
                add r0, r9, r0
                add r0, r10, r0
                add r1.xy, t0, c11
                add r2.xy, t0, c12
                add r3.xy, t0, c13
                add r4.xy, t0, c14
                add r5.xy, t0, c15
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r4, r4, s0
                texld r5, r5, s0
                add r0, r0, r1
                add r0, r2, r0
                add r0, r3, r0
                add r0, r4, r0
                add r0, r5, r0
                mul r0, r0, c16.x
                mov oC0, r0
            
            // approximately 49 instruction slots used (16 texture, 33 arithmetic)
            };
    }
}

