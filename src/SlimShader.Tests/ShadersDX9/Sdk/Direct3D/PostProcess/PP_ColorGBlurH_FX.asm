
//listing of all techniques and passes with embedded asm listings 

technique PostProcess
{
    pass p0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float2 TexelKernel[13];
            //   sampler2D g_samSrcColor;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   TexelKernel   c0      13
            //   g_samSrcColor s0       1
            //
            
                ps_2_0
                def c13, 0.00876399968, 0.00221600011, 0.0269949995, 0.0647590011
                def c14, 0.120985001, 0.176033005, 0.199470997, 0
                dcl t0.xy
                dcl_2d s0
                add r0.xy, t0, c1
                add r1.xy, t0, c0
                add r2.xy, t0, c2
                add r3.xy, t0, c3
                add r4.xy, t0, c4
                add r5.xy, t0, c5
                add r6.xy, t0, c6
                add r7.xy, t0, c7
                add r8.xy, t0, c8
                add r9.xy, t0, c9
                add r10.xy, t0, c10
                texld r0, r0, s0
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r4, r4, s0
                texld r5, r5, s0
                texld r6, r6, s0
                texld r7, r7, s0
                texld r8, r8, s0
                texld r9, r9, s0
                texld r10, r10, s0
                mul r0, r0, c13.x
                mad r0, r1, c13.y, r0
                mad r0, r2, c13.z, r0
                mad r0, r3, c13.w, r0
                mad r0, r4, c14.x, r0
                mad r0, r5, c14.y, r0
                mad r0, r6, c14.z, r0
                mad r0, r7, c14.y, r0
                mad r0, r8, c14.x, r0
                mad r0, r9, c13.w, r0
                mad r0, r10, c13.z, r0
                add r1.xy, t0, c11
                add r2.xy, t0, c12
                texld r1, r1, s0
                texld r2, r2, s0
                mad r0, r1, c13.x, r0
                mad r0, r2, c13.y, r0
                mov oC0, r0
            
            // approximately 40 instruction slots used (13 texture, 27 arithmetic)
            };
    }
}

