
//listing of all techniques and passes with embedded asm listings 

technique PostProcess
{
    pass p0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float2 TexelKernel[4];
            //   sampler2D g_samSrcNormal;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TexelKernel    c0       4
            //   g_samSrcNormal s0       1
            //
            
                ps_2_0
                def c4, 1, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                add r0.xy, t0, c0
                add r1.xy, t0, c1
                add r2.xy, t0, c2
                add r3.xy, t0, c3
                texld r0, r0, s0
                texld r4, t0, s0
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                dp3 r1.w, r4, r0
                add_sat r1.w, -r1.w, c4.x
                dp3 r2.w, r4, r1
                add_sat r2.w, -r2.w, c4.x
                add r2.w, r1.w, r2.w
                dp3 r3.w, r4, r2
                add_sat r3.w, -r3.w, c4.x
                add r3.w, r2.w, r3.w
                dp3 r0.x, r4, r3
                add_sat r0.x, -r0.x, c4.x
                add r0, r0.x, r3.w
                mov oC0, r0
            
            // approximately 21 instruction slots used (5 texture, 16 arithmetic)
            };
    }
}

