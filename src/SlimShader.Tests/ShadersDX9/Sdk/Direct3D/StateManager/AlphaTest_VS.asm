
//listing of all techniques and passes with embedded asm listings 

technique tec0
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 Ambient;
            //   float4 I_a;
            //   float4x4 matViewProj;
            //   float4x4 matWorld;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   matWorld     c0       4
            //   matViewProj  c4       4
            //   I_a          c8       1
            //   Ambient      c9       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r1, c4.y, c1
                add r2, r0, r1
                mul r0, c4.z, c2
                add r1, r0, r2
                mul r0, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r1, c5.y, c1
                add r2, r0, r1
                mul r0, c5.z, c2
                add r1, r0, r2
                mul r0, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r1, c6.y, c1
                add r2, r0, r1
                mul r0, c6.z, c2
                add r1, r0, r2
                mul r0, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r1, c7.y, c1
                add r2, r0, r1
                mul r0, c7.z, c2
                add r1, r0, r2
                mul r0, c7.w, c3
                add c3, r0, r1
                mul c4, c8, c9
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 Diffuse;
            //   float4 I_d;
            //   float3 lightDir;
            //   float4x4 matWorld;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   matWorld     c5       3
            //   lightDir     c8       1
            //   I_d          c9       1
            //   Diffuse      c10      1
            //
            
                vs_2_0
                def c11, 1, 0, 0, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mad r0, v0.xyzx, c11.xxxy, c11.yyyx
                dp4 oPos.x, r0, c0
                dp4 oPos.y, r0, c1
                dp4 oPos.z, r0, c2
                dp4 oPos.w, r0, c3
                dp3 r0.x, v1, c5
                dp3 r0.y, v1, c6
                dp3 r0.z, v1, c7
                nrm r1.xyz, r0
                dp3 r0.x, -c8, r1
                abs r0.x, r0.x
                mul r0, r0.x, c10
                mov r1, c9
                mad r0, r0, r1, c4
                max r0, r0, c11.y
                min oD0, r0, c11.x
                mov oT0.xy, v2
            
            // approximately 19 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   s0           s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
}

