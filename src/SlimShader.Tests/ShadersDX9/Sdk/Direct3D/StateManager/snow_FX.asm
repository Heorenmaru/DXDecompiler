
//listing of all techniques and passes with embedded asm listings 

technique tec0
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float3 lightDir;
            //   float4x4 matViewInv;
            //   float4x4 matViewProj;
            //   float4x4 matWorld;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   matWorld     c0       4
            //   matViewProj  c4       4
            //   matViewInv   c8       3
            //   lightDir     c11      1
            //
            
                vs_2_0
                def c12, 1, 0, 0.5, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                dcl_tangent v3
                mad r0, v0.xyzx, c12.xxxy, c12.yyyx
                dp4 r1.w, r0, c3
                dp4 r1.x, r0, c0
                dp4 r1.y, r0, c1
                dp4 r1.z, r0, c2
                dp4 oPos.x, r1, c4
                dp4 oPos.y, r1, c5
                dp4 oPos.z, r1, c6
                dp4 oPos.w, r1, c7
                add r0.x, -r1.x, c8.w
                add r0.y, -r1.y, c9.w
                add r0.z, -r1.z, c10.w
                nrm r1.xyz, r0
                add r0.xyz, r1, -c11
                nrm r1.xyz, r0
                dp3 r0.x, v3, c0
                dp3 r0.y, v3, c1
                dp3 r0.z, v3, c2
                dp3 r2.x, r1, r0
                dp3 r3.x, v1, c0
                dp3 r3.y, v1, c1
                dp3 r3.z, v1, c2
                dp3 r2.z, r1, r3
                mul r4.xyz, r0.zxyw, r3.yzxw
                mad r4.xyz, r0.yzxw, r3.zxyw, -r4
                dp3 r3.z, -c11, r3
                dp3 r3.x, -c11, r0
                dp3 r2.y, r1, r4
                dp3 r3.y, -c11, r4
                mad oT1.xyz, r3, c12.z, c12.z
                mad oT2.xyz, r2, c12.z, c12.z
                mov oT0.xy, v2
            
            // approximately 36 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 Ambient;
            //   float4 I_a;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   I_a          c0       1
            //   Ambient      c1       1
            //
            
                preshader
                mul c3.xyz, c0.xyz, c1.xyz
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 Diffuse;
            //   float4 I_d;
            //   float4 Specular;
            //   sampler2D normal_sampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   I_d            c0       1
            //   Diffuse        c1       1
            //   Specular       c2       1
            //   normal_sampler s0       1
            //
            
                ps_2_0
                def c4, 2, -1, 1, 0
                dcl t0.xy
                dcl t1.xyz
                dcl t2.xyz
                dcl_2d s0
                texld r0, t0, s0
                mad r1.xyz, t2, c4.x, c4.y
                mad r0.xyz, r0, c4.x, c4.y
                dp3 r1.x, r0, r1
                mul r1.x, r1.x, r1.x
                mul r1.x, r1.x, r1.x
                mul r1.x, r1.x, r1.x
                mul r1.xyz, r1.x, c2
                mad r2.xyz, t1, c4.x, c4.y
                dp3 r1.w, r0, r2
                mul r0.xyz, r1.w, c1
                mov r2.xyz, c0
                mad r0.xyz, r0, r2, c3
                mad r0.xyz, r1, r0.w, r0
                mov r0.w, c4.z
                mov oC0, r0
            
            // approximately 16 instruction slots used (1 texture, 15 arithmetic)
            };
    }
}

