
//listing of all techniques and passes with embedded asm listings 

technique tec0
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 Ambient;
            //   float4 Diffuse;
            //   float4 I_a;
            //   float4 I_d;
            //   float4 I_s;
            //   float Power;
            //   float4 Specular;
            //   float3 lightDir;
            //   float4x4 matView;
            //   float4x4 matWorld;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   matWorld     c0       4
            //   matView      c4       3
            //   lightDir     c7       1
            //   I_a          c8       1
            //   I_d          c9       1
            //   I_s          c10      1
            //   Diffuse      c11      1
            //   Ambient      c12      1
            //   Specular     c13      1
            //   Power        c14      1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r1, c4.y, c1
                add r2, r0, r1
                mul r0, c4.z, c2
                add r1, r0, r2
                mul r0, c4.w, c3
                add c1, r0, r1
                mul r0, c5.x, c0
                mul r1, c5.y, c1
                add r2, r0, r1
                mul r0, c5.z, c2
                add r1, r0, r2
                mul r0, c5.w, c3
                add c2, r0, r1
                mul r0, c6.x, c0
                mul r1, c6.y, c1
                add r2, r0, r1
                mul r0, c6.z, c2
                add r1, r0, r2
                mul r0, c6.w, c3
                add c3, r0, r1
                dot r0.xyz, c7.xyz, c4.xyz
                dot r0.yzw, c7.xyz, c5.xyz
                dot r0.zwx, c7.xyz, c6.xyz
                dot r1.xyz, r0.xyz, r0.xyz
                rsq r0.w, r1.x
                mul c0.xyz, r0.w, r0.xyz
                mul c5.xyz, c8.xyz, c12.xyz
                mul c4.xyz, c9.xyz, c11.xyz
                mul c7.xyz, c10.xyz, c13.xyz
                mul c6.x, c14.x, (0.25)
            
            // approximately 31 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float k_r;
            //   float4x4 matProj;
            //   float4x4 matView;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   matProj      c8       4
            //   matView      c12      3
            //   k_r          c15      1
            //
            
                vs_2_0
                def c16, 1, 0, 0.5, 4
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mov r0.w, c16.x
                mad r1, v0.xyzx, c16.xxxy, c16.yyyx
                dp4 r0.x, r1, c1
                dp4 r0.y, r1, c2
                dp4 r0.z, r1, c3
                dp4 oPos.x, r0, c8
                dp4 oPos.y, r0, c9
                dp4 oPos.z, r0, c10
                dp4 oPos.w, r0, c11
                dp3 r1.x, v1, c1
                dp3 r1.y, v1, c2
                dp3 r1.z, v1, c3
                nrm r2.xyz, r1
                dp3 r0.w, r2, -c0
                max r1.x, r0.w, c16.y
                add r0.w, r0.w, r0.w
                mad r1.yzw, r0.w, r2.xxyz, c0.xxyz
                nrm r3.xyz, r1.yzww
                mov r4.xyz, c4
                mad oD0.xyz, r4, r1.x, c5
                nrm r1.xyz, r0
                dp3 r0.w, r3, -r1
                dp3 r1.x, -r1, r2
                add r1.x, -r1.x, c16.z
                mul r1.x, r1.x, r1.x
                mad r1.x, r1.x, -c16.w, c16.x
                mul r1.x, r1.x, c15.x
                max oT2.xyz, r1.x, c16.y
                max r0.w, r0.w, c16.y
                pow r1.x, r0.w, c6.x
                mul oD1.xyz, r1.x, c7
                dp3 r0.w, r2, -r0
                add r0.w, r0.w, r0.w
                mad r0.xyz, r0.w, r2, r0
                nrm r1.xyz, r0
                mul r0.xyz, r1.y, c13
                mad r0.xyz, r1.x, c12, r0
                mad oT1.xyz, r1.z, c14, r0
                mov oT0.xy, v2
            
            // approximately 49 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   samplerCUBE envmap_sampler;
            //   sampler2D linear_sampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   linear_sampler s0       1
            //   envmap_sampler s1       1
            //
            
                ps_2_0
                def c0, 1, 0, 0, 0
                dcl v0.xyz
                dcl v1.xyz
                dcl t0.xy
                dcl t1.xyz
                dcl t2.x
                dcl_2d s0
                dcl_cube s1
                texld r0, t1, s1
                texld r1, t0, s0
                mul r0.xyz, r0, t2.x
                mad r0.xyz, v0, r1, r0
                add r0.xyz, r0, v1
                mov r0.w, c0.x
                mov oC0, r0
            
            // approximately 7 instruction slots used (2 texture, 5 arithmetic)
            };
    }
}

