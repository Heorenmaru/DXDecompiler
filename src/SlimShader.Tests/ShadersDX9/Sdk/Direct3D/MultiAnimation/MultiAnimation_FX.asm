vertexshader vsArray20[4] = 
{
//listing for: vsArray20[0]
asm {
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 MaterialAmbient;
//   float4 MaterialDiffuse;
//   float4x3 amPalette[26];
//   float4x4 g_mViewProj;
//   float4 lhtDir;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   amPalette       c0      78
//   g_mViewProj     c78      4
//   lhtDir          c82      1
//   MaterialAmbient c83      1
//   MaterialDiffuse c84      1
//

    vs_2_0
    def c85, 765.005859, 1, 0, 0
    dcl_position v0
    dcl_blendindices v1
    dcl_normal v2
    dcl_texcoord v3
    mov r0.w, c85.y
    mul r1.x, v1.z, c85.x
    mova a0.x, r1.x
    dp4 r0.x, v0, c0[a0.x]
    dp4 r0.y, v0, c1[a0.x]
    dp4 r0.z, v0, c2[a0.x]
    dp4 oPos.x, r0, c78
    dp4 oPos.y, r0, c79
    dp4 oPos.z, r0, c80
    dp4 oPos.w, r0, c81
    dp3 r0.x, v2, c0[a0.x]
    dp3 r0.y, v2, c1[a0.x]
    dp3 r0.z, v2, c2[a0.x]
    nrm r1.xyz, r0
    dp3 r0.x, r1, c82
    max r0.x, r0.x, c85.z
    min r0.x, r0.x, c85.y
    mov r1.xyz, c84
    mad oD0.xyz, r0.x, r1, c83
    mov oD0.w, c85.y
    mov oT0.xy, v3

// approximately 23 instruction slots used
},

//listing for: vsArray20[1]
asm {
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 MaterialAmbient;
//   float4 MaterialDiffuse;
//   float4x3 amPalette[26];
//   float4x4 g_mViewProj;
//   float4 lhtDir;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   amPalette       c0      78
//   g_mViewProj     c78      4
//   lhtDir          c82      1
//   MaterialAmbient c83      1
//   MaterialDiffuse c84      1
//

    vs_2_0
    def c85, 765.005859, 1, 0, 0
    dcl_position v0
    dcl_blendweight v1
    dcl_blendindices v2
    dcl_normal v3
    dcl_texcoord v4
    mul r0.xy, v2.zyzw, c85.x
    mova a0.xy, r0
    dp4 r0.x, v0, c0[a0.x]
    dp4 r0.y, v0, c1[a0.x]
    dp4 r0.z, v0, c2[a0.x]
    dp4 r1.x, v0, c0[a0.y]
    dp4 r1.y, v0, c1[a0.y]
    dp4 r1.z, v0, c2[a0.y]
    lrp r2.xyz, v1.x, r0, r1
    mov r2.w, c85.y
    dp4 oPos.x, r2, c78
    dp4 oPos.y, r2, c79
    dp4 oPos.z, r2, c80
    dp4 oPos.w, r2, c81
    dp3 r0.x, v3, c0[a0.x]
    dp3 r0.y, v3, c1[a0.x]
    dp3 r0.z, v3, c2[a0.x]
    dp3 r1.x, v3, c0[a0.y]
    dp3 r1.y, v3, c1[a0.y]
    dp3 r1.z, v3, c2[a0.y]
    lrp r2.xyz, v1.x, r0, r1
    nrm r0.xyz, r2
    dp3 r0.x, r0, c82
    max r0.x, r0.x, c85.z
    min r0.x, r0.x, c85.y
    mov r1.xyz, c84
    mad oD0.xyz, r0.x, r1, c83
    mov oD0.w, c85.y
    mov oT0.xy, v4

// approximately 31 instruction slots used
},

//listing for: vsArray20[2]
asm {
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 MaterialAmbient;
//   float4 MaterialDiffuse;
//   float4x3 amPalette[26];
//   float4x4 g_mViewProj;
//   float4 lhtDir;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   amPalette       c0      78
//   g_mViewProj     c78      4
//   lhtDir          c82      1
//   MaterialAmbient c83      1
//   MaterialDiffuse c84      1
//

    vs_2_0
    def c85, 1, 765.005859, 0, 0
    dcl_position v0
    dcl_blendweight v1
    dcl_blendindices v2
    dcl_normal v3
    dcl_texcoord v4
    add r0.x, -v1.x, c85.x
    add r0.x, r0.x, -v1.y
    mul r0.yzw, v2.xzyx, c85.y
    mova a0.xyz, r0.zyww
    dp4 r1.x, v0, c0[a0.x]
    dp4 r1.y, v0, c1[a0.x]
    dp4 r1.z, v0, c2[a0.x]
    mul r1.xyz, r1, v1.y
    dp4 r2.x, v0, c0[a0.y]
    dp4 r2.y, v0, c1[a0.y]
    dp4 r2.z, v0, c2[a0.y]
    mad r0.yzw, r2.xxyz, v1.x, r1.xxyz
    dp4 r1.x, v0, c0[a0.z]
    dp4 r1.y, v0, c1[a0.z]
    dp4 r1.z, v0, c2[a0.z]
    mad r1.xyz, r1, r0.x, r0.yzww
    mov r1.w, c85.x
    dp4 oPos.x, r1, c78
    dp4 oPos.y, r1, c79
    dp4 oPos.z, r1, c80
    dp4 oPos.w, r1, c81
    dp3 r1.x, v3, c0[a0.x]
    dp3 r1.y, v3, c1[a0.x]
    dp3 r1.z, v3, c2[a0.x]
    mul r0.yzw, r1.xxyz, v1.y
    dp3 r1.x, v3, c0[a0.y]
    dp3 r1.y, v3, c1[a0.y]
    dp3 r1.z, v3, c2[a0.y]
    mad r0.yzw, r1.xxyz, v1.x, r0
    dp3 r1.x, v3, c0[a0.z]
    dp3 r1.y, v3, c1[a0.z]
    dp3 r1.z, v3, c2[a0.z]
    mad r0.xyz, r1, r0.x, r0.yzww
    nrm r1.xyz, r0
    dp3 r0.x, r1, c82
    max r0.x, r0.x, c85.z
    min r0.x, r0.x, c85.x
    mov r1.xyz, c84
    mad oD0.xyz, r0.x, r1, c83
    mov oD0.w, c85.x
    mov oT0.xy, v4

// approximately 43 instruction slots used
},

//listing for: vsArray20[3]
asm {
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 MaterialAmbient;
//   float4 MaterialDiffuse;
//   float4x3 amPalette[26];
//   float4x4 g_mViewProj;
//   float4 lhtDir;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   amPalette       c0      78
//   g_mViewProj     c78      4
//   lhtDir          c82      1
//   MaterialAmbient c83      1
//   MaterialDiffuse c84      1
//

    vs_2_0
    def c85, 1, 765.005859, 0, 0
    dcl_position v0
    dcl_blendweight v1
    dcl_blendindices v2
    dcl_normal v3
    dcl_texcoord v4
    add r0.x, -v1.x, c85.x
    add r0.x, r0.x, -v1.y
    add r0.x, r0.x, -v1.z
    mul r1, v2.zyxw, c85.y
    mova a0, r1.yxzw
    dp4 r2.x, v0, c0[a0.x]
    dp4 r2.y, v0, c1[a0.x]
    dp4 r2.z, v0, c2[a0.x]
    mul r0.yzw, r2.xxyz, v1.y
    dp4 r2.x, v0, c0[a0.y]
    dp4 r2.y, v0, c1[a0.y]
    dp4 r2.z, v0, c2[a0.y]
    mad r0.yzw, r2.xxyz, v1.x, r0
    dp4 r1.x, v0, c0[a0.z]
    dp4 r1.y, v0, c1[a0.z]
    dp4 r1.z, v0, c2[a0.z]
    mad r0.yzw, r1.xxyz, v1.z, r0
    dp4 r1.x, v0, c0[a0.w]
    dp4 r1.y, v0, c1[a0.w]
    dp4 r1.z, v0, c2[a0.w]
    mad r1.xyz, r1, r0.x, r0.yzww
    mov r1.w, c85.x
    dp4 oPos.x, r1, c78
    dp4 oPos.y, r1, c79
    dp4 oPos.z, r1, c80
    dp4 oPos.w, r1, c81
    dp3 r1.x, v3, c0[a0.x]
    dp3 r1.y, v3, c1[a0.x]
    dp3 r1.z, v3, c2[a0.x]
    mul r0.yzw, r1.xxyz, v1.y
    dp3 r1.x, v3, c0[a0.y]
    dp3 r1.y, v3, c1[a0.y]
    dp3 r1.z, v3, c2[a0.y]
    mad r0.yzw, r1.xxyz, v1.x, r0
    dp3 r1.x, v3, c0[a0.z]
    dp3 r1.y, v3, c1[a0.z]
    dp3 r1.z, v3, c2[a0.z]
    mad r0.yzw, r1.xxyz, v1.z, r0
    dp3 r1.x, v3, c0[a0.w]
    dp3 r1.y, v3, c1[a0.w]
    dp3 r1.z, v3, c2[a0.w]
    mad r0.xyz, r1, r0.x, r0.yzww
    nrm r1.xyz, r0
    dp3 r0.x, r1, c82
    max r0.x, r0.x, c85.z
    min r0.x, r0.x, c85.x
    mov r1.xyz, c84
    mad oD0.xyz, r0.x, r1, c83
    mov oD0.w, c85.x
    mov oT0.xy, v4

// approximately 52 instruction slots used
}};

//listing of all techniques and passes with embedded asm listings 

technique RenderScene
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4x4 g_mViewProj;
            //   float4x4 g_mWorld;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   g_mWorld     c0       4
            //   g_mViewProj  c4       4
            //
            
                vs_2_0
                def c8, 1, 0, 0, 0
                dcl_position v0
                dcl_texcoord v1
                dp4 r0.x, v0, c0
                dp4 r0.y, v0, c1
                dp4 r0.z, v0, c2
                dp4 r0.w, v0, c3
                dp4 oPos.x, r0, c4
                dp4 oPos.y, r0, c5
                dp4 oPos.z, r0, c6
                dp4 oPos.w, r0, c7
                mov oD0, c8.x
                mov oT0.xy, v1
            
            // approximately 10 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D g_samScene;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   g_samScene   s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
}

technique Skinning20
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   float4 MaterialAmbient;
            //   float4 MaterialDiffuse;
            //   float4x3 amPalette[26];
            //   float4x4 g_mViewProj;
            //   float4 lhtDir;
            //
            //
            // Registers:
            //
            //   Name            Reg   Size
            //   --------------- ----- ----
            //   amPalette       c0      78
            //   g_mViewProj     c78      4
            //   lhtDir          c82      1
            //   MaterialAmbient c83      1
            //   MaterialDiffuse c84      1
            //
            
                vs_2_0
                def c85, 1, 765.005859, 0, 0
                dcl_position v0
                dcl_blendweight v1
                dcl_blendindices v2
                dcl_normal v3
                dcl_texcoord v4
                add r0.x, -v1.x, c85.x
                add r0.x, r0.x, -v1.y
                mul r0.yzw, v2.xzyx, c85.y
                mova a0.xyz, r0.zyww
                dp4 r1.x, v0, c0[a0.x]
                dp4 r1.y, v0, c1[a0.x]
                dp4 r1.z, v0, c2[a0.x]
                mul r1.xyz, r1, v1.y
                dp4 r2.x, v0, c0[a0.y]
                dp4 r2.y, v0, c1[a0.y]
                dp4 r2.z, v0, c2[a0.y]
                mad r0.yzw, r2.xxyz, v1.x, r1.xxyz
                dp4 r1.x, v0, c0[a0.z]
                dp4 r1.y, v0, c1[a0.z]
                dp4 r1.z, v0, c2[a0.z]
                mad r1.xyz, r1, r0.x, r0.yzww
                mov r1.w, c85.x
                dp4 oPos.x, r1, c78
                dp4 oPos.y, r1, c79
                dp4 oPos.z, r1, c80
                dp4 oPos.w, r1, c81
                dp3 r1.x, v3, c0[a0.x]
                dp3 r1.y, v3, c1[a0.x]
                dp3 r1.z, v3, c2[a0.x]
                mul r0.yzw, r1.xxyz, v1.y
                dp3 r1.x, v3, c0[a0.y]
                dp3 r1.y, v3, c1[a0.y]
                dp3 r1.z, v3, c2[a0.y]
                mad r0.yzw, r1.xxyz, v1.x, r0
                dp3 r1.x, v3, c0[a0.z]
                dp3 r1.y, v3, c1[a0.z]
                dp3 r1.z, v3, c2[a0.z]
                mad r0.xyz, r1, r0.x, r0.yzww
                nrm r1.xyz, r0
                dp3 r0.x, r1, c82
                max r0.x, r0.x, c85.z
                min r0.x, r0.x, c85.x
                mov r1.xyz, c84
                mad oD0.xyz, r0.x, r1, c83
                mov oD0.w, c85.x
                mov oT0.xy, v4
            
            // approximately 43 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D g_samScene;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   g_samScene   s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
}

